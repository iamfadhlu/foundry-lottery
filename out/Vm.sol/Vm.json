{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"copyStorage","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByCode","inputs":[{"name":"code","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByDeployedCode","inputs":[{"name":"deployedCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getFoundryVersion","inputs":[],"outputs":[{"name":"version","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockFunction","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlTypeArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"publicKeyP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomBool","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"randomBytes","inputs":[{"name":"len","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"},{"name":"reason","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","assumeNoRevert()":"285b366a","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","copyStorage(address,address)":"203dac0d","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectPartialRevert(bytes4)":"11fb5b9c","expectPartialRevert(bytes4,address)":"51aa008a","expectRevert()":"f4844814","expectRevert(address)":"d814f38a","expectRevert(bytes)":"f28dceb3","expectRevert(bytes,address)":"61ebcf12","expectRevert(bytes4)":"c31eb0e0","expectRevert(bytes4,address)":"260bc5de","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getArtifactPathByCode(bytes)":"eb74848c","getArtifactPathByDeployedCode(bytes)":"6d853ba5","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getFoundryVersion()":"ea991bb5","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","mockFunction(address,address,bytes)":"adf84d21","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlType(string,string)":"47fa5e11","parseTomlType(string,string,string)":"f9fa5cdb","parseTomlTypeArray(string,string,string)":"49be3743","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","pauseTracing()":"c94d1f90","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","publicKeyP256(uint256)":"c453949e","randomAddress()":"d5bee9f5","randomBool()":"cdc126bd","randomBytes(uint256)":"6c5d32a9","randomInt()":"111f1202","randomInt(uint256)":"12845966","randomUint()":"25124730","randomUint(uint256)":"cf81e69c","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetGasMetering()":"be367dd3","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","resumeTracing()":"72a09ccb","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setArbitraryStorage(address)":"e1631837","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signCompact((address,uint256,uint256,uint256),bytes32)":"3d0e292f","signCompact(address,bytes32)":"8e2f97bf","signCompact(bytes32)":"a282dc4b","signCompact(uint256,bytes32)":"cc2a781f","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","skip(bool,string)":"c42a80a7","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"copyStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByDeployedCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"publicKeyP256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"randomBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"assumeNoRevert()\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverted.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"copyStorage(address,address)\":{\"notice\":\"Utility cheatcode to copy storage of `from` contract to another `to` contract.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectPartialRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectPartialRevert(bytes4,address)\":{\"notice\":\"Expects an error on next call to reverter address, that starts with the revert data.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(address)\":{\"notice\":\"Expects an error with any revert data on next call to reverter address.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes,address)\":{\"notice\":\"Expects an error from reverter address on next call, that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4,address)\":{\"notice\":\"Expects an error from reverter address on next call, with any revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getArtifactPathByCode(bytes)\":{\"notice\":\"Gets the artifact path from code (aka. creation code).\"},\"getArtifactPathByDeployedCode(bytes)\":{\"notice\":\"Gets the artifact path from deployed code (aka. runtime code).\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>+<git_sha>+<build_timestamp> Sample output: 0.2.0+faa94c384+202407110019 Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"mockFunction(address,address,bytes)\":{\"notice\":\"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlType(string,string)\":{\"notice\":\"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlType(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlTypeArray(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"pauseTracing()\":{\"notice\":\"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"publicKeyP256(uint256)\":{\"notice\":\"Derives secp256r1 public key from the provided `privateKey`.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomBool()\":{\"notice\":\"Returns an random `bool`.\"},\"randomBytes(uint256)\":{\"notice\":\"Returns an random byte array value of the given length.\"},\"randomInt()\":{\"notice\":\"Returns an random `int256` value.\"},\"randomInt(uint256)\":{\"notice\":\"Returns an random `int256` value of given bits.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256)\":{\"notice\":\"Returns an random `uint256` value of given bits.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uint256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetGasMetering()\":{\"notice\":\"Reset gas metering (i.e. gas usage is set to gas limit).\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"resumeTracing()\":{\"notice\":\"Unpauses collection of call traces.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setArbitraryStorage(address)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top level of a test.\"},\"skip(bool,string)\":{\"notice\":\"Marks a test as skipped with a reason. Must be called at the top level of a test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@solmate/=lib/solmate/src/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x4cf4fbccf5c3f6e5e022d511cc67cce4fb93ce335106a7ee52b4034ad5dae99a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://0114018f4670c22ed000dec83d8dc26e483ba323e5e58c4e99af568919fbeb81\",\"dweb:/ipfs/QmY13eZqF2P8dSZbPZNwG7nE8LsqdUrnZXNiZ8g9h96q2v\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"copyStorage"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes","name":"code","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"deployedCode","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByDeployedCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFoundryVersion","outputs":[{"internalType":"string","name":"version","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockFunction"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"pauseTracing"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"publicKeyP256","outputs":[{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"len","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resetGasMetering"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"resumeTracing"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"},{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"assumeNoRevert()":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"copyStorage(address,address)":{"notice":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectPartialRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectPartialRevert(bytes4,address)":{"notice":"Expects an error on next call to reverter address, that starts with the revert data."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(address)":{"notice":"Expects an error with any revert data on next call to reverter address."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes,address)":{"notice":"Expects an error from reverter address on next call, that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4,address)":{"notice":"Expects an error from reverter address on next call, with any revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getArtifactPathByCode(bytes)":{"notice":"Gets the artifact path from code (aka. creation code)."},"getArtifactPathByDeployedCode(bytes)":{"notice":"Gets the artifact path from deployed code (aka. runtime code)."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getFoundryVersion()":{"notice":"Returns the Foundry version. Format: <cargo_version>+<git_sha>+<build_timestamp> Sample output: 0.2.0+faa94c384+202407110019 Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000) to compare timestamps while ignoring minor time differences."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get the nonce of a `Wallet`."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"mockFunction(address,address,bytes)":{"notice":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlType(string,string)":{"notice":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"parseTomlType(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"parseTomlTypeArray(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"pauseTracing()":{"notice":"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"publicKeyP256(uint256)":{"notice":"Derives secp256r1 public key from the provided `privateKey`."},"randomAddress()":{"notice":"Returns a random `address`."},"randomBool()":{"notice":"Returns an random `bool`."},"randomBytes(uint256)":{"notice":"Returns an random byte array value of the given length."},"randomInt()":{"notice":"Returns an random `int256` value."},"randomInt(uint256)":{"notice":"Returns an random `int256` value of given bits."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256)":{"notice":"Returns an random `uint256` value of given bits."},"randomUint(uint256,uint256)":{"notice":"Returns random uint256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetGasMetering()":{"notice":"Reset gas metering (i.e. gas usage is set to gas limit)."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"resumeTracing()":{"notice":"Unpauses collection of call traces."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setArbitraryStorage(address)":{"notice":"Utility cheatcode to set arbitrary storage for given target address."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signCompact((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signCompact(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address."},"signCompact(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"signCompact(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top level of a test."},"skip(bool,string)":{"notice":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/","@solmate/=lib/solmate/src/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","forge-std/=lib/forge-std/src/","foundry-devops/=lib/foundry-devops/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x4cf4fbccf5c3f6e5e022d511cc67cce4fb93ce335106a7ee52b4034ad5dae99a","urls":["bzz-raw://0114018f4670c22ed000dec83d8dc26e483ba323e5e58c4e99af568919fbeb81","dweb:/ipfs/QmY13eZqF2P8dSZbPZNwG7nE8LsqdUrnZXNiZ8g9h96q2v"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":20526,"exportedSymbols":{"Vm":[20525],"VmSafe":[19822]},"nodeType":"SourceUnit","src":"117:101971:28","nodes":[{"id":16323,"nodeType":"PragmaDirective","src":"117:31:28","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":16324,"nodeType":"PragmaDirective","src":"149:33:28","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":19822,"nodeType":"ContractDefinition","src":"409:84079:28","nodes":[{"id":16331,"nodeType":"EnumDefinition","src":"529:533:28","nodes":[],"canonicalName":"VmSafe.CallerMode","members":[{"id":16326,"name":"None","nameLocation":"610:4:28","nodeType":"EnumValue","src":"610:4:28"},{"id":16327,"name":"Broadcast","nameLocation":"714:9:28","nodeType":"EnumValue","src":"714:9:28"},{"id":16328,"name":"RecurrentBroadcast","nameLocation":"829:18:28","nodeType":"EnumValue","src":"829:18:28"},{"id":16329,"name":"Prank","nameLocation":"939:5:28","nodeType":"EnumValue","src":"939:5:28"},{"id":16330,"name":"RecurrentPrank","nameLocation":"1042:14:28","nodeType":"EnumValue","src":"1042:14:28"}],"name":"CallerMode","nameLocation":"534:10:28"},{"id":16343,"nodeType":"EnumDefinition","src":"1118:791:28","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","members":[{"id":16332,"name":"Call","nameLocation":"1186:4:28","nodeType":"EnumValue","src":"1186:4:28"},{"id":16333,"name":"DelegateCall","nameLocation":"1252:12:28","nodeType":"EnumValue","src":"1252:12:28"},{"id":16334,"name":"CallCode","nameLocation":"1322:8:28","nodeType":"EnumValue","src":"1322:8:28"},{"id":16335,"name":"StaticCall","nameLocation":"1390:10:28","nodeType":"EnumValue","src":"1390:10:28"},{"id":16336,"name":"Create","nameLocation":"1446:6:28","nodeType":"EnumValue","src":"1446:6:28"},{"id":16337,"name":"SelfDestruct","nameLocation":"1505:12:28","nodeType":"EnumValue","src":"1505:12:28"},{"id":16338,"name":"Resume","nameLocation":"1644:6:28","nodeType":"EnumValue","src":"1644:6:28"},{"id":16339,"name":"Balance","nameLocation":"1703:7:28","nodeType":"EnumValue","src":"1703:7:28"},{"id":16340,"name":"Extcodesize","nameLocation":"1764:11:28","nodeType":"EnumValue","src":"1764:11:28"},{"id":16341,"name":"Extcodehash","nameLocation":"1829:11:28","nodeType":"EnumValue","src":"1829:11:28"},{"id":16342,"name":"Extcodecopy","nameLocation":"1892:11:28","nodeType":"EnumValue","src":"1892:11:28"}],"name":"AccountAccessKind","nameLocation":"1123:17:28"},{"id":16353,"nodeType":"EnumDefinition","src":"1949:683:28","nodes":[],"canonicalName":"VmSafe.ForgeContext","members":[{"id":16344,"name":"TestGroup","nameLocation":"2047:9:28","nodeType":"EnumValue","src":"2047:9:28"},{"id":16345,"name":"Test","nameLocation":"2109:4:28","nodeType":"EnumValue","src":"2109:4:28"},{"id":16346,"name":"Coverage","nameLocation":"2170:8:28","nodeType":"EnumValue","src":"2170:8:28"},{"id":16347,"name":"Snapshot","nameLocation":"2235:8:28","nodeType":"EnumValue","src":"2235:8:28"},{"id":16348,"name":"ScriptGroup","nameLocation":"2327:11:28","nodeType":"EnumValue","src":"2327:11:28"},{"id":16349,"name":"ScriptDryRun","nameLocation":"2393:12:28","nodeType":"EnumValue","src":"2393:12:28"},{"id":16350,"name":"ScriptBroadcast","nameLocation":"2472:15:28","nodeType":"EnumValue","src":"2472:15:28"},{"id":16351,"name":"ScriptResume","nameLocation":"2551:12:28","nodeType":"EnumValue","src":"2551:12:28"},{"id":16352,"name":"Unknown","nameLocation":"2619:7:28","nodeType":"EnumValue","src":"2619:7:28"}],"name":"ForgeContext","nameLocation":"1954:12:28"},{"id":16361,"nodeType":"StructDefinition","src":"2694:237:28","nodes":[],"canonicalName":"VmSafe.Log","members":[{"constant":false,"id":16356,"mutability":"mutable","name":"topics","nameLocation":"2792:6:28","nodeType":"VariableDeclaration","scope":16361,"src":"2782:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16355,"nodeType":"ArrayTypeName","src":"2782:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16358,"mutability":"mutable","name":"data","nameLocation":"2850:4:28","nodeType":"VariableDeclaration","scope":16361,"src":"2844:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16357,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16360,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:28","nodeType":"VariableDeclaration","scope":16361,"src":"2909:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16359,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:28","scope":19822,"visibility":"public"},{"id":16366,"nodeType":"StructDefinition","src":"3000:119:28","nodes":[],"canonicalName":"VmSafe.Rpc","members":[{"constant":false,"id":16363,"mutability":"mutable","name":"key","nameLocation":"3065:3:28","nodeType":"VariableDeclaration","scope":16366,"src":"3058:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":16362,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16365,"mutability":"mutable","name":"url","nameLocation":"3109:3:28","nodeType":"VariableDeclaration","scope":16366,"src":"3102:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":16364,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:28","scope":19822,"visibility":"public"},{"id":16386,"nodeType":"StructDefinition","src":"3179:615:28","nodes":[],"canonicalName":"VmSafe.EthGetLogs","members":[{"constant":false,"id":16368,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:28","nodeType":"VariableDeclaration","scope":16386,"src":"3252:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16367,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16371,"mutability":"mutable","name":"topics","nameLocation":"3354:6:28","nodeType":"VariableDeclaration","scope":16386,"src":"3344:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16370,"nodeType":"ArrayTypeName","src":"3344:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16373,"mutability":"mutable","name":"data","nameLocation":"3412:4:28","nodeType":"VariableDeclaration","scope":16386,"src":"3406:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16372,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16375,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:28","nodeType":"VariableDeclaration","scope":16386,"src":"3453:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16377,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:28","nodeType":"VariableDeclaration","scope":16386,"src":"3509:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16376,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16379,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:28","nodeType":"VariableDeclaration","scope":16386,"src":"3570:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16381,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:28","nodeType":"VariableDeclaration","scope":16386,"src":"3650:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16380,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16383,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:28","nodeType":"VariableDeclaration","scope":16386,"src":"3709:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16382,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16385,"mutability":"mutable","name":"removed","nameLocation":"3780:7:28","nodeType":"VariableDeclaration","scope":16386,"src":"3775:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16384,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:28","scope":19822,"visibility":"public"},{"id":16397,"nodeType":"StructDefinition","src":"3870:334:28","nodes":[],"canonicalName":"VmSafe.DirEntry","members":[{"constant":false,"id":16388,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:28","nodeType":"VariableDeclaration","scope":16397,"src":"3934:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":16387,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16390,"mutability":"mutable","name":"path","nameLocation":"4004:4:28","nodeType":"VariableDeclaration","scope":16397,"src":"3997:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":16389,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16392,"mutability":"mutable","name":"depth","nameLocation":"4060:5:28","nodeType":"VariableDeclaration","scope":16397,"src":"4053:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16391,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16394,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:28","nodeType":"VariableDeclaration","scope":16397,"src":"4120:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16393,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16396,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:28","nodeType":"VariableDeclaration","scope":16397,"src":"4183:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16395,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:28","scope":19822,"visibility":"public"},{"id":16412,"nodeType":"StructDefinition","src":"4434:599:28","nodes":[],"canonicalName":"VmSafe.FsMetadata","members":[{"constant":false,"id":16399,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:28","nodeType":"VariableDeclaration","scope":16412,"src":"4515:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16398,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16401,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:28","nodeType":"VariableDeclaration","scope":16412,"src":"4586:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16400,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16403,"mutability":"mutable","name":"length","nameLocation":"4683:6:28","nodeType":"VariableDeclaration","scope":16412,"src":"4675:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16402,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16405,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:28","nodeType":"VariableDeclaration","scope":16412,"src":"4769:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16404,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16407,"mutability":"mutable","name":"modified","nameLocation":"4863:8:28","nodeType":"VariableDeclaration","scope":16412,"src":"4855:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16406,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16409,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:28","nodeType":"VariableDeclaration","scope":16412,"src":"4931:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16408,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16411,"mutability":"mutable","name":"created","nameLocation":"5019:7:28","nodeType":"VariableDeclaration","scope":16412,"src":"5011:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16410,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:28","scope":19822,"visibility":"public"},{"id":16421,"nodeType":"StructDefinition","src":"5087:277:28","nodes":[],"canonicalName":"VmSafe.Wallet","members":[{"constant":false,"id":16414,"mutability":"mutable","name":"addr","nameLocation":"5152:4:28","nodeType":"VariableDeclaration","scope":16421,"src":"5144:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16413,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16416,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:28","nodeType":"VariableDeclaration","scope":16421,"src":"5206:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16415,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16418,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:28","nodeType":"VariableDeclaration","scope":16421,"src":"5274:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16417,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16420,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:28","nodeType":"VariableDeclaration","scope":16421,"src":"5339:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16419,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:28","scope":19822,"visibility":"public"},{"id":16428,"nodeType":"StructDefinition","src":"5409:213:28","nodes":[],"canonicalName":"VmSafe.FfiResult","members":[{"constant":false,"id":16423,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:28","nodeType":"VariableDeclaration","scope":16428,"src":"5474:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":16422,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:28","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":16425,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:28","nodeType":"VariableDeclaration","scope":16428,"src":"5551:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16424,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16427,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:28","nodeType":"VariableDeclaration","scope":16428,"src":"5603:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16426,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:28","scope":19822,"visibility":"public"},{"id":16433,"nodeType":"StructDefinition","src":"5671:184:28","nodes":[],"canonicalName":"VmSafe.ChainInfo","members":[{"constant":false,"id":16430,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:28","nodeType":"VariableDeclaration","scope":16433,"src":"5764:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16429,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16432,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:28","nodeType":"VariableDeclaration","scope":16433,"src":"5833:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16431,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:28","scope":19822,"visibility":"public"},{"id":16464,"nodeType":"StructDefinition","src":"5916:1837:28","nodes":[],"canonicalName":"VmSafe.AccountAccess","members":[{"constant":false,"id":16436,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:28","nodeType":"VariableDeclaration","scope":16464,"src":"5998:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$16433_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":16435,"nodeType":"UserDefinedTypeName","pathNode":{"id":16434,"name":"ChainInfo","nameLocations":["5998:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":16433,"src":"5998:9:28"},"referencedDeclaration":16433,"src":"5998:9:28","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$16433_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":16439,"mutability":"mutable","name":"kind","nameLocation":"6471:4:28","nodeType":"VariableDeclaration","scope":16464,"src":"6453:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$16343","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":16438,"nodeType":"UserDefinedTypeName","pathNode":{"id":16437,"name":"AccountAccessKind","nameLocations":["6453:17:28"],"nodeType":"IdentifierPath","referencedDeclaration":16343,"src":"6453:17:28"},"referencedDeclaration":16343,"src":"6453:17:28","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$16343","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":16441,"mutability":"mutable","name":"account","nameLocation":"6648:7:28","nodeType":"VariableDeclaration","scope":16464,"src":"6640:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16440,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16443,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:28","nodeType":"VariableDeclaration","scope":16464,"src":"6703:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16442,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16445,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:28","nodeType":"VariableDeclaration","scope":16464,"src":"6917:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16444,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16447,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:28","nodeType":"VariableDeclaration","scope":16464,"src":"7000:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16446,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16449,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:28","nodeType":"VariableDeclaration","scope":16464,"src":"7175:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16448,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16451,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:28","nodeType":"VariableDeclaration","scope":16464,"src":"7254:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16450,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16453,"mutability":"mutable","name":"value","nameLocation":"7344:5:28","nodeType":"VariableDeclaration","scope":16464,"src":"7336:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16452,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16455,"mutability":"mutable","name":"data","nameLocation":"7418:4:28","nodeType":"VariableDeclaration","scope":16464,"src":"7412:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":16454,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16457,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:28","nodeType":"VariableDeclaration","scope":16464,"src":"7508:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16456,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16461,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:28","nodeType":"VariableDeclaration","scope":16464,"src":"7619:31:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$16477_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":16459,"nodeType":"UserDefinedTypeName","pathNode":{"id":16458,"name":"StorageAccess","nameLocations":["7619:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":16477,"src":"7619:13:28"},"referencedDeclaration":16477,"src":"7619:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$16477_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":16460,"nodeType":"ArrayTypeName","src":"7619:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$16477_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":16463,"mutability":"mutable","name":"depth","nameLocation":"7741:5:28","nodeType":"VariableDeclaration","scope":16464,"src":"7734:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16462,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:28","scope":19822,"visibility":"public"},{"id":16477,"nodeType":"StructDefinition","src":"7815:425:28","nodes":[],"canonicalName":"VmSafe.StorageAccess","members":[{"constant":false,"id":16466,"mutability":"mutable","name":"account","nameLocation":"7905:7:28","nodeType":"VariableDeclaration","scope":16477,"src":"7897:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16465,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16468,"mutability":"mutable","name":"slot","nameLocation":"7969:4:28","nodeType":"VariableDeclaration","scope":16477,"src":"7961:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16470,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:28","nodeType":"VariableDeclaration","scope":16477,"src":"8021:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16469,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16472,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:28","nodeType":"VariableDeclaration","scope":16477,"src":"8086:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16474,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:28","nodeType":"VariableDeclaration","scope":16477,"src":"8155:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16476,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:28","nodeType":"VariableDeclaration","scope":16477,"src":"8220:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16475,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:28","scope":19822,"visibility":"public"},{"id":16488,"nodeType":"StructDefinition","src":"8291:458:28","nodes":[],"canonicalName":"VmSafe.Gas","members":[{"constant":false,"id":16479,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:28","nodeType":"VariableDeclaration","scope":16488,"src":"8350:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16478,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16481,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:28","nodeType":"VariableDeclaration","scope":16488,"src":"8406:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16480,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16483,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8594:13:28","nodeType":"VariableDeclaration","scope":16488,"src":"8587:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16482,"name":"uint64","nodeType":"ElementaryTypeName","src":"8587:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16485,"mutability":"mutable","name":"gasRefunded","nameLocation":"8662:11:28","nodeType":"VariableDeclaration","scope":16488,"src":"8656:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":16484,"name":"int64","nodeType":"ElementaryTypeName","src":"8656:5:28","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":16487,"mutability":"mutable","name":"gasRemaining","nameLocation":"8730:12:28","nodeType":"VariableDeclaration","scope":16488,"src":"8723:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16486,"name":"uint64","nodeType":"ElementaryTypeName","src":"8723:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:28","scope":19822,"visibility":"public"},{"id":16497,"nodeType":"FunctionDefinition","src":"8892:91:28","nodes":[],"documentation":{"id":16489,"nodeType":"StructuredDocumentation","src":"8788:99:28","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"8901:12:28","parameters":{"id":16492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16491,"mutability":"mutable","name":"walletLabel","nameLocation":"8930:11:28","nodeType":"VariableDeclaration","scope":16497,"src":"8914:27:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16490,"name":"string","nodeType":"ElementaryTypeName","src":"8914:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8913:29:28"},"returnParameters":{"id":16496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16495,"mutability":"mutable","name":"wallet","nameLocation":"8975:6:28","nodeType":"VariableDeclaration","scope":16497,"src":"8961:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16421_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16494,"nodeType":"UserDefinedTypeName","pathNode":{"id":16493,"name":"Wallet","nameLocations":["8961:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":16421,"src":"8961:6:28"},"referencedDeclaration":16421,"src":"8961:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16421_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"8960:22:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16506,"nodeType":"FunctionDefinition","src":"9061:82:28","nodes":[],"documentation":{"id":16498,"nodeType":"StructuredDocumentation","src":"8989:67:28","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"9070:12:28","parameters":{"id":16501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16500,"mutability":"mutable","name":"privateKey","nameLocation":"9091:10:28","nodeType":"VariableDeclaration","scope":16506,"src":"9083:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16499,"name":"uint256","nodeType":"ElementaryTypeName","src":"9083:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9082:20:28"},"returnParameters":{"id":16505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16504,"mutability":"mutable","name":"wallet","nameLocation":"9135:6:28","nodeType":"VariableDeclaration","scope":16506,"src":"9121:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16421_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16503,"nodeType":"UserDefinedTypeName","pathNode":{"id":16502,"name":"Wallet","nameLocations":["9121:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":16421,"src":"9121:6:28"},"referencedDeclaration":16421,"src":"9121:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16421_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"9120:22:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16517,"nodeType":"FunctionDefinition","src":"9257:111:28","nodes":[],"documentation":{"id":16507,"nodeType":"StructuredDocumentation","src":"9149:103:28","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"9266:12:28","parameters":{"id":16512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16509,"mutability":"mutable","name":"privateKey","nameLocation":"9287:10:28","nodeType":"VariableDeclaration","scope":16517,"src":"9279:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16508,"name":"uint256","nodeType":"ElementaryTypeName","src":"9279:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16511,"mutability":"mutable","name":"walletLabel","nameLocation":"9315:11:28","nodeType":"VariableDeclaration","scope":16517,"src":"9299:27:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16510,"name":"string","nodeType":"ElementaryTypeName","src":"9299:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9278:49:28"},"returnParameters":{"id":16516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16515,"mutability":"mutable","name":"wallet","nameLocation":"9360:6:28","nodeType":"VariableDeclaration","scope":16517,"src":"9346:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16421_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16514,"nodeType":"UserDefinedTypeName","pathNode":{"id":16513,"name":"Wallet","nameLocations":["9346:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":16421,"src":"9346:6:28"},"referencedDeclaration":16421,"src":"9346:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16421_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"9345:22:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16527,"nodeType":"FunctionDefinition","src":"9516:102:28","nodes":[],"documentation":{"id":16518,"nodeType":"StructuredDocumentation","src":"9374:137:28","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"9525:9:28","parameters":{"id":16523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16520,"mutability":"mutable","name":"mnemonic","nameLocation":"9551:8:28","nodeType":"VariableDeclaration","scope":16527,"src":"9535:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16519,"name":"string","nodeType":"ElementaryTypeName","src":"9535:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16522,"mutability":"mutable","name":"index","nameLocation":"9568:5:28","nodeType":"VariableDeclaration","scope":16527,"src":"9561:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16521,"name":"uint32","nodeType":"ElementaryTypeName","src":"9561:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9534:40:28"},"returnParameters":{"id":16526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16525,"mutability":"mutable","name":"privateKey","nameLocation":"9606:10:28","nodeType":"VariableDeclaration","scope":16527,"src":"9598:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16524,"name":"uint256","nodeType":"ElementaryTypeName","src":"9598:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9597:20:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16539,"nodeType":"FunctionDefinition","src":"9747:158:28","nodes":[],"documentation":{"id":16528,"nodeType":"StructuredDocumentation","src":"9624:118:28","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"9756:9:28","parameters":{"id":16535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16530,"mutability":"mutable","name":"mnemonic","nameLocation":"9782:8:28","nodeType":"VariableDeclaration","scope":16539,"src":"9766:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16529,"name":"string","nodeType":"ElementaryTypeName","src":"9766:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16532,"mutability":"mutable","name":"derivationPath","nameLocation":"9808:14:28","nodeType":"VariableDeclaration","scope":16539,"src":"9792:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16531,"name":"string","nodeType":"ElementaryTypeName","src":"9792:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16534,"mutability":"mutable","name":"index","nameLocation":"9831:5:28","nodeType":"VariableDeclaration","scope":16539,"src":"9824:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16533,"name":"uint32","nodeType":"ElementaryTypeName","src":"9824:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9765:72:28"},"returnParameters":{"id":16538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16537,"mutability":"mutable","name":"privateKey","nameLocation":"9893:10:28","nodeType":"VariableDeclaration","scope":16539,"src":"9885:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16536,"name":"uint256","nodeType":"ElementaryTypeName","src":"9885:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9884:20:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16551,"nodeType":"FunctionDefinition","src":"10079:152:28","nodes":[],"documentation":{"id":16540,"nodeType":"StructuredDocumentation","src":"9911:163:28","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10088:9:28","parameters":{"id":16547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16542,"mutability":"mutable","name":"mnemonic","nameLocation":"10114:8:28","nodeType":"VariableDeclaration","scope":16551,"src":"10098:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16541,"name":"string","nodeType":"ElementaryTypeName","src":"10098:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16544,"mutability":"mutable","name":"index","nameLocation":"10131:5:28","nodeType":"VariableDeclaration","scope":16551,"src":"10124:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16543,"name":"uint32","nodeType":"ElementaryTypeName","src":"10124:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":16546,"mutability":"mutable","name":"language","nameLocation":"10154:8:28","nodeType":"VariableDeclaration","scope":16551,"src":"10138:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16545,"name":"string","nodeType":"ElementaryTypeName","src":"10138:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10097:66:28"},"returnParameters":{"id":16550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16549,"mutability":"mutable","name":"privateKey","nameLocation":"10219:10:28","nodeType":"VariableDeclaration","scope":16551,"src":"10211:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16548,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10210:20:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16565,"nodeType":"FunctionDefinition","src":"10386:184:28","nodes":[],"documentation":{"id":16552,"nodeType":"StructuredDocumentation","src":"10237:144:28","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"10395:9:28","parameters":{"id":16561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16554,"mutability":"mutable","name":"mnemonic","nameLocation":"10421:8:28","nodeType":"VariableDeclaration","scope":16565,"src":"10405:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16553,"name":"string","nodeType":"ElementaryTypeName","src":"10405:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16556,"mutability":"mutable","name":"derivationPath","nameLocation":"10447:14:28","nodeType":"VariableDeclaration","scope":16565,"src":"10431:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16555,"name":"string","nodeType":"ElementaryTypeName","src":"10431:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16558,"mutability":"mutable","name":"index","nameLocation":"10470:5:28","nodeType":"VariableDeclaration","scope":16565,"src":"10463:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16557,"name":"uint32","nodeType":"ElementaryTypeName","src":"10463:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":16560,"mutability":"mutable","name":"language","nameLocation":"10493:8:28","nodeType":"VariableDeclaration","scope":16565,"src":"10477:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16559,"name":"string","nodeType":"ElementaryTypeName","src":"10477:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10404:98:28"},"returnParameters":{"id":16564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16563,"mutability":"mutable","name":"privateKey","nameLocation":"10558:10:28","nodeType":"VariableDeclaration","scope":16565,"src":"10550:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16562,"name":"uint256","nodeType":"ElementaryTypeName","src":"10550:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10549:20:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16575,"nodeType":"FunctionDefinition","src":"10645:106:28","nodes":[],"documentation":{"id":16566,"nodeType":"StructuredDocumentation","src":"10576:64:28","text":"Derives secp256r1 public key from the provided `privateKey`."},"functionSelector":"c453949e","implemented":false,"kind":"function","modifiers":[],"name":"publicKeyP256","nameLocation":"10654:13:28","parameters":{"id":16569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16568,"mutability":"mutable","name":"privateKey","nameLocation":"10676:10:28","nodeType":"VariableDeclaration","scope":16575,"src":"10668:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16567,"name":"uint256","nodeType":"ElementaryTypeName","src":"10668:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10667:20:28"},"returnParameters":{"id":16574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16571,"mutability":"mutable","name":"publicKeyX","nameLocation":"10719:10:28","nodeType":"VariableDeclaration","scope":16575,"src":"10711:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16570,"name":"uint256","nodeType":"ElementaryTypeName","src":"10711:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16573,"mutability":"mutable","name":"publicKeyY","nameLocation":"10739:10:28","nodeType":"VariableDeclaration","scope":16575,"src":"10731:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16572,"name":"uint256","nodeType":"ElementaryTypeName","src":"10731:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10710:40:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16583,"nodeType":"FunctionDefinition","src":"10835:76:28","nodes":[],"documentation":{"id":16576,"nodeType":"StructuredDocumentation","src":"10757:73:28","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"10844:11:28","parameters":{"id":16579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16578,"mutability":"mutable","name":"privateKey","nameLocation":"10864:10:28","nodeType":"VariableDeclaration","scope":16583,"src":"10856:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16577,"name":"uint256","nodeType":"ElementaryTypeName","src":"10856:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:20:28"},"returnParameters":{"id":16582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16581,"mutability":"mutable","name":"keyAddr","nameLocation":"10902:7:28","nodeType":"VariableDeclaration","scope":16583,"src":"10894:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16580,"name":"address","nodeType":"ElementaryTypeName","src":"10894:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10893:17:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16596,"nodeType":"FunctionDefinition","src":"11190:102:28","nodes":[],"documentation":{"id":16584,"nodeType":"StructuredDocumentation","src":"10917:268:28","text":"Signs data with a `Wallet`.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"3d0e292f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"11199:11:28","parameters":{"id":16590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16587,"mutability":"mutable","name":"wallet","nameLocation":"11227:6:28","nodeType":"VariableDeclaration","scope":16596,"src":"11211:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16421_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16586,"nodeType":"UserDefinedTypeName","pathNode":{"id":16585,"name":"Wallet","nameLocations":["11211:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":16421,"src":"11211:6:28"},"referencedDeclaration":16421,"src":"11211:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16421_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":16589,"mutability":"mutable","name":"digest","nameLocation":"11243:6:28","nodeType":"VariableDeclaration","scope":16596,"src":"11235:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11235:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11210:40:28"},"returnParameters":{"id":16595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16592,"mutability":"mutable","name":"r","nameLocation":"11277:1:28","nodeType":"VariableDeclaration","scope":16596,"src":"11269:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11269:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16594,"mutability":"mutable","name":"vs","nameLocation":"11288:2:28","nodeType":"VariableDeclaration","scope":16596,"src":"11280:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11280:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11268:23:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16608,"nodeType":"FunctionDefinition","src":"11603:103:28","nodes":[],"documentation":{"id":16597,"nodeType":"StructuredDocumentation","src":"11298:300:28","text":"Signs `digest` with `privateKey` using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"cc2a781f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"11612:11:28","parameters":{"id":16602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16599,"mutability":"mutable","name":"privateKey","nameLocation":"11632:10:28","nodeType":"VariableDeclaration","scope":16608,"src":"11624:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16598,"name":"uint256","nodeType":"ElementaryTypeName","src":"11624:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16601,"mutability":"mutable","name":"digest","nameLocation":"11652:6:28","nodeType":"VariableDeclaration","scope":16608,"src":"11644:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11644:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11623:36:28"},"returnParameters":{"id":16607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16604,"mutability":"mutable","name":"r","nameLocation":"11691:1:28","nodeType":"VariableDeclaration","scope":16608,"src":"11683:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11683:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16606,"mutability":"mutable","name":"vs","nameLocation":"11702:2:28","nodeType":"VariableDeclaration","scope":16608,"src":"11694:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11694:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11682:23:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16618,"nodeType":"FunctionDefinition","src":"12382:83:28","nodes":[],"documentation":{"id":16609,"nodeType":"StructuredDocumentation","src":"11712:665:28","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"a282dc4b","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"12391:11:28","parameters":{"id":16612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16611,"mutability":"mutable","name":"digest","nameLocation":"12411:6:28","nodeType":"VariableDeclaration","scope":16618,"src":"12403:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12403:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12402:16:28"},"returnParameters":{"id":16617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16614,"mutability":"mutable","name":"r","nameLocation":"12450:1:28","nodeType":"VariableDeclaration","scope":16618,"src":"12442:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12442:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16616,"mutability":"mutable","name":"vs","nameLocation":"12461:2:28","nodeType":"VariableDeclaration","scope":16618,"src":"12453:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12453:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12441:23:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16630,"nodeType":"FunctionDefinition","src":"12879:99:28","nodes":[],"documentation":{"id":16619,"nodeType":"StructuredDocumentation","src":"12471:403:28","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8e2f97bf","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"12888:11:28","parameters":{"id":16624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16621,"mutability":"mutable","name":"signer","nameLocation":"12908:6:28","nodeType":"VariableDeclaration","scope":16630,"src":"12900:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16620,"name":"address","nodeType":"ElementaryTypeName","src":"12900:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16623,"mutability":"mutable","name":"digest","nameLocation":"12924:6:28","nodeType":"VariableDeclaration","scope":16630,"src":"12916:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12916:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12899:32:28"},"returnParameters":{"id":16629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16626,"mutability":"mutable","name":"r","nameLocation":"12963:1:28","nodeType":"VariableDeclaration","scope":16630,"src":"12955:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16625,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12955:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16628,"mutability":"mutable","name":"vs","nameLocation":"12974:2:28","nodeType":"VariableDeclaration","scope":16630,"src":"12966:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12966:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12954:23:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16642,"nodeType":"FunctionDefinition","src":"13052:99:28","nodes":[],"documentation":{"id":16631,"nodeType":"StructuredDocumentation","src":"12984:63:28","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"13061:8:28","parameters":{"id":16636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16633,"mutability":"mutable","name":"privateKey","nameLocation":"13078:10:28","nodeType":"VariableDeclaration","scope":16642,"src":"13070:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16632,"name":"uint256","nodeType":"ElementaryTypeName","src":"13070:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16635,"mutability":"mutable","name":"digest","nameLocation":"13098:6:28","nodeType":"VariableDeclaration","scope":16642,"src":"13090:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13090:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13069:36:28"},"returnParameters":{"id":16641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16638,"mutability":"mutable","name":"r","nameLocation":"13137:1:28","nodeType":"VariableDeclaration","scope":16642,"src":"13129:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13129:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16640,"mutability":"mutable","name":"s","nameLocation":"13148:1:28","nodeType":"VariableDeclaration","scope":16642,"src":"13140:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13140:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13128:22:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16657,"nodeType":"FunctionDefinition","src":"13193:103:28","nodes":[],"documentation":{"id":16643,"nodeType":"StructuredDocumentation","src":"13157:31:28","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13202:4:28","parameters":{"id":16649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16646,"mutability":"mutable","name":"wallet","nameLocation":"13223:6:28","nodeType":"VariableDeclaration","scope":16657,"src":"13207:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16421_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16645,"nodeType":"UserDefinedTypeName","pathNode":{"id":16644,"name":"Wallet","nameLocations":["13207:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":16421,"src":"13207:6:28"},"referencedDeclaration":16421,"src":"13207:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16421_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":16648,"mutability":"mutable","name":"digest","nameLocation":"13239:6:28","nodeType":"VariableDeclaration","scope":16657,"src":"13231:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13231:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13206:40:28"},"returnParameters":{"id":16656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16651,"mutability":"mutable","name":"v","nameLocation":"13271:1:28","nodeType":"VariableDeclaration","scope":16657,"src":"13265:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16650,"name":"uint8","nodeType":"ElementaryTypeName","src":"13265:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16653,"mutability":"mutable","name":"r","nameLocation":"13282:1:28","nodeType":"VariableDeclaration","scope":16657,"src":"13274:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13274:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16655,"mutability":"mutable","name":"s","nameLocation":"13293:1:28","nodeType":"VariableDeclaration","scope":16657,"src":"13285:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13285:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13264:31:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16671,"nodeType":"FunctionDefinition","src":"13370:104:28","nodes":[],"documentation":{"id":16658,"nodeType":"StructuredDocumentation","src":"13302:63:28","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13379:4:28","parameters":{"id":16663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16660,"mutability":"mutable","name":"privateKey","nameLocation":"13392:10:28","nodeType":"VariableDeclaration","scope":16671,"src":"13384:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16659,"name":"uint256","nodeType":"ElementaryTypeName","src":"13384:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16662,"mutability":"mutable","name":"digest","nameLocation":"13412:6:28","nodeType":"VariableDeclaration","scope":16671,"src":"13404:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13404:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13383:36:28"},"returnParameters":{"id":16670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16665,"mutability":"mutable","name":"v","nameLocation":"13449:1:28","nodeType":"VariableDeclaration","scope":16671,"src":"13443:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16664,"name":"uint8","nodeType":"ElementaryTypeName","src":"13443:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16667,"mutability":"mutable","name":"r","nameLocation":"13460:1:28","nodeType":"VariableDeclaration","scope":16671,"src":"13452:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13452:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16669,"mutability":"mutable","name":"s","nameLocation":"13471:1:28","nodeType":"VariableDeclaration","scope":16671,"src":"13463:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13463:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13442:31:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16683,"nodeType":"FunctionDefinition","src":"13913:84:28","nodes":[],"documentation":{"id":16672,"nodeType":"StructuredDocumentation","src":"13480:428:28","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"13922:4:28","parameters":{"id":16675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16674,"mutability":"mutable","name":"digest","nameLocation":"13935:6:28","nodeType":"VariableDeclaration","scope":16683,"src":"13927:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13927:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13926:16:28"},"returnParameters":{"id":16682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16677,"mutability":"mutable","name":"v","nameLocation":"13972:1:28","nodeType":"VariableDeclaration","scope":16683,"src":"13966:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16676,"name":"uint8","nodeType":"ElementaryTypeName","src":"13966:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16679,"mutability":"mutable","name":"r","nameLocation":"13983:1:28","nodeType":"VariableDeclaration","scope":16683,"src":"13975:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13975:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16681,"mutability":"mutable","name":"s","nameLocation":"13994:1:28","nodeType":"VariableDeclaration","scope":16683,"src":"13986:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13986:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13965:31:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16697,"nodeType":"FunctionDefinition","src":"14174:100:28","nodes":[],"documentation":{"id":16684,"nodeType":"StructuredDocumentation","src":"14003:166:28","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"14183:4:28","parameters":{"id":16689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16686,"mutability":"mutable","name":"signer","nameLocation":"14196:6:28","nodeType":"VariableDeclaration","scope":16697,"src":"14188:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16685,"name":"address","nodeType":"ElementaryTypeName","src":"14188:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16688,"mutability":"mutable","name":"digest","nameLocation":"14212:6:28","nodeType":"VariableDeclaration","scope":16697,"src":"14204:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14204:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14187:32:28"},"returnParameters":{"id":16696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16691,"mutability":"mutable","name":"v","nameLocation":"14249:1:28","nodeType":"VariableDeclaration","scope":16697,"src":"14243:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16690,"name":"uint8","nodeType":"ElementaryTypeName","src":"14243:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16693,"mutability":"mutable","name":"r","nameLocation":"14260:1:28","nodeType":"VariableDeclaration","scope":16697,"src":"14252:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14252:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16695,"mutability":"mutable","name":"s","nameLocation":"14271:1:28","nodeType":"VariableDeclaration","scope":16697,"src":"14263:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14263:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14242:31:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16705,"nodeType":"FunctionDefinition","src":"14461:80:28","nodes":[],"documentation":{"id":16698,"nodeType":"StructuredDocumentation","src":"14318:138:28","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"14470:10:28","parameters":{"id":16701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16700,"mutability":"mutable","name":"name","nameLocation":"14497:4:28","nodeType":"VariableDeclaration","scope":16705,"src":"14481:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16699,"name":"string","nodeType":"ElementaryTypeName","src":"14481:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14480:22:28"},"returnParameters":{"id":16704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16703,"mutability":"mutable","name":"value","nameLocation":"14534:5:28","nodeType":"VariableDeclaration","scope":16705,"src":"14526:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16702,"name":"address","nodeType":"ElementaryTypeName","src":"14526:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14525:15:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16716,"nodeType":"FunctionDefinition","src":"14724:112:28","nodes":[],"documentation":{"id":16706,"nodeType":"StructuredDocumentation","src":"14547:172:28","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"14733:10:28","parameters":{"id":16711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16708,"mutability":"mutable","name":"name","nameLocation":"14760:4:28","nodeType":"VariableDeclaration","scope":16716,"src":"14744:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16707,"name":"string","nodeType":"ElementaryTypeName","src":"14744:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16710,"mutability":"mutable","name":"delim","nameLocation":"14782:5:28","nodeType":"VariableDeclaration","scope":16716,"src":"14766:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16709,"name":"string","nodeType":"ElementaryTypeName","src":"14766:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14743:45:28"},"returnParameters":{"id":16715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16714,"mutability":"mutable","name":"value","nameLocation":"14829:5:28","nodeType":"VariableDeclaration","scope":16716,"src":"14812:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16712,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16713,"nodeType":"ArrayTypeName","src":"14812:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14811:24:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16724,"nodeType":"FunctionDefinition","src":"14982:74:28","nodes":[],"documentation":{"id":16717,"nodeType":"StructuredDocumentation","src":"14842:135:28","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"14991:7:28","parameters":{"id":16720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16719,"mutability":"mutable","name":"name","nameLocation":"15015:4:28","nodeType":"VariableDeclaration","scope":16724,"src":"14999:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16718,"name":"string","nodeType":"ElementaryTypeName","src":"14999:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14998:22:28"},"returnParameters":{"id":16723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16722,"mutability":"mutable","name":"value","nameLocation":"15049:5:28","nodeType":"VariableDeclaration","scope":16724,"src":"15044:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16721,"name":"bool","nodeType":"ElementaryTypeName","src":"15044:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15043:12:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16735,"nodeType":"FunctionDefinition","src":"15236:106:28","nodes":[],"documentation":{"id":16725,"nodeType":"StructuredDocumentation","src":"15062:169:28","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"15245:7:28","parameters":{"id":16730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16727,"mutability":"mutable","name":"name","nameLocation":"15269:4:28","nodeType":"VariableDeclaration","scope":16735,"src":"15253:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16726,"name":"string","nodeType":"ElementaryTypeName","src":"15253:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16729,"mutability":"mutable","name":"delim","nameLocation":"15291:5:28","nodeType":"VariableDeclaration","scope":16735,"src":"15275:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16728,"name":"string","nodeType":"ElementaryTypeName","src":"15275:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15252:45:28"},"returnParameters":{"id":16734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16733,"mutability":"mutable","name":"value","nameLocation":"15335:5:28","nodeType":"VariableDeclaration","scope":16735,"src":"15321:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16731,"name":"bool","nodeType":"ElementaryTypeName","src":"15321:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16732,"nodeType":"ArrayTypeName","src":"15321:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15320:21:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16743,"nodeType":"FunctionDefinition","src":"15491:80:28","nodes":[],"documentation":{"id":16736,"nodeType":"StructuredDocumentation","src":"15348:138:28","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"15500:10:28","parameters":{"id":16739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16738,"mutability":"mutable","name":"name","nameLocation":"15527:4:28","nodeType":"VariableDeclaration","scope":16743,"src":"15511:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16737,"name":"string","nodeType":"ElementaryTypeName","src":"15511:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15510:22:28"},"returnParameters":{"id":16742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16741,"mutability":"mutable","name":"value","nameLocation":"15564:5:28","nodeType":"VariableDeclaration","scope":16743,"src":"15556:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15556:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15555:15:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16754,"nodeType":"FunctionDefinition","src":"15754:112:28","nodes":[],"documentation":{"id":16744,"nodeType":"StructuredDocumentation","src":"15577:172:28","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"15763:10:28","parameters":{"id":16749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16746,"mutability":"mutable","name":"name","nameLocation":"15790:4:28","nodeType":"VariableDeclaration","scope":16754,"src":"15774:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16745,"name":"string","nodeType":"ElementaryTypeName","src":"15774:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16748,"mutability":"mutable","name":"delim","nameLocation":"15812:5:28","nodeType":"VariableDeclaration","scope":16754,"src":"15796:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16747,"name":"string","nodeType":"ElementaryTypeName","src":"15796:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15773:45:28"},"returnParameters":{"id":16753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16752,"mutability":"mutable","name":"value","nameLocation":"15859:5:28","nodeType":"VariableDeclaration","scope":16754,"src":"15842:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15842:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16751,"nodeType":"ArrayTypeName","src":"15842:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"15841:24:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16762,"nodeType":"FunctionDefinition","src":"16013:83:28","nodes":[],"documentation":{"id":16755,"nodeType":"StructuredDocumentation","src":"15872:136:28","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"16022:8:28","parameters":{"id":16758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16757,"mutability":"mutable","name":"name","nameLocation":"16047:4:28","nodeType":"VariableDeclaration","scope":16762,"src":"16031:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16756,"name":"string","nodeType":"ElementaryTypeName","src":"16031:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16030:22:28"},"returnParameters":{"id":16761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16760,"mutability":"mutable","name":"value","nameLocation":"16089:5:28","nodeType":"VariableDeclaration","scope":16762,"src":"16076:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16759,"name":"bytes","nodeType":"ElementaryTypeName","src":"16076:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16075:20:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16773,"nodeType":"FunctionDefinition","src":"16277:108:28","nodes":[],"documentation":{"id":16763,"nodeType":"StructuredDocumentation","src":"16102:170:28","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"16286:8:28","parameters":{"id":16768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16765,"mutability":"mutable","name":"name","nameLocation":"16311:4:28","nodeType":"VariableDeclaration","scope":16773,"src":"16295:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16764,"name":"string","nodeType":"ElementaryTypeName","src":"16295:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16767,"mutability":"mutable","name":"delim","nameLocation":"16333:5:28","nodeType":"VariableDeclaration","scope":16773,"src":"16317:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16766,"name":"string","nodeType":"ElementaryTypeName","src":"16317:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16294:45:28"},"returnParameters":{"id":16772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16771,"mutability":"mutable","name":"value","nameLocation":"16378:5:28","nodeType":"VariableDeclaration","scope":16773,"src":"16363:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16769,"name":"bytes","nodeType":"ElementaryTypeName","src":"16363:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16770,"nodeType":"ArrayTypeName","src":"16363:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"16362:22:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16781,"nodeType":"FunctionDefinition","src":"16487:77:28","nodes":[],"documentation":{"id":16774,"nodeType":"StructuredDocumentation","src":"16391:91:28","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"16496:9:28","parameters":{"id":16777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16776,"mutability":"mutable","name":"name","nameLocation":"16522:4:28","nodeType":"VariableDeclaration","scope":16781,"src":"16506:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16775,"name":"string","nodeType":"ElementaryTypeName","src":"16506:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16505:22:28"},"returnParameters":{"id":16780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16779,"mutability":"mutable","name":"result","nameLocation":"16556:6:28","nodeType":"VariableDeclaration","scope":16781,"src":"16551:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16778,"name":"bool","nodeType":"ElementaryTypeName","src":"16551:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16550:13:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16789,"nodeType":"FunctionDefinition","src":"16712:75:28","nodes":[],"documentation":{"id":16782,"nodeType":"StructuredDocumentation","src":"16570:137:28","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"16721:6:28","parameters":{"id":16785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16784,"mutability":"mutable","name":"name","nameLocation":"16744:4:28","nodeType":"VariableDeclaration","scope":16789,"src":"16728:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16783,"name":"string","nodeType":"ElementaryTypeName","src":"16728:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16727:22:28"},"returnParameters":{"id":16788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16787,"mutability":"mutable","name":"value","nameLocation":"16780:5:28","nodeType":"VariableDeclaration","scope":16789,"src":"16773:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16786,"name":"int256","nodeType":"ElementaryTypeName","src":"16773:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"16772:14:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16800,"nodeType":"FunctionDefinition","src":"16969:107:28","nodes":[],"documentation":{"id":16790,"nodeType":"StructuredDocumentation","src":"16793:171:28","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"16978:6:28","parameters":{"id":16795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16792,"mutability":"mutable","name":"name","nameLocation":"17001:4:28","nodeType":"VariableDeclaration","scope":16800,"src":"16985:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16791,"name":"string","nodeType":"ElementaryTypeName","src":"16985:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16794,"mutability":"mutable","name":"delim","nameLocation":"17023:5:28","nodeType":"VariableDeclaration","scope":16800,"src":"17007:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16793,"name":"string","nodeType":"ElementaryTypeName","src":"17007:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16984:45:28"},"returnParameters":{"id":16799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16798,"mutability":"mutable","name":"value","nameLocation":"17069:5:28","nodeType":"VariableDeclaration","scope":16800,"src":"17053:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16796,"name":"int256","nodeType":"ElementaryTypeName","src":"17053:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16797,"nodeType":"ArrayTypeName","src":"17053:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"17052:23:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16810,"nodeType":"FunctionDefinition","src":"17267:91:28","nodes":[],"documentation":{"id":16801,"nodeType":"StructuredDocumentation","src":"17082:180:28","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17276:5:28","parameters":{"id":16806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16803,"mutability":"mutable","name":"name","nameLocation":"17298:4:28","nodeType":"VariableDeclaration","scope":16810,"src":"17282:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16802,"name":"string","nodeType":"ElementaryTypeName","src":"17282:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16805,"mutability":"mutable","name":"defaultValue","nameLocation":"17309:12:28","nodeType":"VariableDeclaration","scope":16810,"src":"17304:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16804,"name":"bool","nodeType":"ElementaryTypeName","src":"17304:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17281:41:28"},"returnParameters":{"id":16809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16808,"mutability":"mutable","name":"value","nameLocation":"17351:5:28","nodeType":"VariableDeclaration","scope":16810,"src":"17346:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16807,"name":"bool","nodeType":"ElementaryTypeName","src":"17346:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17345:12:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16820,"nodeType":"FunctionDefinition","src":"17552:97:28","nodes":[],"documentation":{"id":16811,"nodeType":"StructuredDocumentation","src":"17364:183:28","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17561:5:28","parameters":{"id":16816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16813,"mutability":"mutable","name":"name","nameLocation":"17583:4:28","nodeType":"VariableDeclaration","scope":16820,"src":"17567:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16812,"name":"string","nodeType":"ElementaryTypeName","src":"17567:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16815,"mutability":"mutable","name":"defaultValue","nameLocation":"17597:12:28","nodeType":"VariableDeclaration","scope":16820,"src":"17589:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16814,"name":"uint256","nodeType":"ElementaryTypeName","src":"17589:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17566:44:28"},"returnParameters":{"id":16819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16818,"mutability":"mutable","name":"value","nameLocation":"17642:5:28","nodeType":"VariableDeclaration","scope":16820,"src":"17634:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16817,"name":"uint256","nodeType":"ElementaryTypeName","src":"17634:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17633:15:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16834,"nodeType":"FunctionDefinition","src":"17877:164:28","nodes":[],"documentation":{"id":16821,"nodeType":"StructuredDocumentation","src":"17655:217:28","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"17886:5:28","parameters":{"id":16829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16823,"mutability":"mutable","name":"name","nameLocation":"17908:4:28","nodeType":"VariableDeclaration","scope":16834,"src":"17892:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16822,"name":"string","nodeType":"ElementaryTypeName","src":"17892:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16825,"mutability":"mutable","name":"delim","nameLocation":"17930:5:28","nodeType":"VariableDeclaration","scope":16834,"src":"17914:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16824,"name":"string","nodeType":"ElementaryTypeName","src":"17914:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16828,"mutability":"mutable","name":"defaultValue","nameLocation":"17956:12:28","nodeType":"VariableDeclaration","scope":16834,"src":"17937:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16826,"name":"address","nodeType":"ElementaryTypeName","src":"17937:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16827,"nodeType":"ArrayTypeName","src":"17937:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"17891:78:28"},"returnParameters":{"id":16833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16832,"mutability":"mutable","name":"value","nameLocation":"18034:5:28","nodeType":"VariableDeclaration","scope":16834,"src":"18017:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16830,"name":"address","nodeType":"ElementaryTypeName","src":"18017:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16831,"nodeType":"ArrayTypeName","src":"18017:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"18016:24:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16848,"nodeType":"FunctionDefinition","src":"18269:164:28","nodes":[],"documentation":{"id":16835,"nodeType":"StructuredDocumentation","src":"18047:217:28","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"18278:5:28","parameters":{"id":16843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16837,"mutability":"mutable","name":"name","nameLocation":"18300:4:28","nodeType":"VariableDeclaration","scope":16848,"src":"18284:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16836,"name":"string","nodeType":"ElementaryTypeName","src":"18284:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16839,"mutability":"mutable","name":"delim","nameLocation":"18322:5:28","nodeType":"VariableDeclaration","scope":16848,"src":"18306:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16838,"name":"string","nodeType":"ElementaryTypeName","src":"18306:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16842,"mutability":"mutable","name":"defaultValue","nameLocation":"18348:12:28","nodeType":"VariableDeclaration","scope":16848,"src":"18329:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18329:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16841,"nodeType":"ArrayTypeName","src":"18329:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18283:78:28"},"returnParameters":{"id":16847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16846,"mutability":"mutable","name":"value","nameLocation":"18426:5:28","nodeType":"VariableDeclaration","scope":16848,"src":"18409:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18409:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16845,"nodeType":"ArrayTypeName","src":"18409:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18408:24:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16862,"nodeType":"FunctionDefinition","src":"18660:162:28","nodes":[],"documentation":{"id":16849,"nodeType":"StructuredDocumentation","src":"18439:216:28","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"18669:5:28","parameters":{"id":16857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16851,"mutability":"mutable","name":"name","nameLocation":"18691:4:28","nodeType":"VariableDeclaration","scope":16862,"src":"18675:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16850,"name":"string","nodeType":"ElementaryTypeName","src":"18675:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16853,"mutability":"mutable","name":"delim","nameLocation":"18713:5:28","nodeType":"VariableDeclaration","scope":16862,"src":"18697:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16852,"name":"string","nodeType":"ElementaryTypeName","src":"18697:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16856,"mutability":"mutable","name":"defaultValue","nameLocation":"18738:12:28","nodeType":"VariableDeclaration","scope":16862,"src":"18720:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16854,"name":"string","nodeType":"ElementaryTypeName","src":"18720:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16855,"nodeType":"ArrayTypeName","src":"18720:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"18674:77:28"},"returnParameters":{"id":16861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16860,"mutability":"mutable","name":"value","nameLocation":"18815:5:28","nodeType":"VariableDeclaration","scope":16862,"src":"18799:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16858,"name":"string","nodeType":"ElementaryTypeName","src":"18799:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16859,"nodeType":"ArrayTypeName","src":"18799:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"18798:23:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16876,"nodeType":"FunctionDefinition","src":"19048:160:28","nodes":[],"documentation":{"id":16863,"nodeType":"StructuredDocumentation","src":"18828:215:28","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19057:5:28","parameters":{"id":16871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16865,"mutability":"mutable","name":"name","nameLocation":"19079:4:28","nodeType":"VariableDeclaration","scope":16876,"src":"19063:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16864,"name":"string","nodeType":"ElementaryTypeName","src":"19063:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16867,"mutability":"mutable","name":"delim","nameLocation":"19101:5:28","nodeType":"VariableDeclaration","scope":16876,"src":"19085:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16866,"name":"string","nodeType":"ElementaryTypeName","src":"19085:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16870,"mutability":"mutable","name":"defaultValue","nameLocation":"19125:12:28","nodeType":"VariableDeclaration","scope":16876,"src":"19108:29:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16868,"name":"bytes","nodeType":"ElementaryTypeName","src":"19108:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16869,"nodeType":"ArrayTypeName","src":"19108:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"19062:76:28"},"returnParameters":{"id":16875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16874,"mutability":"mutable","name":"value","nameLocation":"19201:5:28","nodeType":"VariableDeclaration","scope":16876,"src":"19186:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16872,"name":"bytes","nodeType":"ElementaryTypeName","src":"19186:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16873,"nodeType":"ArrayTypeName","src":"19186:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"19185:22:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16886,"nodeType":"FunctionDefinition","src":"19401:95:28","nodes":[],"documentation":{"id":16877,"nodeType":"StructuredDocumentation","src":"19214:182:28","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19410:5:28","parameters":{"id":16882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16879,"mutability":"mutable","name":"name","nameLocation":"19432:4:28","nodeType":"VariableDeclaration","scope":16886,"src":"19416:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16878,"name":"string","nodeType":"ElementaryTypeName","src":"19416:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16881,"mutability":"mutable","name":"defaultValue","nameLocation":"19445:12:28","nodeType":"VariableDeclaration","scope":16886,"src":"19438:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16880,"name":"int256","nodeType":"ElementaryTypeName","src":"19438:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19415:43:28"},"returnParameters":{"id":16885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16884,"mutability":"mutable","name":"value","nameLocation":"19489:5:28","nodeType":"VariableDeclaration","scope":16886,"src":"19482:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16883,"name":"int256","nodeType":"ElementaryTypeName","src":"19482:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19481:14:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16896,"nodeType":"FunctionDefinition","src":"19690:97:28","nodes":[],"documentation":{"id":16887,"nodeType":"StructuredDocumentation","src":"19502:183:28","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19699:5:28","parameters":{"id":16892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16889,"mutability":"mutable","name":"name","nameLocation":"19721:4:28","nodeType":"VariableDeclaration","scope":16896,"src":"19705:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16888,"name":"string","nodeType":"ElementaryTypeName","src":"19705:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16891,"mutability":"mutable","name":"defaultValue","nameLocation":"19735:12:28","nodeType":"VariableDeclaration","scope":16896,"src":"19727:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16890,"name":"address","nodeType":"ElementaryTypeName","src":"19727:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19704:44:28"},"returnParameters":{"id":16895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16894,"mutability":"mutable","name":"value","nameLocation":"19780:5:28","nodeType":"VariableDeclaration","scope":16896,"src":"19772:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16893,"name":"address","nodeType":"ElementaryTypeName","src":"19772:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19771:15:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16906,"nodeType":"FunctionDefinition","src":"19981:97:28","nodes":[],"documentation":{"id":16897,"nodeType":"StructuredDocumentation","src":"19793:183:28","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"19990:5:28","parameters":{"id":16902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16899,"mutability":"mutable","name":"name","nameLocation":"20012:4:28","nodeType":"VariableDeclaration","scope":16906,"src":"19996:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16898,"name":"string","nodeType":"ElementaryTypeName","src":"19996:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16901,"mutability":"mutable","name":"defaultValue","nameLocation":"20026:12:28","nodeType":"VariableDeclaration","scope":16906,"src":"20018:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20018:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19995:44:28"},"returnParameters":{"id":16905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16904,"mutability":"mutable","name":"value","nameLocation":"20071:5:28","nodeType":"VariableDeclaration","scope":16906,"src":"20063:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20063:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20062:15:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16916,"nodeType":"FunctionDefinition","src":"20271:111:28","nodes":[],"documentation":{"id":16907,"nodeType":"StructuredDocumentation","src":"20084:182:28","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20280:5:28","parameters":{"id":16912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16909,"mutability":"mutable","name":"name","nameLocation":"20302:4:28","nodeType":"VariableDeclaration","scope":16916,"src":"20286:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16908,"name":"string","nodeType":"ElementaryTypeName","src":"20286:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16911,"mutability":"mutable","name":"defaultValue","nameLocation":"20324:12:28","nodeType":"VariableDeclaration","scope":16916,"src":"20308:28:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16910,"name":"string","nodeType":"ElementaryTypeName","src":"20308:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20285:52:28"},"returnParameters":{"id":16915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16914,"mutability":"mutable","name":"value","nameLocation":"20375:5:28","nodeType":"VariableDeclaration","scope":16916,"src":"20361:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16913,"name":"string","nodeType":"ElementaryTypeName","src":"20361:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20360:21:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16926,"nodeType":"FunctionDefinition","src":"20574:109:28","nodes":[],"documentation":{"id":16917,"nodeType":"StructuredDocumentation","src":"20388:181:28","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20583:5:28","parameters":{"id":16922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16919,"mutability":"mutable","name":"name","nameLocation":"20605:4:28","nodeType":"VariableDeclaration","scope":16926,"src":"20589:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16918,"name":"string","nodeType":"ElementaryTypeName","src":"20589:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16921,"mutability":"mutable","name":"defaultValue","nameLocation":"20626:12:28","nodeType":"VariableDeclaration","scope":16926,"src":"20611:27:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16920,"name":"bytes","nodeType":"ElementaryTypeName","src":"20611:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20588:51:28"},"returnParameters":{"id":16925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16924,"mutability":"mutable","name":"value","nameLocation":"20676:5:28","nodeType":"VariableDeclaration","scope":16926,"src":"20663:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16923,"name":"bytes","nodeType":"ElementaryTypeName","src":"20663:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20662:20:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16940,"nodeType":"FunctionDefinition","src":"20908:158:28","nodes":[],"documentation":{"id":16927,"nodeType":"StructuredDocumentation","src":"20689:214:28","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"20917:5:28","parameters":{"id":16935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16929,"mutability":"mutable","name":"name","nameLocation":"20939:4:28","nodeType":"VariableDeclaration","scope":16940,"src":"20923:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16928,"name":"string","nodeType":"ElementaryTypeName","src":"20923:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16931,"mutability":"mutable","name":"delim","nameLocation":"20961:5:28","nodeType":"VariableDeclaration","scope":16940,"src":"20945:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16930,"name":"string","nodeType":"ElementaryTypeName","src":"20945:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16934,"mutability":"mutable","name":"defaultValue","nameLocation":"20984:12:28","nodeType":"VariableDeclaration","scope":16940,"src":"20968:28:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16932,"name":"bool","nodeType":"ElementaryTypeName","src":"20968:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16933,"nodeType":"ArrayTypeName","src":"20968:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"20922:75:28"},"returnParameters":{"id":16939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16938,"mutability":"mutable","name":"value","nameLocation":"21059:5:28","nodeType":"VariableDeclaration","scope":16940,"src":"21045:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16936,"name":"bool","nodeType":"ElementaryTypeName","src":"21045:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16937,"nodeType":"ArrayTypeName","src":"21045:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"21044:21:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16954,"nodeType":"FunctionDefinition","src":"21294:164:28","nodes":[],"documentation":{"id":16941,"nodeType":"StructuredDocumentation","src":"21072:217:28","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21303:5:28","parameters":{"id":16949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16943,"mutability":"mutable","name":"name","nameLocation":"21325:4:28","nodeType":"VariableDeclaration","scope":16954,"src":"21309:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16942,"name":"string","nodeType":"ElementaryTypeName","src":"21309:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16945,"mutability":"mutable","name":"delim","nameLocation":"21347:5:28","nodeType":"VariableDeclaration","scope":16954,"src":"21331:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16944,"name":"string","nodeType":"ElementaryTypeName","src":"21331:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16948,"mutability":"mutable","name":"defaultValue","nameLocation":"21373:12:28","nodeType":"VariableDeclaration","scope":16954,"src":"21354:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16946,"name":"uint256","nodeType":"ElementaryTypeName","src":"21354:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16947,"nodeType":"ArrayTypeName","src":"21354:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21308:78:28"},"returnParameters":{"id":16953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16952,"mutability":"mutable","name":"value","nameLocation":"21451:5:28","nodeType":"VariableDeclaration","scope":16954,"src":"21434:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16950,"name":"uint256","nodeType":"ElementaryTypeName","src":"21434:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16951,"nodeType":"ArrayTypeName","src":"21434:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21433:24:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16968,"nodeType":"FunctionDefinition","src":"21685:162:28","nodes":[],"documentation":{"id":16955,"nodeType":"StructuredDocumentation","src":"21464:216:28","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"21694:5:28","parameters":{"id":16963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16957,"mutability":"mutable","name":"name","nameLocation":"21716:4:28","nodeType":"VariableDeclaration","scope":16968,"src":"21700:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16956,"name":"string","nodeType":"ElementaryTypeName","src":"21700:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16959,"mutability":"mutable","name":"delim","nameLocation":"21738:5:28","nodeType":"VariableDeclaration","scope":16968,"src":"21722:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16958,"name":"string","nodeType":"ElementaryTypeName","src":"21722:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16962,"mutability":"mutable","name":"defaultValue","nameLocation":"21763:12:28","nodeType":"VariableDeclaration","scope":16968,"src":"21745:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16960,"name":"int256","nodeType":"ElementaryTypeName","src":"21745:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16961,"nodeType":"ArrayTypeName","src":"21745:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21699:77:28"},"returnParameters":{"id":16967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16966,"mutability":"mutable","name":"value","nameLocation":"21840:5:28","nodeType":"VariableDeclaration","scope":16968,"src":"21824:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16964,"name":"int256","nodeType":"ElementaryTypeName","src":"21824:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16965,"nodeType":"ArrayTypeName","src":"21824:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"21823:23:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16976,"nodeType":"FunctionDefinition","src":"21995:85:28","nodes":[],"documentation":{"id":16969,"nodeType":"StructuredDocumentation","src":"21853:137:28","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"22004:9:28","parameters":{"id":16972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16971,"mutability":"mutable","name":"name","nameLocation":"22030:4:28","nodeType":"VariableDeclaration","scope":16976,"src":"22014:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16970,"name":"string","nodeType":"ElementaryTypeName","src":"22014:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22013:22:28"},"returnParameters":{"id":16975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16974,"mutability":"mutable","name":"value","nameLocation":"22073:5:28","nodeType":"VariableDeclaration","scope":16976,"src":"22059:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16973,"name":"string","nodeType":"ElementaryTypeName","src":"22059:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22058:21:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16987,"nodeType":"FunctionDefinition","src":"22262:110:28","nodes":[],"documentation":{"id":16977,"nodeType":"StructuredDocumentation","src":"22086:171:28","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"22271:9:28","parameters":{"id":16982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16979,"mutability":"mutable","name":"name","nameLocation":"22297:4:28","nodeType":"VariableDeclaration","scope":16987,"src":"22281:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16978,"name":"string","nodeType":"ElementaryTypeName","src":"22281:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16981,"mutability":"mutable","name":"delim","nameLocation":"22319:5:28","nodeType":"VariableDeclaration","scope":16987,"src":"22303:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16980,"name":"string","nodeType":"ElementaryTypeName","src":"22303:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22280:45:28"},"returnParameters":{"id":16986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16985,"mutability":"mutable","name":"value","nameLocation":"22365:5:28","nodeType":"VariableDeclaration","scope":16987,"src":"22349:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16983,"name":"string","nodeType":"ElementaryTypeName","src":"22349:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16984,"nodeType":"ArrayTypeName","src":"22349:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"22348:23:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16995,"nodeType":"FunctionDefinition","src":"22521:77:28","nodes":[],"documentation":{"id":16988,"nodeType":"StructuredDocumentation","src":"22378:138:28","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"22530:7:28","parameters":{"id":16991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16990,"mutability":"mutable","name":"name","nameLocation":"22554:4:28","nodeType":"VariableDeclaration","scope":16995,"src":"22538:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16989,"name":"string","nodeType":"ElementaryTypeName","src":"22538:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22537:22:28"},"returnParameters":{"id":16994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16993,"mutability":"mutable","name":"value","nameLocation":"22591:5:28","nodeType":"VariableDeclaration","scope":16995,"src":"22583:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16992,"name":"uint256","nodeType":"ElementaryTypeName","src":"22583:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22582:15:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17006,"nodeType":"FunctionDefinition","src":"22781:109:28","nodes":[],"documentation":{"id":16996,"nodeType":"StructuredDocumentation","src":"22604:172:28","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"22790:7:28","parameters":{"id":17001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16998,"mutability":"mutable","name":"name","nameLocation":"22814:4:28","nodeType":"VariableDeclaration","scope":17006,"src":"22798:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16997,"name":"string","nodeType":"ElementaryTypeName","src":"22798:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17000,"mutability":"mutable","name":"delim","nameLocation":"22836:5:28","nodeType":"VariableDeclaration","scope":17006,"src":"22820:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16999,"name":"string","nodeType":"ElementaryTypeName","src":"22820:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22797:45:28"},"returnParameters":{"id":17005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17004,"mutability":"mutable","name":"value","nameLocation":"22883:5:28","nodeType":"VariableDeclaration","scope":17006,"src":"22866:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17002,"name":"uint256","nodeType":"ElementaryTypeName","src":"22866:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17003,"nodeType":"ArrayTypeName","src":"22866:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22865:24:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17015,"nodeType":"FunctionDefinition","src":"22967:77:28","nodes":[],"documentation":{"id":17007,"nodeType":"StructuredDocumentation","src":"22896:66:28","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"22976:9:28","parameters":{"id":17011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17010,"mutability":"mutable","name":"context","nameLocation":"22999:7:28","nodeType":"VariableDeclaration","scope":17015,"src":"22986:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$16353","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":17009,"nodeType":"UserDefinedTypeName","pathNode":{"id":17008,"name":"ForgeContext","nameLocations":["22986:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":16353,"src":"22986:12:28"},"referencedDeclaration":16353,"src":"22986:12:28","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$16353","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"22985:22:28"},"returnParameters":{"id":17014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17013,"mutability":"mutable","name":"result","nameLocation":"23036:6:28","nodeType":"VariableDeclaration","scope":17015,"src":"23031:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17012,"name":"bool","nodeType":"ElementaryTypeName","src":"23031:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23030:13:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17023,"nodeType":"FunctionDefinition","src":"23086:70:28","nodes":[],"documentation":{"id":17016,"nodeType":"StructuredDocumentation","src":"23050:31:28","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"23095:6:28","parameters":{"id":17021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17018,"mutability":"mutable","name":"name","nameLocation":"23118:4:28","nodeType":"VariableDeclaration","scope":17023,"src":"23102:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17017,"name":"string","nodeType":"ElementaryTypeName","src":"23102:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17020,"mutability":"mutable","name":"value","nameLocation":"23140:5:28","nodeType":"VariableDeclaration","scope":17023,"src":"23124:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17019,"name":"string","nodeType":"ElementaryTypeName","src":"23124:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23101:45:28"},"returnParameters":{"id":17022,"nodeType":"ParameterList","parameters":[],"src":"23155:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17035,"nodeType":"FunctionDefinition","src":"23288:109:28","nodes":[],"documentation":{"id":17024,"nodeType":"StructuredDocumentation","src":"23192:91:28","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"23297:8:28","parameters":{"id":17027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17026,"mutability":"mutable","name":"target","nameLocation":"23314:6:28","nodeType":"VariableDeclaration","scope":17035,"src":"23306:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17025,"name":"address","nodeType":"ElementaryTypeName","src":"23306:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23305:16:28"},"returnParameters":{"id":17034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17030,"mutability":"mutable","name":"readSlots","nameLocation":"23357:9:28","nodeType":"VariableDeclaration","scope":17035,"src":"23340:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23340:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17029,"nodeType":"ArrayTypeName","src":"23340:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":17033,"mutability":"mutable","name":"writeSlots","nameLocation":"23385:10:28","nodeType":"VariableDeclaration","scope":17035,"src":"23368:27:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23368:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17032,"nodeType":"ArrayTypeName","src":"23368:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23339:57:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17043,"nodeType":"FunctionDefinition","src":"23453:74:28","nodes":[],"documentation":{"id":17036,"nodeType":"StructuredDocumentation","src":"23403:45:28","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"23462:4:28","parameters":{"id":17039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17038,"mutability":"mutable","name":"privateKey","nameLocation":"23475:10:28","nodeType":"VariableDeclaration","scope":17043,"src":"23467:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17037,"name":"uint256","nodeType":"ElementaryTypeName","src":"23467:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23466:20:28"},"returnParameters":{"id":17042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17041,"mutability":"mutable","name":"keyAddr","nameLocation":"23518:7:28","nodeType":"VariableDeclaration","scope":17043,"src":"23510:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17040,"name":"address","nodeType":"ElementaryTypeName","src":"23510:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23509:17:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17060,"nodeType":"FunctionDefinition","src":"23590:160:28","nodes":[],"documentation":{"id":17044,"nodeType":"StructuredDocumentation","src":"23533:52:28","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"23599:11:28","parameters":{"id":17054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17046,"mutability":"mutable","name":"fromBlock","nameLocation":"23619:9:28","nodeType":"VariableDeclaration","scope":17060,"src":"23611:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17045,"name":"uint256","nodeType":"ElementaryTypeName","src":"23611:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17048,"mutability":"mutable","name":"toBlock","nameLocation":"23638:7:28","nodeType":"VariableDeclaration","scope":17060,"src":"23630:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17047,"name":"uint256","nodeType":"ElementaryTypeName","src":"23630:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17050,"mutability":"mutable","name":"target","nameLocation":"23655:6:28","nodeType":"VariableDeclaration","scope":17060,"src":"23647:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17049,"name":"address","nodeType":"ElementaryTypeName","src":"23647:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17053,"mutability":"mutable","name":"topics","nameLocation":"23682:6:28","nodeType":"VariableDeclaration","scope":17060,"src":"23663:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23663:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17052,"nodeType":"ArrayTypeName","src":"23663:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23610:79:28"},"returnParameters":{"id":17059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17058,"mutability":"mutable","name":"logs","nameLocation":"23744:4:28","nodeType":"VariableDeclaration","scope":17060,"src":"23724:24:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$16386_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":17056,"nodeType":"UserDefinedTypeName","pathNode":{"id":17055,"name":"EthGetLogs","nameLocations":["23724:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":16386,"src":"23724:10:28"},"referencedDeclaration":16386,"src":"23724:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$16386_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":17057,"nodeType":"ArrayTypeName","src":"23724:12:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$16386_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"23723:26:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17066,"nodeType":"FunctionDefinition","src":"24087:70:28","nodes":[],"documentation":{"id":17061,"nodeType":"StructuredDocumentation","src":"23756:326:28","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"24096:14:28","parameters":{"id":17062,"nodeType":"ParameterList","parameters":[],"src":"24110:2:28"},"returnParameters":{"id":17065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17064,"mutability":"mutable","name":"blobBaseFee","nameLocation":"24144:11:28","nodeType":"VariableDeclaration","scope":17066,"src":"24136:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17063,"name":"uint256","nodeType":"ElementaryTypeName","src":"24136:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24135:21:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17072,"nodeType":"FunctionDefinition","src":"24472:65:28","nodes":[],"documentation":{"id":17067,"nodeType":"StructuredDocumentation","src":"24163:304:28","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"24481:14:28","parameters":{"id":17068,"nodeType":"ParameterList","parameters":[],"src":"24495:2:28"},"returnParameters":{"id":17071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17070,"mutability":"mutable","name":"height","nameLocation":"24529:6:28","nodeType":"VariableDeclaration","scope":17072,"src":"24521:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17069,"name":"uint256","nodeType":"ElementaryTypeName","src":"24521:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24520:16:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17078,"nodeType":"FunctionDefinition","src":"24861:71:28","nodes":[],"documentation":{"id":17073,"nodeType":"StructuredDocumentation","src":"24543:313:28","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"24870:17:28","parameters":{"id":17074,"nodeType":"ParameterList","parameters":[],"src":"24887:2:28"},"returnParameters":{"id":17077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17076,"mutability":"mutable","name":"timestamp","nameLocation":"24921:9:28","nodeType":"VariableDeclaration","scope":17078,"src":"24913:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17075,"name":"uint256","nodeType":"ElementaryTypeName","src":"24913:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24912:19:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17092,"nodeType":"FunctionDefinition","src":"25025:146:28","nodes":[],"documentation":{"id":17079,"nodeType":"StructuredDocumentation","src":"24938:82:28","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"25034:24:28","parameters":{"id":17084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17081,"mutability":"mutable","name":"target","nameLocation":"25067:6:28","nodeType":"VariableDeclaration","scope":17092,"src":"25059:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17080,"name":"address","nodeType":"ElementaryTypeName","src":"25059:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17083,"mutability":"mutable","name":"elementSlot","nameLocation":"25083:11:28","nodeType":"VariableDeclaration","scope":17092,"src":"25075:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25075:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25058:37:28"},"returnParameters":{"id":17091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17086,"mutability":"mutable","name":"found","nameLocation":"25135:5:28","nodeType":"VariableDeclaration","scope":17092,"src":"25130:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17085,"name":"bool","nodeType":"ElementaryTypeName","src":"25130:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17088,"mutability":"mutable","name":"key","nameLocation":"25150:3:28","nodeType":"VariableDeclaration","scope":17092,"src":"25142:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25142:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17090,"mutability":"mutable","name":"parent","nameLocation":"25163:6:28","nodeType":"VariableDeclaration","scope":17092,"src":"25155:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25155:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25129:41:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17102,"nodeType":"FunctionDefinition","src":"25268:97:28","nodes":[],"documentation":{"id":17093,"nodeType":"StructuredDocumentation","src":"25177:86:28","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"25277:16:28","parameters":{"id":17098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17095,"mutability":"mutable","name":"target","nameLocation":"25302:6:28","nodeType":"VariableDeclaration","scope":17102,"src":"25294:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17094,"name":"address","nodeType":"ElementaryTypeName","src":"25294:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17097,"mutability":"mutable","name":"mappingSlot","nameLocation":"25318:11:28","nodeType":"VariableDeclaration","scope":17102,"src":"25310:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25310:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25293:37:28"},"returnParameters":{"id":17101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17100,"mutability":"mutable","name":"length","nameLocation":"25357:6:28","nodeType":"VariableDeclaration","scope":17102,"src":"25349:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17099,"name":"uint256","nodeType":"ElementaryTypeName","src":"25349:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25348:16:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17114,"nodeType":"FunctionDefinition","src":"25569:109:28","nodes":[],"documentation":{"id":17103,"nodeType":"StructuredDocumentation","src":"25371:193:28","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"25578:16:28","parameters":{"id":17110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17105,"mutability":"mutable","name":"target","nameLocation":"25603:6:28","nodeType":"VariableDeclaration","scope":17114,"src":"25595:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17104,"name":"address","nodeType":"ElementaryTypeName","src":"25595:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17107,"mutability":"mutable","name":"mappingSlot","nameLocation":"25619:11:28","nodeType":"VariableDeclaration","scope":17114,"src":"25611:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25611:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17109,"mutability":"mutable","name":"idx","nameLocation":"25640:3:28","nodeType":"VariableDeclaration","scope":17114,"src":"25632:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17108,"name":"uint256","nodeType":"ElementaryTypeName","src":"25632:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25594:50:28"},"returnParameters":{"id":17113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17112,"mutability":"mutable","name":"value","nameLocation":"25671:5:28","nodeType":"VariableDeclaration","scope":17114,"src":"25663:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25663:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25662:15:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17122,"nodeType":"FunctionDefinition","src":"25722:72:28","nodes":[],"documentation":{"id":17115,"nodeType":"StructuredDocumentation","src":"25684:33:28","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"25731:8:28","parameters":{"id":17118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17117,"mutability":"mutable","name":"account","nameLocation":"25748:7:28","nodeType":"VariableDeclaration","scope":17122,"src":"25740:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17116,"name":"address","nodeType":"ElementaryTypeName","src":"25740:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25739:17:28"},"returnParameters":{"id":17121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17120,"mutability":"mutable","name":"nonce","nameLocation":"25787:5:28","nodeType":"VariableDeclaration","scope":17122,"src":"25780:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17119,"name":"uint64","nodeType":"ElementaryTypeName","src":"25780:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25779:14:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17131,"nodeType":"FunctionDefinition","src":"25837:74:28","nodes":[],"documentation":{"id":17123,"nodeType":"StructuredDocumentation","src":"25800:32:28","text":"Get the nonce of a `Wallet`."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"25846:8:28","parameters":{"id":17127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17126,"mutability":"mutable","name":"wallet","nameLocation":"25871:6:28","nodeType":"VariableDeclaration","scope":17131,"src":"25855:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16421_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":17125,"nodeType":"UserDefinedTypeName","pathNode":{"id":17124,"name":"Wallet","nameLocations":["25855:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":16421,"src":"25855:6:28"},"referencedDeclaration":16421,"src":"25855:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$16421_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"25854:24:28"},"returnParameters":{"id":17130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17129,"mutability":"mutable","name":"nonce","nameLocation":"25904:5:28","nodeType":"VariableDeclaration","scope":17131,"src":"25897:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17128,"name":"uint64","nodeType":"ElementaryTypeName","src":"25897:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25896:14:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17139,"nodeType":"FunctionDefinition","src":"25953:64:28","nodes":[],"documentation":{"id":17132,"nodeType":"StructuredDocumentation","src":"25917:31:28","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"25962:15:28","parameters":{"id":17133,"nodeType":"ParameterList","parameters":[],"src":"25977:2:28"},"returnParameters":{"id":17138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17137,"mutability":"mutable","name":"logs","nameLocation":"26011:4:28","nodeType":"VariableDeclaration","scope":17139,"src":"25998:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$16361_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":17135,"nodeType":"UserDefinedTypeName","pathNode":{"id":17134,"name":"Log","nameLocations":["25998:3:28"],"nodeType":"IdentifierPath","referencedDeclaration":16361,"src":"25998:3:28"},"referencedDeclaration":16361,"src":"25998:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$16361_storage_ptr","typeString":"struct VmSafe.Log"}},"id":17136,"nodeType":"ArrayTypeName","src":"25998:5:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$16361_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"25997:19:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17146,"nodeType":"FunctionDefinition","src":"26067:62:28","nodes":[],"documentation":{"id":17140,"nodeType":"StructuredDocumentation","src":"26023:39:28","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"26076:11:28","parameters":{"id":17141,"nodeType":"ParameterList","parameters":[],"src":"26087:2:28"},"returnParameters":{"id":17145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17144,"mutability":"mutable","name":"gas","nameLocation":"26124:3:28","nodeType":"VariableDeclaration","scope":17146,"src":"26113:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$16488_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":17143,"nodeType":"UserDefinedTypeName","pathNode":{"id":17142,"name":"Gas","nameLocations":["26113:3:28"],"nodeType":"IdentifierPath","referencedDeclaration":16488,"src":"26113:3:28"},"referencedDeclaration":16488,"src":"26113:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$16488_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"26112:16:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17156,"nodeType":"FunctionDefinition","src":"26181:81:28","nodes":[],"documentation":{"id":17147,"nodeType":"StructuredDocumentation","src":"26135:41:28","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"26190:4:28","parameters":{"id":17152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17149,"mutability":"mutable","name":"target","nameLocation":"26203:6:28","nodeType":"VariableDeclaration","scope":17156,"src":"26195:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17148,"name":"address","nodeType":"ElementaryTypeName","src":"26195:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17151,"mutability":"mutable","name":"slot","nameLocation":"26219:4:28","nodeType":"VariableDeclaration","scope":17156,"src":"26211:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26211:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26194:30:28"},"returnParameters":{"id":17155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17154,"mutability":"mutable","name":"data","nameLocation":"26256:4:28","nodeType":"VariableDeclaration","scope":17156,"src":"26248:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26248:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"26247:14:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17160,"nodeType":"FunctionDefinition","src":"26353:37:28","nodes":[],"documentation":{"id":17157,"nodeType":"StructuredDocumentation","src":"26268:80:28","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"26362:16:28","parameters":{"id":17158,"nodeType":"ParameterList","parameters":[],"src":"26378:2:28"},"returnParameters":{"id":17159,"nodeType":"ParameterList","parameters":[],"src":"26389:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17164,"nodeType":"FunctionDefinition","src":"26442:27:28","nodes":[],"documentation":{"id":17161,"nodeType":"StructuredDocumentation","src":"26396:41:28","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"26451:6:28","parameters":{"id":17162,"nodeType":"ParameterList","parameters":[],"src":"26457:2:28"},"returnParameters":{"id":17163,"nodeType":"ParameterList","parameters":[],"src":"26468:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17168,"nodeType":"FunctionDefinition","src":"26516:31:28","nodes":[],"documentation":{"id":17165,"nodeType":"StructuredDocumentation","src":"26475:36:28","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"26525:10:28","parameters":{"id":17166,"nodeType":"ParameterList","parameters":[],"src":"26535:2:28"},"returnParameters":{"id":17167,"nodeType":"ParameterList","parameters":[],"src":"26546:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17172,"nodeType":"FunctionDefinition","src":"26618:37:28","nodes":[],"documentation":{"id":17169,"nodeType":"StructuredDocumentation","src":"26553:60:28","text":"Reset gas metering (i.e. gas usage is set to gas limit)."},"functionSelector":"be367dd3","implemented":false,"kind":"function","modifiers":[],"name":"resetGasMetering","nameLocation":"26627:16:28","parameters":{"id":17170,"nodeType":"ParameterList","parameters":[],"src":"26643:2:28"},"returnParameters":{"id":17171,"nodeType":"ParameterList","parameters":[],"src":"26654:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17176,"nodeType":"FunctionDefinition","src":"26745:38:28","nodes":[],"documentation":{"id":17173,"nodeType":"StructuredDocumentation","src":"26661:79:28","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"26754:17:28","parameters":{"id":17174,"nodeType":"ParameterList","parameters":[],"src":"26771:2:28"},"returnParameters":{"id":17175,"nodeType":"ParameterList","parameters":[],"src":"26782:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17186,"nodeType":"FunctionDefinition","src":"26860:98:28","nodes":[],"documentation":{"id":17177,"nodeType":"StructuredDocumentation","src":"26789:66:28","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"26869:3:28","parameters":{"id":17182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17179,"mutability":"mutable","name":"method","nameLocation":"26889:6:28","nodeType":"VariableDeclaration","scope":17186,"src":"26873:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17178,"name":"string","nodeType":"ElementaryTypeName","src":"26873:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17181,"mutability":"mutable","name":"params","nameLocation":"26913:6:28","nodeType":"VariableDeclaration","scope":17186,"src":"26897:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17180,"name":"string","nodeType":"ElementaryTypeName","src":"26897:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26872:48:28"},"returnParameters":{"id":17185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17184,"mutability":"mutable","name":"data","nameLocation":"26952:4:28","nodeType":"VariableDeclaration","scope":17186,"src":"26939:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17183,"name":"bytes","nodeType":"ElementaryTypeName","src":"26939:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26938:19:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17198,"nodeType":"FunctionDefinition","src":"27033:142:28","nodes":[],"documentation":{"id":17187,"nodeType":"StructuredDocumentation","src":"26964:64:28","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"27042:3:28","parameters":{"id":17194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17189,"mutability":"mutable","name":"urlOrAlias","nameLocation":"27062:10:28","nodeType":"VariableDeclaration","scope":17198,"src":"27046:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17188,"name":"string","nodeType":"ElementaryTypeName","src":"27046:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17191,"mutability":"mutable","name":"method","nameLocation":"27090:6:28","nodeType":"VariableDeclaration","scope":17198,"src":"27074:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17190,"name":"string","nodeType":"ElementaryTypeName","src":"27074:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17193,"mutability":"mutable","name":"params","nameLocation":"27114:6:28","nodeType":"VariableDeclaration","scope":17198,"src":"27098:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17192,"name":"string","nodeType":"ElementaryTypeName","src":"27098:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27045:76:28"},"returnParameters":{"id":17197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17196,"mutability":"mutable","name":"data","nameLocation":"27169:4:28","nodeType":"VariableDeclaration","scope":17198,"src":"27156:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17195,"name":"bytes","nodeType":"ElementaryTypeName","src":"27156:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27155:19:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17202,"nodeType":"FunctionDefinition","src":"27243:42:28","nodes":[],"documentation":{"id":17199,"nodeType":"StructuredDocumentation","src":"27181:57:28","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"27252:21:28","parameters":{"id":17200,"nodeType":"ParameterList","parameters":[],"src":"27273:2:28"},"returnParameters":{"id":17201,"nodeType":"ParameterList","parameters":[],"src":"27284:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17206,"nodeType":"FunctionDefinition","src":"27429:44:28","nodes":[],"documentation":{"id":17203,"nodeType":"StructuredDocumentation","src":"27291:133:28","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"27438:23:28","parameters":{"id":17204,"nodeType":"ParameterList","parameters":[],"src":"27461:2:28"},"returnParameters":{"id":17205,"nodeType":"ParameterList","parameters":[],"src":"27472:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17214,"nodeType":"FunctionDefinition","src":"27581:92:28","nodes":[],"documentation":{"id":17207,"nodeType":"StructuredDocumentation","src":"27479:97:28","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"27590:22:28","parameters":{"id":17208,"nodeType":"ParameterList","parameters":[],"src":"27612:2:28"},"returnParameters":{"id":17213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17212,"mutability":"mutable","name":"accountAccesses","nameLocation":"27656:15:28","nodeType":"VariableDeclaration","scope":17214,"src":"27633:38:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$16464_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":17210,"nodeType":"UserDefinedTypeName","pathNode":{"id":17209,"name":"AccountAccess","nameLocations":["27633:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":16464,"src":"27633:13:28"},"referencedDeclaration":16464,"src":"27633:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$16464_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":17211,"nodeType":"ArrayTypeName","src":"27633:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$16464_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"27632:40:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17218,"nodeType":"FunctionDefinition","src":"27769:41:28","nodes":[],"documentation":{"id":17215,"nodeType":"StructuredDocumentation","src":"27679:85:28","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"27778:20:28","parameters":{"id":17216,"nodeType":"ParameterList","parameters":[],"src":"27798:2:28"},"returnParameters":{"id":17217,"nodeType":"ParameterList","parameters":[],"src":"27809:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17224,"nodeType":"FunctionDefinition","src":"28009:50:28","nodes":[],"documentation":{"id":17219,"nodeType":"StructuredDocumentation","src":"27853:151:28","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"28018:9:28","parameters":{"id":17222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17221,"mutability":"mutable","name":"path","nameLocation":"28044:4:28","nodeType":"VariableDeclaration","scope":17224,"src":"28028:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17220,"name":"string","nodeType":"ElementaryTypeName","src":"28028:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28027:22:28"},"returnParameters":{"id":17223,"nodeType":"ParameterList","parameters":[],"src":"28058:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17234,"nodeType":"FunctionDefinition","src":"28374:93:28","nodes":[],"documentation":{"id":17225,"nodeType":"StructuredDocumentation","src":"28065:304:28","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"28383:8:28","parameters":{"id":17230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17227,"mutability":"mutable","name":"from","nameLocation":"28408:4:28","nodeType":"VariableDeclaration","scope":17234,"src":"28392:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17226,"name":"string","nodeType":"ElementaryTypeName","src":"28392:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17229,"mutability":"mutable","name":"to","nameLocation":"28430:2:28","nodeType":"VariableDeclaration","scope":17234,"src":"28414:18:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17228,"name":"string","nodeType":"ElementaryTypeName","src":"28414:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28391:42:28"},"returnParameters":{"id":17233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17232,"mutability":"mutable","name":"copied","nameLocation":"28459:6:28","nodeType":"VariableDeclaration","scope":17234,"src":"28452:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17231,"name":"uint64","nodeType":"ElementaryTypeName","src":"28452:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"28451:15:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17242,"nodeType":"FunctionDefinition","src":"28872:66:28","nodes":[],"documentation":{"id":17235,"nodeType":"StructuredDocumentation","src":"28473:394:28","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"28881:9:28","parameters":{"id":17240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17237,"mutability":"mutable","name":"path","nameLocation":"28907:4:28","nodeType":"VariableDeclaration","scope":17242,"src":"28891:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17236,"name":"string","nodeType":"ElementaryTypeName","src":"28891:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17239,"mutability":"mutable","name":"recursive","nameLocation":"28918:9:28","nodeType":"VariableDeclaration","scope":17242,"src":"28913:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17238,"name":"bool","nodeType":"ElementaryTypeName","src":"28913:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28890:38:28"},"returnParameters":{"id":17241,"nodeType":"ParameterList","parameters":[],"src":"28937:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17250,"nodeType":"FunctionDefinition","src":"29168:93:28","nodes":[],"documentation":{"id":17243,"nodeType":"StructuredDocumentation","src":"28944:219:28","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"29177:10:28","parameters":{"id":17246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17245,"mutability":"mutable","name":"artifactPath","nameLocation":"29204:12:28","nodeType":"VariableDeclaration","scope":17250,"src":"29188:28:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17244,"name":"string","nodeType":"ElementaryTypeName","src":"29188:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29187:30:28"},"returnParameters":{"id":17249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17248,"mutability":"mutable","name":"deployedAddress","nameLocation":"29244:15:28","nodeType":"VariableDeclaration","scope":17250,"src":"29236:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17247,"name":"address","nodeType":"ElementaryTypeName","src":"29236:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29235:25:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17260,"nodeType":"FunctionDefinition","src":"29555:141:28","nodes":[],"documentation":{"id":17251,"nodeType":"StructuredDocumentation","src":"29267:283:28","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"29564:10:28","parameters":{"id":17256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17253,"mutability":"mutable","name":"artifactPath","nameLocation":"29591:12:28","nodeType":"VariableDeclaration","scope":17260,"src":"29575:28:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17252,"name":"string","nodeType":"ElementaryTypeName","src":"29575:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17255,"mutability":"mutable","name":"constructorArgs","nameLocation":"29620:15:28","nodeType":"VariableDeclaration","scope":17260,"src":"29605:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17254,"name":"bytes","nodeType":"ElementaryTypeName","src":"29605:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29574:62:28"},"returnParameters":{"id":17259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17258,"mutability":"mutable","name":"deployedAddress","nameLocation":"29679:15:28","nodeType":"VariableDeclaration","scope":17260,"src":"29671:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17257,"name":"address","nodeType":"ElementaryTypeName","src":"29671:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29670:25:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17268,"nodeType":"FunctionDefinition","src":"29791:69:28","nodes":[],"documentation":{"id":17261,"nodeType":"StructuredDocumentation","src":"29702:84:28","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"29800:6:28","parameters":{"id":17264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17263,"mutability":"mutable","name":"path","nameLocation":"29823:4:28","nodeType":"VariableDeclaration","scope":17268,"src":"29807:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17262,"name":"string","nodeType":"ElementaryTypeName","src":"29807:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29806:22:28"},"returnParameters":{"id":17267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17266,"mutability":"mutable","name":"result","nameLocation":"29852:6:28","nodeType":"VariableDeclaration","scope":17268,"src":"29847:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17265,"name":"bool","nodeType":"ElementaryTypeName","src":"29847:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29846:13:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17277,"nodeType":"FunctionDefinition","src":"29925:84:28","nodes":[],"documentation":{"id":17269,"nodeType":"StructuredDocumentation","src":"29866:54:28","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"29934:3:28","parameters":{"id":17273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17272,"mutability":"mutable","name":"commandInput","nameLocation":"29956:12:28","nodeType":"VariableDeclaration","scope":17277,"src":"29938:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17270,"name":"string","nodeType":"ElementaryTypeName","src":"29938:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17271,"nodeType":"ArrayTypeName","src":"29938:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"29937:32:28"},"returnParameters":{"id":17276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17275,"mutability":"mutable","name":"result","nameLocation":"30001:6:28","nodeType":"VariableDeclaration","scope":17277,"src":"29988:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17274,"name":"bytes","nodeType":"ElementaryTypeName","src":"29988:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29987:21:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17286,"nodeType":"FunctionDefinition","src":"30108:93:28","nodes":[],"documentation":{"id":17278,"nodeType":"StructuredDocumentation","src":"30015:88:28","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"30117:10:28","parameters":{"id":17281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17280,"mutability":"mutable","name":"path","nameLocation":"30144:4:28","nodeType":"VariableDeclaration","scope":17286,"src":"30128:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17279,"name":"string","nodeType":"ElementaryTypeName","src":"30128:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30127:22:28"},"returnParameters":{"id":17285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17284,"mutability":"mutable","name":"metadata","nameLocation":"30191:8:28","nodeType":"VariableDeclaration","scope":17286,"src":"30173:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$16412_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":17283,"nodeType":"UserDefinedTypeName","pathNode":{"id":17282,"name":"FsMetadata","nameLocations":["30173:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":16412,"src":"30173:10:28"},"referencedDeclaration":16412,"src":"30173:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$16412_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"30172:28:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17294,"nodeType":"FunctionDefinition","src":"30270:95:28","nodes":[],"documentation":{"id":17287,"nodeType":"StructuredDocumentation","src":"30207:58:28","text":"Gets the artifact path from code (aka. creation code)."},"functionSelector":"eb74848c","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByCode","nameLocation":"30279:21:28","parameters":{"id":17290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17289,"mutability":"mutable","name":"code","nameLocation":"30316:4:28","nodeType":"VariableDeclaration","scope":17294,"src":"30301:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17288,"name":"bytes","nodeType":"ElementaryTypeName","src":"30301:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30300:21:28"},"returnParameters":{"id":17293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17292,"mutability":"mutable","name":"path","nameLocation":"30359:4:28","nodeType":"VariableDeclaration","scope":17294,"src":"30345:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17291,"name":"string","nodeType":"ElementaryTypeName","src":"30345:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30344:20:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17302,"nodeType":"FunctionDefinition","src":"30442:111:28","nodes":[],"documentation":{"id":17295,"nodeType":"StructuredDocumentation","src":"30371:66:28","text":"Gets the artifact path from deployed code (aka. runtime code)."},"functionSelector":"6d853ba5","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByDeployedCode","nameLocation":"30451:29:28","parameters":{"id":17298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17297,"mutability":"mutable","name":"deployedCode","nameLocation":"30496:12:28","nodeType":"VariableDeclaration","scope":17302,"src":"30481:27:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17296,"name":"bytes","nodeType":"ElementaryTypeName","src":"30481:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30480:29:28"},"returnParameters":{"id":17301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17300,"mutability":"mutable","name":"path","nameLocation":"30547:4:28","nodeType":"VariableDeclaration","scope":17302,"src":"30533:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17299,"name":"string","nodeType":"ElementaryTypeName","src":"30533:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30532:20:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17310,"nodeType":"FunctionDefinition","src":"30791:101:28","nodes":[],"documentation":{"id":17303,"nodeType":"StructuredDocumentation","src":"30559:227:28","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"30800:7:28","parameters":{"id":17306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17305,"mutability":"mutable","name":"artifactPath","nameLocation":"30824:12:28","nodeType":"VariableDeclaration","scope":17310,"src":"30808:28:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17304,"name":"string","nodeType":"ElementaryTypeName","src":"30808:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30807:30:28"},"returnParameters":{"id":17309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17308,"mutability":"mutable","name":"creationBytecode","nameLocation":"30874:16:28","nodeType":"VariableDeclaration","scope":17310,"src":"30861:29:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17307,"name":"bytes","nodeType":"ElementaryTypeName","src":"30861:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30860:31:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17318,"nodeType":"FunctionDefinition","src":"31130:108:28","nodes":[],"documentation":{"id":17311,"nodeType":"StructuredDocumentation","src":"30898:227:28","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"31139:15:28","parameters":{"id":17314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17313,"mutability":"mutable","name":"artifactPath","nameLocation":"31171:12:28","nodeType":"VariableDeclaration","scope":17318,"src":"31155:28:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17312,"name":"string","nodeType":"ElementaryTypeName","src":"31155:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31154:30:28"},"returnParameters":{"id":17317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17316,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"31221:15:28","nodeType":"VariableDeclaration","scope":17318,"src":"31208:28:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17315,"name":"bytes","nodeType":"ElementaryTypeName","src":"31208:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31207:30:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17326,"nodeType":"FunctionDefinition","src":"31344:68:28","nodes":[],"documentation":{"id":17319,"nodeType":"StructuredDocumentation","src":"31244:95:28","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"31353:5:28","parameters":{"id":17322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17321,"mutability":"mutable","name":"path","nameLocation":"31375:4:28","nodeType":"VariableDeclaration","scope":17326,"src":"31359:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17320,"name":"string","nodeType":"ElementaryTypeName","src":"31359:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31358:22:28"},"returnParameters":{"id":17325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17324,"mutability":"mutable","name":"result","nameLocation":"31404:6:28","nodeType":"VariableDeclaration","scope":17326,"src":"31399:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17323,"name":"bool","nodeType":"ElementaryTypeName","src":"31399:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31398:13:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17334,"nodeType":"FunctionDefinition","src":"31521:69:28","nodes":[],"documentation":{"id":17327,"nodeType":"StructuredDocumentation","src":"31418:98:28","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"31530:6:28","parameters":{"id":17330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17329,"mutability":"mutable","name":"path","nameLocation":"31553:4:28","nodeType":"VariableDeclaration","scope":17334,"src":"31537:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17328,"name":"string","nodeType":"ElementaryTypeName","src":"31537:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31536:22:28"},"returnParameters":{"id":17333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17332,"mutability":"mutable","name":"result","nameLocation":"31582:6:28","nodeType":"VariableDeclaration","scope":17334,"src":"31577:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17331,"name":"bool","nodeType":"ElementaryTypeName","src":"31577:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31576:13:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17340,"nodeType":"FunctionDefinition","src":"31646:66:28","nodes":[],"documentation":{"id":17335,"nodeType":"StructuredDocumentation","src":"31596:45:28","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"31655:11:28","parameters":{"id":17336,"nodeType":"ParameterList","parameters":[],"src":"31666:2:28"},"returnParameters":{"id":17339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17338,"mutability":"mutable","name":"path","nameLocation":"31706:4:28","nodeType":"VariableDeclaration","scope":17340,"src":"31692:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17337,"name":"string","nodeType":"ElementaryTypeName","src":"31692:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31691:20:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17348,"nodeType":"FunctionDefinition","src":"31779:83:28","nodes":[],"documentation":{"id":17341,"nodeType":"StructuredDocumentation","src":"31718:56:28","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"31788:6:28","parameters":{"id":17344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17343,"mutability":"mutable","name":"promptText","nameLocation":"31811:10:28","nodeType":"VariableDeclaration","scope":17348,"src":"31795:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17342,"name":"string","nodeType":"ElementaryTypeName","src":"31795:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31794:28:28"},"returnParameters":{"id":17347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17346,"mutability":"mutable","name":"input","nameLocation":"31855:5:28","nodeType":"VariableDeclaration","scope":17348,"src":"31841:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17345,"name":"string","nodeType":"ElementaryTypeName","src":"31841:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31840:21:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17356,"nodeType":"FunctionDefinition","src":"31925:78:28","nodes":[],"documentation":{"id":17349,"nodeType":"StructuredDocumentation","src":"31868:52:28","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"31934:13:28","parameters":{"id":17352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17351,"mutability":"mutable","name":"promptText","nameLocation":"31964:10:28","nodeType":"VariableDeclaration","scope":17356,"src":"31948:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17350,"name":"string","nodeType":"ElementaryTypeName","src":"31948:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31947:28:28"},"returnParameters":{"id":17355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17356,"src":"31994:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17353,"name":"address","nodeType":"ElementaryTypeName","src":"31994:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31993:9:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17364,"nodeType":"FunctionDefinition","src":"32077:89:28","nodes":[],"documentation":{"id":17357,"nodeType":"StructuredDocumentation","src":"32009:63:28","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"32086:12:28","parameters":{"id":17360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17359,"mutability":"mutable","name":"promptText","nameLocation":"32115:10:28","nodeType":"VariableDeclaration","scope":17364,"src":"32099:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17358,"name":"string","nodeType":"ElementaryTypeName","src":"32099:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32098:28:28"},"returnParameters":{"id":17363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17362,"mutability":"mutable","name":"input","nameLocation":"32159:5:28","nodeType":"VariableDeclaration","scope":17364,"src":"32145:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17361,"name":"string","nodeType":"ElementaryTypeName","src":"32145:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32144:21:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17372,"nodeType":"FunctionDefinition","src":"32246:81:28","nodes":[],"documentation":{"id":17365,"nodeType":"StructuredDocumentation","src":"32172:69:28","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"32255:16:28","parameters":{"id":17368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17367,"mutability":"mutable","name":"promptText","nameLocation":"32288:10:28","nodeType":"VariableDeclaration","scope":17372,"src":"32272:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17366,"name":"string","nodeType":"ElementaryTypeName","src":"32272:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32271:28:28"},"returnParameters":{"id":17371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17372,"src":"32318:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17369,"name":"uint256","nodeType":"ElementaryTypeName","src":"32318:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32317:9:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17380,"nodeType":"FunctionDefinition","src":"32387:75:28","nodes":[],"documentation":{"id":17373,"nodeType":"StructuredDocumentation","src":"32333:49:28","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"32396:10:28","parameters":{"id":17376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17375,"mutability":"mutable","name":"promptText","nameLocation":"32423:10:28","nodeType":"VariableDeclaration","scope":17380,"src":"32407:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17374,"name":"string","nodeType":"ElementaryTypeName","src":"32407:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32406:28:28"},"returnParameters":{"id":17379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17380,"src":"32453:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17377,"name":"uint256","nodeType":"ElementaryTypeName","src":"32453:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32452:9:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17390,"nodeType":"FunctionDefinition","src":"32710:89:28","nodes":[],"documentation":{"id":17381,"nodeType":"StructuredDocumentation","src":"32468:237:28","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32719:7:28","parameters":{"id":17384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17383,"mutability":"mutable","name":"path","nameLocation":"32743:4:28","nodeType":"VariableDeclaration","scope":17390,"src":"32727:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17382,"name":"string","nodeType":"ElementaryTypeName","src":"32727:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32726:22:28"},"returnParameters":{"id":17389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17388,"mutability":"mutable","name":"entries","nameLocation":"32790:7:28","nodeType":"VariableDeclaration","scope":17390,"src":"32772:25:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$16397_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":17386,"nodeType":"UserDefinedTypeName","pathNode":{"id":17385,"name":"DirEntry","nameLocations":["32772:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":16397,"src":"32772:8:28"},"referencedDeclaration":16397,"src":"32772:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$16397_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":17387,"nodeType":"ArrayTypeName","src":"32772:10:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$16397_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32771:27:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17402,"nodeType":"FunctionDefinition","src":"32836:106:28","nodes":[],"documentation":{"id":17391,"nodeType":"StructuredDocumentation","src":"32805:26:28","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32845:7:28","parameters":{"id":17396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17393,"mutability":"mutable","name":"path","nameLocation":"32869:4:28","nodeType":"VariableDeclaration","scope":17402,"src":"32853:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17392,"name":"string","nodeType":"ElementaryTypeName","src":"32853:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17395,"mutability":"mutable","name":"maxDepth","nameLocation":"32882:8:28","nodeType":"VariableDeclaration","scope":17402,"src":"32875:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17394,"name":"uint64","nodeType":"ElementaryTypeName","src":"32875:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"32852:39:28"},"returnParameters":{"id":17401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17400,"mutability":"mutable","name":"entries","nameLocation":"32933:7:28","nodeType":"VariableDeclaration","scope":17402,"src":"32915:25:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$16397_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":17398,"nodeType":"UserDefinedTypeName","pathNode":{"id":17397,"name":"DirEntry","nameLocations":["32915:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":16397,"src":"32915:8:28"},"referencedDeclaration":16397,"src":"32915:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$16397_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":17399,"nodeType":"ArrayTypeName","src":"32915:10:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$16397_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"32914:27:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17416,"nodeType":"FunctionDefinition","src":"32979:148:28","nodes":[],"documentation":{"id":17403,"nodeType":"StructuredDocumentation","src":"32948:26:28","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"32988:7:28","parameters":{"id":17410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17405,"mutability":"mutable","name":"path","nameLocation":"33012:4:28","nodeType":"VariableDeclaration","scope":17416,"src":"32996:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17404,"name":"string","nodeType":"ElementaryTypeName","src":"32996:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17407,"mutability":"mutable","name":"maxDepth","nameLocation":"33025:8:28","nodeType":"VariableDeclaration","scope":17416,"src":"33018:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17406,"name":"uint64","nodeType":"ElementaryTypeName","src":"33018:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":17409,"mutability":"mutable","name":"followLinks","nameLocation":"33040:11:28","nodeType":"VariableDeclaration","scope":17416,"src":"33035:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17408,"name":"bool","nodeType":"ElementaryTypeName","src":"33035:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32995:57:28"},"returnParameters":{"id":17415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17414,"mutability":"mutable","name":"entries","nameLocation":"33118:7:28","nodeType":"VariableDeclaration","scope":17416,"src":"33100:25:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$16397_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":17412,"nodeType":"UserDefinedTypeName","pathNode":{"id":17411,"name":"DirEntry","nameLocations":["33100:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":16397,"src":"33100:8:28"},"referencedDeclaration":16397,"src":"33100:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$16397_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":17413,"nodeType":"ArrayTypeName","src":"33100:10:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$16397_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"33099:27:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17424,"nodeType":"FunctionDefinition","src":"33225:83:28","nodes":[],"documentation":{"id":17417,"nodeType":"StructuredDocumentation","src":"33133:87:28","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"33234:8:28","parameters":{"id":17420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17419,"mutability":"mutable","name":"path","nameLocation":"33259:4:28","nodeType":"VariableDeclaration","scope":17424,"src":"33243:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17418,"name":"string","nodeType":"ElementaryTypeName","src":"33243:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33242:22:28"},"returnParameters":{"id":17423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17422,"mutability":"mutable","name":"data","nameLocation":"33302:4:28","nodeType":"VariableDeclaration","scope":17424,"src":"33288:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17421,"name":"string","nodeType":"ElementaryTypeName","src":"33288:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33287:20:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17432,"nodeType":"FunctionDefinition","src":"33406:88:28","nodes":[],"documentation":{"id":17425,"nodeType":"StructuredDocumentation","src":"33314:87:28","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"33415:14:28","parameters":{"id":17428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17427,"mutability":"mutable","name":"path","nameLocation":"33446:4:28","nodeType":"VariableDeclaration","scope":17432,"src":"33430:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17426,"name":"string","nodeType":"ElementaryTypeName","src":"33430:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33429:22:28"},"returnParameters":{"id":17431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17430,"mutability":"mutable","name":"data","nameLocation":"33488:4:28","nodeType":"VariableDeclaration","scope":17432,"src":"33475:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17429,"name":"bytes","nodeType":"ElementaryTypeName","src":"33475:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33474:19:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17440,"nodeType":"FunctionDefinition","src":"33543:83:28","nodes":[],"documentation":{"id":17433,"nodeType":"StructuredDocumentation","src":"33500:38:28","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"33552:8:28","parameters":{"id":17436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17435,"mutability":"mutable","name":"path","nameLocation":"33577:4:28","nodeType":"VariableDeclaration","scope":17440,"src":"33561:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17434,"name":"string","nodeType":"ElementaryTypeName","src":"33561:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33560:22:28"},"returnParameters":{"id":17439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17438,"mutability":"mutable","name":"line","nameLocation":"33620:4:28","nodeType":"VariableDeclaration","scope":17440,"src":"33606:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17437,"name":"string","nodeType":"ElementaryTypeName","src":"33606:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33605:20:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17448,"nodeType":"FunctionDefinition","src":"33885:93:28","nodes":[],"documentation":{"id":17441,"nodeType":"StructuredDocumentation","src":"33632:248:28","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"33894:8:28","parameters":{"id":17444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17443,"mutability":"mutable","name":"linkPath","nameLocation":"33919:8:28","nodeType":"VariableDeclaration","scope":17448,"src":"33903:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17442,"name":"string","nodeType":"ElementaryTypeName","src":"33903:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33902:26:28"},"returnParameters":{"id":17447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17446,"mutability":"mutable","name":"targetPath","nameLocation":"33966:10:28","nodeType":"VariableDeclaration","scope":17448,"src":"33952:24:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17445,"name":"string","nodeType":"ElementaryTypeName","src":"33952:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33951:26:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17456,"nodeType":"FunctionDefinition","src":"34368:66:28","nodes":[],"documentation":{"id":17449,"nodeType":"StructuredDocumentation","src":"33984:379:28","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"34377:9:28","parameters":{"id":17454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17451,"mutability":"mutable","name":"path","nameLocation":"34403:4:28","nodeType":"VariableDeclaration","scope":17456,"src":"34387:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17450,"name":"string","nodeType":"ElementaryTypeName","src":"34387:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17453,"mutability":"mutable","name":"recursive","nameLocation":"34414:9:28","nodeType":"VariableDeclaration","scope":17456,"src":"34409:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17452,"name":"bool","nodeType":"ElementaryTypeName","src":"34409:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34386:38:28"},"returnParameters":{"id":17455,"nodeType":"ParameterList","parameters":[],"src":"34433:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17462,"nodeType":"FunctionDefinition","src":"34767:51:28","nodes":[],"documentation":{"id":17457,"nodeType":"StructuredDocumentation","src":"34440:322:28","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"34776:10:28","parameters":{"id":17460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17459,"mutability":"mutable","name":"path","nameLocation":"34803:4:28","nodeType":"VariableDeclaration","scope":17462,"src":"34787:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17458,"name":"string","nodeType":"ElementaryTypeName","src":"34787:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34786:22:28"},"returnParameters":{"id":17461,"nodeType":"ParameterList","parameters":[],"src":"34817:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17472,"nodeType":"FunctionDefinition","src":"34925:91:28","nodes":[],"documentation":{"id":17463,"nodeType":"StructuredDocumentation","src":"34824:96:28","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"34934:6:28","parameters":{"id":17467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17466,"mutability":"mutable","name":"commandInput","nameLocation":"34959:12:28","nodeType":"VariableDeclaration","scope":17472,"src":"34941:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17464,"name":"string","nodeType":"ElementaryTypeName","src":"34941:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17465,"nodeType":"ArrayTypeName","src":"34941:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"34940:32:28"},"returnParameters":{"id":17471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17470,"mutability":"mutable","name":"result","nameLocation":"35008:6:28","nodeType":"VariableDeclaration","scope":17472,"src":"34991:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$16428_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":17469,"nodeType":"UserDefinedTypeName","pathNode":{"id":17468,"name":"FfiResult","nameLocations":["34991:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":16428,"src":"34991:9:28"},"referencedDeclaration":16428,"src":"34991:9:28","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$16428_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"34990:25:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17478,"nodeType":"FunctionDefinition","src":"35081:60:28","nodes":[],"documentation":{"id":17473,"nodeType":"StructuredDocumentation","src":"35022:54:28","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"35090:8:28","parameters":{"id":17474,"nodeType":"ParameterList","parameters":[],"src":"35098:2:28"},"returnParameters":{"id":17477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17476,"mutability":"mutable","name":"milliseconds","nameLocation":"35127:12:28","nodeType":"VariableDeclaration","scope":17478,"src":"35119:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17475,"name":"uint256","nodeType":"ElementaryTypeName","src":"35119:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35118:22:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17486,"nodeType":"FunctionDefinition","src":"35310:72:28","nodes":[],"documentation":{"id":17479,"nodeType":"StructuredDocumentation","src":"35147:158:28","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"35319:9:28","parameters":{"id":17484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17481,"mutability":"mutable","name":"path","nameLocation":"35345:4:28","nodeType":"VariableDeclaration","scope":17486,"src":"35329:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17480,"name":"string","nodeType":"ElementaryTypeName","src":"35329:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17483,"mutability":"mutable","name":"data","nameLocation":"35367:4:28","nodeType":"VariableDeclaration","scope":17486,"src":"35351:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17482,"name":"string","nodeType":"ElementaryTypeName","src":"35351:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35328:44:28"},"returnParameters":{"id":17485,"nodeType":"ParameterList","parameters":[],"src":"35381:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17494,"nodeType":"FunctionDefinition","src":"35560:77:28","nodes":[],"documentation":{"id":17487,"nodeType":"StructuredDocumentation","src":"35388:167:28","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"35569:15:28","parameters":{"id":17492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17489,"mutability":"mutable","name":"path","nameLocation":"35601:4:28","nodeType":"VariableDeclaration","scope":17494,"src":"35585:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17488,"name":"string","nodeType":"ElementaryTypeName","src":"35585:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17491,"mutability":"mutable","name":"data","nameLocation":"35622:4:28","nodeType":"VariableDeclaration","scope":17494,"src":"35607:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17490,"name":"bytes","nodeType":"ElementaryTypeName","src":"35607:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35584:43:28"},"returnParameters":{"id":17493,"nodeType":"ParameterList","parameters":[],"src":"35636:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17502,"nodeType":"FunctionDefinition","src":"35758:72:28","nodes":[],"documentation":{"id":17495,"nodeType":"StructuredDocumentation","src":"35643:110:28","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"35767:9:28","parameters":{"id":17500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17497,"mutability":"mutable","name":"path","nameLocation":"35793:4:28","nodeType":"VariableDeclaration","scope":17502,"src":"35777:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17496,"name":"string","nodeType":"ElementaryTypeName","src":"35777:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17499,"mutability":"mutable","name":"data","nameLocation":"35815:4:28","nodeType":"VariableDeclaration","scope":17502,"src":"35799:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17498,"name":"string","nodeType":"ElementaryTypeName","src":"35799:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35776:44:28"},"returnParameters":{"id":17501,"nodeType":"ParameterList","parameters":[],"src":"35829:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17512,"nodeType":"FunctionDefinition","src":"35916:95:28","nodes":[],"documentation":{"id":17503,"nodeType":"StructuredDocumentation","src":"35867:44:28","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"35925:13:28","parameters":{"id":17508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17505,"mutability":"mutable","name":"json","nameLocation":"35955:4:28","nodeType":"VariableDeclaration","scope":17512,"src":"35939:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17504,"name":"string","nodeType":"ElementaryTypeName","src":"35939:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17507,"mutability":"mutable","name":"key","nameLocation":"35977:3:28","nodeType":"VariableDeclaration","scope":17512,"src":"35961:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17506,"name":"string","nodeType":"ElementaryTypeName","src":"35961:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35938:43:28"},"returnParameters":{"id":17511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17512,"src":"36005:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17509,"name":"bool","nodeType":"ElementaryTypeName","src":"36005:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"36004:6:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17522,"nodeType":"FunctionDefinition","src":"36092:101:28","nodes":[],"documentation":{"id":17513,"nodeType":"StructuredDocumentation","src":"36017:70:28","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"36101:16:28","parameters":{"id":17518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17515,"mutability":"mutable","name":"json","nameLocation":"36134:4:28","nodeType":"VariableDeclaration","scope":17522,"src":"36118:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17514,"name":"string","nodeType":"ElementaryTypeName","src":"36118:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17517,"mutability":"mutable","name":"key","nameLocation":"36156:3:28","nodeType":"VariableDeclaration","scope":17522,"src":"36140:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17516,"name":"string","nodeType":"ElementaryTypeName","src":"36140:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36117:43:28"},"returnParameters":{"id":17521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17522,"src":"36184:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17519,"name":"address","nodeType":"ElementaryTypeName","src":"36184:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36183:9:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17533,"nodeType":"FunctionDefinition","src":"36276:139:28","nodes":[],"documentation":{"id":17523,"nodeType":"StructuredDocumentation","src":"36199:72:28","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"36285:21:28","parameters":{"id":17528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17525,"mutability":"mutable","name":"json","nameLocation":"36323:4:28","nodeType":"VariableDeclaration","scope":17533,"src":"36307:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17524,"name":"string","nodeType":"ElementaryTypeName","src":"36307:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17527,"mutability":"mutable","name":"key","nameLocation":"36345:3:28","nodeType":"VariableDeclaration","scope":17533,"src":"36329:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17526,"name":"string","nodeType":"ElementaryTypeName","src":"36329:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36306:43:28"},"returnParameters":{"id":17532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17533,"src":"36397:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17529,"name":"address","nodeType":"ElementaryTypeName","src":"36397:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17530,"nodeType":"ArrayTypeName","src":"36397:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"36396:18:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17543,"nodeType":"FunctionDefinition","src":"36493:95:28","nodes":[],"documentation":{"id":17534,"nodeType":"StructuredDocumentation","src":"36421:67:28","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"36502:13:28","parameters":{"id":17539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17536,"mutability":"mutable","name":"json","nameLocation":"36532:4:28","nodeType":"VariableDeclaration","scope":17543,"src":"36516:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17535,"name":"string","nodeType":"ElementaryTypeName","src":"36516:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17538,"mutability":"mutable","name":"key","nameLocation":"36554:3:28","nodeType":"VariableDeclaration","scope":17543,"src":"36538:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17537,"name":"string","nodeType":"ElementaryTypeName","src":"36538:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36515:43:28"},"returnParameters":{"id":17542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17543,"src":"36582:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17540,"name":"bool","nodeType":"ElementaryTypeName","src":"36582:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"36581:6:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17554,"nodeType":"FunctionDefinition","src":"36668:109:28","nodes":[],"documentation":{"id":17544,"nodeType":"StructuredDocumentation","src":"36594:69:28","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"36677:18:28","parameters":{"id":17549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17546,"mutability":"mutable","name":"json","nameLocation":"36712:4:28","nodeType":"VariableDeclaration","scope":17554,"src":"36696:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17545,"name":"string","nodeType":"ElementaryTypeName","src":"36696:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17548,"mutability":"mutable","name":"key","nameLocation":"36734:3:28","nodeType":"VariableDeclaration","scope":17554,"src":"36718:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17547,"name":"string","nodeType":"ElementaryTypeName","src":"36718:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36695:43:28"},"returnParameters":{"id":17553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17554,"src":"36762:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17550,"name":"bool","nodeType":"ElementaryTypeName","src":"36762:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17551,"nodeType":"ArrayTypeName","src":"36762:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"36761:15:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17564,"nodeType":"FunctionDefinition","src":"36856:104:28","nodes":[],"documentation":{"id":17555,"nodeType":"StructuredDocumentation","src":"36783:68:28","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"36865:14:28","parameters":{"id":17560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17557,"mutability":"mutable","name":"json","nameLocation":"36896:4:28","nodeType":"VariableDeclaration","scope":17564,"src":"36880:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17556,"name":"string","nodeType":"ElementaryTypeName","src":"36880:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17559,"mutability":"mutable","name":"key","nameLocation":"36918:3:28","nodeType":"VariableDeclaration","scope":17564,"src":"36902:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17558,"name":"string","nodeType":"ElementaryTypeName","src":"36902:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36879:43:28"},"returnParameters":{"id":17563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17564,"src":"36946:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17561,"name":"bytes","nodeType":"ElementaryTypeName","src":"36946:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36945:14:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17574,"nodeType":"FunctionDefinition","src":"37041:101:28","nodes":[],"documentation":{"id":17565,"nodeType":"StructuredDocumentation","src":"36966:70:28","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"37050:16:28","parameters":{"id":17570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17567,"mutability":"mutable","name":"json","nameLocation":"37083:4:28","nodeType":"VariableDeclaration","scope":17574,"src":"37067:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17566,"name":"string","nodeType":"ElementaryTypeName","src":"37067:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17569,"mutability":"mutable","name":"key","nameLocation":"37105:3:28","nodeType":"VariableDeclaration","scope":17574,"src":"37089:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17568,"name":"string","nodeType":"ElementaryTypeName","src":"37089:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37066:43:28"},"returnParameters":{"id":17573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17574,"src":"37133:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37133:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"37132:9:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17585,"nodeType":"FunctionDefinition","src":"37225:139:28","nodes":[],"documentation":{"id":17575,"nodeType":"StructuredDocumentation","src":"37148:72:28","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"37234:21:28","parameters":{"id":17580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17577,"mutability":"mutable","name":"json","nameLocation":"37272:4:28","nodeType":"VariableDeclaration","scope":17585,"src":"37256:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17576,"name":"string","nodeType":"ElementaryTypeName","src":"37256:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17579,"mutability":"mutable","name":"key","nameLocation":"37294:3:28","nodeType":"VariableDeclaration","scope":17585,"src":"37278:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17578,"name":"string","nodeType":"ElementaryTypeName","src":"37278:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37255:43:28"},"returnParameters":{"id":17584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17585,"src":"37346:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"37346:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17582,"nodeType":"ArrayTypeName","src":"37346:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"37345:18:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17596,"nodeType":"FunctionDefinition","src":"37445:111:28","nodes":[],"documentation":{"id":17586,"nodeType":"StructuredDocumentation","src":"37370:70:28","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"37454:19:28","parameters":{"id":17591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17588,"mutability":"mutable","name":"json","nameLocation":"37490:4:28","nodeType":"VariableDeclaration","scope":17596,"src":"37474:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17587,"name":"string","nodeType":"ElementaryTypeName","src":"37474:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17590,"mutability":"mutable","name":"key","nameLocation":"37512:3:28","nodeType":"VariableDeclaration","scope":17596,"src":"37496:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17589,"name":"string","nodeType":"ElementaryTypeName","src":"37496:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37473:43:28"},"returnParameters":{"id":17595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17596,"src":"37540:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17592,"name":"bytes","nodeType":"ElementaryTypeName","src":"37540:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17593,"nodeType":"ArrayTypeName","src":"37540:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"37539:16:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17606,"nodeType":"FunctionDefinition","src":"37636:96:28","nodes":[],"documentation":{"id":17597,"nodeType":"StructuredDocumentation","src":"37562:69:28","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"37645:12:28","parameters":{"id":17602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17599,"mutability":"mutable","name":"json","nameLocation":"37674:4:28","nodeType":"VariableDeclaration","scope":17606,"src":"37658:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17598,"name":"string","nodeType":"ElementaryTypeName","src":"37658:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17601,"mutability":"mutable","name":"key","nameLocation":"37696:3:28","nodeType":"VariableDeclaration","scope":17606,"src":"37680:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17600,"name":"string","nodeType":"ElementaryTypeName","src":"37680:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37657:43:28"},"returnParameters":{"id":17605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17606,"src":"37724:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17603,"name":"int256","nodeType":"ElementaryTypeName","src":"37724:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"37723:8:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17617,"nodeType":"FunctionDefinition","src":"37814:110:28","nodes":[],"documentation":{"id":17607,"nodeType":"StructuredDocumentation","src":"37738:71:28","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"37823:17:28","parameters":{"id":17612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17609,"mutability":"mutable","name":"json","nameLocation":"37857:4:28","nodeType":"VariableDeclaration","scope":17617,"src":"37841:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17608,"name":"string","nodeType":"ElementaryTypeName","src":"37841:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17611,"mutability":"mutable","name":"key","nameLocation":"37879:3:28","nodeType":"VariableDeclaration","scope":17617,"src":"37863:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17610,"name":"string","nodeType":"ElementaryTypeName","src":"37863:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37840:43:28"},"returnParameters":{"id":17616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17617,"src":"37907:15:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17613,"name":"int256","nodeType":"ElementaryTypeName","src":"37907:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17614,"nodeType":"ArrayTypeName","src":"37907:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"37906:17:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17628,"nodeType":"FunctionDefinition","src":"37989:111:28","nodes":[],"documentation":{"id":17618,"nodeType":"StructuredDocumentation","src":"37930:54:28","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"37998:13:28","parameters":{"id":17623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17620,"mutability":"mutable","name":"json","nameLocation":"38028:4:28","nodeType":"VariableDeclaration","scope":17628,"src":"38012:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17619,"name":"string","nodeType":"ElementaryTypeName","src":"38012:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17622,"mutability":"mutable","name":"key","nameLocation":"38050:3:28","nodeType":"VariableDeclaration","scope":17628,"src":"38034:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17621,"name":"string","nodeType":"ElementaryTypeName","src":"38034:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38011:43:28"},"returnParameters":{"id":17627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17626,"mutability":"mutable","name":"keys","nameLocation":"38094:4:28","nodeType":"VariableDeclaration","scope":17628,"src":"38078:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17624,"name":"string","nodeType":"ElementaryTypeName","src":"38078:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17625,"nodeType":"ArrayTypeName","src":"38078:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"38077:22:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17638,"nodeType":"FunctionDefinition","src":"38180:106:28","nodes":[],"documentation":{"id":17629,"nodeType":"StructuredDocumentation","src":"38106:69:28","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"38189:15:28","parameters":{"id":17634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17631,"mutability":"mutable","name":"json","nameLocation":"38221:4:28","nodeType":"VariableDeclaration","scope":17638,"src":"38205:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17630,"name":"string","nodeType":"ElementaryTypeName","src":"38205:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17633,"mutability":"mutable","name":"key","nameLocation":"38243:3:28","nodeType":"VariableDeclaration","scope":17638,"src":"38227:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17632,"name":"string","nodeType":"ElementaryTypeName","src":"38227:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38204:43:28"},"returnParameters":{"id":17637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17638,"src":"38271:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17635,"name":"string","nodeType":"ElementaryTypeName","src":"38271:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38270:15:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17649,"nodeType":"FunctionDefinition","src":"38368:113:28","nodes":[],"documentation":{"id":17639,"nodeType":"StructuredDocumentation","src":"38292:71:28","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"38377:20:28","parameters":{"id":17644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17641,"mutability":"mutable","name":"json","nameLocation":"38414:4:28","nodeType":"VariableDeclaration","scope":17649,"src":"38398:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17640,"name":"string","nodeType":"ElementaryTypeName","src":"38398:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17643,"mutability":"mutable","name":"key","nameLocation":"38436:3:28","nodeType":"VariableDeclaration","scope":17649,"src":"38420:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17642,"name":"string","nodeType":"ElementaryTypeName","src":"38420:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38397:43:28"},"returnParameters":{"id":17648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17649,"src":"38464:15:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17645,"name":"string","nodeType":"ElementaryTypeName","src":"38464:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17646,"nodeType":"ArrayTypeName","src":"38464:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"38463:17:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17661,"nodeType":"FunctionDefinition","src":"38598:165:28","nodes":[],"documentation":{"id":17650,"nodeType":"StructuredDocumentation","src":"38487:106:28","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"38607:18:28","parameters":{"id":17657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17652,"mutability":"mutable","name":"json","nameLocation":"38642:4:28","nodeType":"VariableDeclaration","scope":17661,"src":"38626:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17651,"name":"string","nodeType":"ElementaryTypeName","src":"38626:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17654,"mutability":"mutable","name":"key","nameLocation":"38664:3:28","nodeType":"VariableDeclaration","scope":17661,"src":"38648:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17653,"name":"string","nodeType":"ElementaryTypeName","src":"38648:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17656,"mutability":"mutable","name":"typeDescription","nameLocation":"38685:15:28","nodeType":"VariableDeclaration","scope":17661,"src":"38669:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17655,"name":"string","nodeType":"ElementaryTypeName","src":"38669:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38625:76:28"},"returnParameters":{"id":17660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17661,"src":"38749:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17658,"name":"bytes","nodeType":"ElementaryTypeName","src":"38749:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38748:14:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17671,"nodeType":"FunctionDefinition","src":"38865:139:28","nodes":[],"documentation":{"id":17662,"nodeType":"StructuredDocumentation","src":"38769:91:28","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"38874:13:28","parameters":{"id":17667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17664,"mutability":"mutable","name":"json","nameLocation":"38904:4:28","nodeType":"VariableDeclaration","scope":17671,"src":"38888:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17663,"name":"string","nodeType":"ElementaryTypeName","src":"38888:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17666,"mutability":"mutable","name":"typeDescription","nameLocation":"38926:15:28","nodeType":"VariableDeclaration","scope":17671,"src":"38910:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17665,"name":"string","nodeType":"ElementaryTypeName","src":"38910:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38887:55:28"},"returnParameters":{"id":17670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17671,"src":"38990:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17668,"name":"bytes","nodeType":"ElementaryTypeName","src":"38990:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38989:14:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17683,"nodeType":"FunctionDefinition","src":"39115:160:28","nodes":[],"documentation":{"id":17672,"nodeType":"StructuredDocumentation","src":"39010:100:28","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"39124:13:28","parameters":{"id":17679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17674,"mutability":"mutable","name":"json","nameLocation":"39154:4:28","nodeType":"VariableDeclaration","scope":17683,"src":"39138:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17673,"name":"string","nodeType":"ElementaryTypeName","src":"39138:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17676,"mutability":"mutable","name":"key","nameLocation":"39176:3:28","nodeType":"VariableDeclaration","scope":17683,"src":"39160:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17675,"name":"string","nodeType":"ElementaryTypeName","src":"39160:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17678,"mutability":"mutable","name":"typeDescription","nameLocation":"39197:15:28","nodeType":"VariableDeclaration","scope":17683,"src":"39181:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17677,"name":"string","nodeType":"ElementaryTypeName","src":"39181:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39137:76:28"},"returnParameters":{"id":17682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17683,"src":"39261:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17680,"name":"bytes","nodeType":"ElementaryTypeName","src":"39261:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39260:14:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17693,"nodeType":"FunctionDefinition","src":"39356:98:28","nodes":[],"documentation":{"id":17684,"nodeType":"StructuredDocumentation","src":"39281:70:28","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"39365:13:28","parameters":{"id":17689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17686,"mutability":"mutable","name":"json","nameLocation":"39395:4:28","nodeType":"VariableDeclaration","scope":17693,"src":"39379:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17685,"name":"string","nodeType":"ElementaryTypeName","src":"39379:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17688,"mutability":"mutable","name":"key","nameLocation":"39417:3:28","nodeType":"VariableDeclaration","scope":17693,"src":"39401:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17687,"name":"string","nodeType":"ElementaryTypeName","src":"39401:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39378:43:28"},"returnParameters":{"id":17692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17693,"src":"39445:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17690,"name":"uint256","nodeType":"ElementaryTypeName","src":"39445:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39444:9:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17704,"nodeType":"FunctionDefinition","src":"39537:112:28","nodes":[],"documentation":{"id":17694,"nodeType":"StructuredDocumentation","src":"39460:72:28","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"39546:18:28","parameters":{"id":17699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17696,"mutability":"mutable","name":"json","nameLocation":"39581:4:28","nodeType":"VariableDeclaration","scope":17704,"src":"39565:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17695,"name":"string","nodeType":"ElementaryTypeName","src":"39565:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17698,"mutability":"mutable","name":"key","nameLocation":"39603:3:28","nodeType":"VariableDeclaration","scope":17704,"src":"39587:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17697,"name":"string","nodeType":"ElementaryTypeName","src":"39587:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39564:43:28"},"returnParameters":{"id":17703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17704,"src":"39631:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17700,"name":"uint256","nodeType":"ElementaryTypeName","src":"39631:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17701,"nodeType":"ArrayTypeName","src":"39631:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"39630:18:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17712,"nodeType":"FunctionDefinition","src":"39690:93:28","nodes":[],"documentation":{"id":17705,"nodeType":"StructuredDocumentation","src":"39655:30:28","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"39699:9:28","parameters":{"id":17708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17707,"mutability":"mutable","name":"json","nameLocation":"39725:4:28","nodeType":"VariableDeclaration","scope":17712,"src":"39709:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17706,"name":"string","nodeType":"ElementaryTypeName","src":"39709:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39708:22:28"},"returnParameters":{"id":17711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17710,"mutability":"mutable","name":"abiEncodedData","nameLocation":"39767:14:28","nodeType":"VariableDeclaration","scope":17712,"src":"39754:27:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17709,"name":"bytes","nodeType":"ElementaryTypeName","src":"39754:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39753:29:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17722,"nodeType":"FunctionDefinition","src":"39833:114:28","nodes":[],"documentation":{"id":17713,"nodeType":"StructuredDocumentation","src":"39789:39:28","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"39842:9:28","parameters":{"id":17718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17715,"mutability":"mutable","name":"json","nameLocation":"39868:4:28","nodeType":"VariableDeclaration","scope":17722,"src":"39852:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17714,"name":"string","nodeType":"ElementaryTypeName","src":"39852:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17717,"mutability":"mutable","name":"key","nameLocation":"39890:3:28","nodeType":"VariableDeclaration","scope":17722,"src":"39874:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17716,"name":"string","nodeType":"ElementaryTypeName","src":"39874:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39851:43:28"},"returnParameters":{"id":17721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17720,"mutability":"mutable","name":"abiEncodedData","nameLocation":"39931:14:28","nodeType":"VariableDeclaration","scope":17722,"src":"39918:27:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17719,"name":"bytes","nodeType":"ElementaryTypeName","src":"39918:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39917:29:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17734,"nodeType":"FunctionDefinition","src":"39982:148:28","nodes":[],"documentation":{"id":17723,"nodeType":"StructuredDocumentation","src":"39953:24:28","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"39991:16:28","parameters":{"id":17730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17725,"mutability":"mutable","name":"objectKey","nameLocation":"40024:9:28","nodeType":"VariableDeclaration","scope":17734,"src":"40008:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17724,"name":"string","nodeType":"ElementaryTypeName","src":"40008:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17727,"mutability":"mutable","name":"valueKey","nameLocation":"40051:8:28","nodeType":"VariableDeclaration","scope":17734,"src":"40035:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17726,"name":"string","nodeType":"ElementaryTypeName","src":"40035:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17729,"mutability":"mutable","name":"value","nameLocation":"40069:5:28","nodeType":"VariableDeclaration","scope":17734,"src":"40061:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17728,"name":"address","nodeType":"ElementaryTypeName","src":"40061:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40007:68:28"},"returnParameters":{"id":17733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17732,"mutability":"mutable","name":"json","nameLocation":"40124:4:28","nodeType":"VariableDeclaration","scope":17734,"src":"40110:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17731,"name":"string","nodeType":"ElementaryTypeName","src":"40110:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40109:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17747,"nodeType":"FunctionDefinition","src":"40165:160:28","nodes":[],"documentation":{"id":17735,"nodeType":"StructuredDocumentation","src":"40136:24:28","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"40174:16:28","parameters":{"id":17743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17737,"mutability":"mutable","name":"objectKey","nameLocation":"40207:9:28","nodeType":"VariableDeclaration","scope":17747,"src":"40191:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17736,"name":"string","nodeType":"ElementaryTypeName","src":"40191:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17739,"mutability":"mutable","name":"valueKey","nameLocation":"40234:8:28","nodeType":"VariableDeclaration","scope":17747,"src":"40218:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17738,"name":"string","nodeType":"ElementaryTypeName","src":"40218:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17742,"mutability":"mutable","name":"values","nameLocation":"40263:6:28","nodeType":"VariableDeclaration","scope":17747,"src":"40244:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17740,"name":"address","nodeType":"ElementaryTypeName","src":"40244:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17741,"nodeType":"ArrayTypeName","src":"40244:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"40190:80:28"},"returnParameters":{"id":17746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17745,"mutability":"mutable","name":"json","nameLocation":"40319:4:28","nodeType":"VariableDeclaration","scope":17747,"src":"40305:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17744,"name":"string","nodeType":"ElementaryTypeName","src":"40305:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40304:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17759,"nodeType":"FunctionDefinition","src":"40360:142:28","nodes":[],"documentation":{"id":17748,"nodeType":"StructuredDocumentation","src":"40331:24:28","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"40369:13:28","parameters":{"id":17755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17750,"mutability":"mutable","name":"objectKey","nameLocation":"40399:9:28","nodeType":"VariableDeclaration","scope":17759,"src":"40383:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17749,"name":"string","nodeType":"ElementaryTypeName","src":"40383:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17752,"mutability":"mutable","name":"valueKey","nameLocation":"40426:8:28","nodeType":"VariableDeclaration","scope":17759,"src":"40410:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17751,"name":"string","nodeType":"ElementaryTypeName","src":"40410:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17754,"mutability":"mutable","name":"value","nameLocation":"40441:5:28","nodeType":"VariableDeclaration","scope":17759,"src":"40436:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17753,"name":"bool","nodeType":"ElementaryTypeName","src":"40436:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"40382:65:28"},"returnParameters":{"id":17758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17757,"mutability":"mutable","name":"json","nameLocation":"40496:4:28","nodeType":"VariableDeclaration","scope":17759,"src":"40482:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17756,"name":"string","nodeType":"ElementaryTypeName","src":"40482:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40481:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17772,"nodeType":"FunctionDefinition","src":"40537:154:28","nodes":[],"documentation":{"id":17760,"nodeType":"StructuredDocumentation","src":"40508:24:28","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"40546:13:28","parameters":{"id":17768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17762,"mutability":"mutable","name":"objectKey","nameLocation":"40576:9:28","nodeType":"VariableDeclaration","scope":17772,"src":"40560:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17761,"name":"string","nodeType":"ElementaryTypeName","src":"40560:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17764,"mutability":"mutable","name":"valueKey","nameLocation":"40603:8:28","nodeType":"VariableDeclaration","scope":17772,"src":"40587:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17763,"name":"string","nodeType":"ElementaryTypeName","src":"40587:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17767,"mutability":"mutable","name":"values","nameLocation":"40629:6:28","nodeType":"VariableDeclaration","scope":17772,"src":"40613:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17765,"name":"bool","nodeType":"ElementaryTypeName","src":"40613:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17766,"nodeType":"ArrayTypeName","src":"40613:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"40559:77:28"},"returnParameters":{"id":17771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17770,"mutability":"mutable","name":"json","nameLocation":"40685:4:28","nodeType":"VariableDeclaration","scope":17772,"src":"40671:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17769,"name":"string","nodeType":"ElementaryTypeName","src":"40671:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40670:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17784,"nodeType":"FunctionDefinition","src":"40726:148:28","nodes":[],"documentation":{"id":17773,"nodeType":"StructuredDocumentation","src":"40697:24:28","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"40735:16:28","parameters":{"id":17780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17775,"mutability":"mutable","name":"objectKey","nameLocation":"40768:9:28","nodeType":"VariableDeclaration","scope":17784,"src":"40752:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17774,"name":"string","nodeType":"ElementaryTypeName","src":"40752:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17777,"mutability":"mutable","name":"valueKey","nameLocation":"40795:8:28","nodeType":"VariableDeclaration","scope":17784,"src":"40779:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17776,"name":"string","nodeType":"ElementaryTypeName","src":"40779:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17779,"mutability":"mutable","name":"value","nameLocation":"40813:5:28","nodeType":"VariableDeclaration","scope":17784,"src":"40805:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40805:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"40751:68:28"},"returnParameters":{"id":17783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17782,"mutability":"mutable","name":"json","nameLocation":"40868:4:28","nodeType":"VariableDeclaration","scope":17784,"src":"40854:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17781,"name":"string","nodeType":"ElementaryTypeName","src":"40854:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40853:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17797,"nodeType":"FunctionDefinition","src":"40909:160:28","nodes":[],"documentation":{"id":17785,"nodeType":"StructuredDocumentation","src":"40880:24:28","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"40918:16:28","parameters":{"id":17793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17787,"mutability":"mutable","name":"objectKey","nameLocation":"40951:9:28","nodeType":"VariableDeclaration","scope":17797,"src":"40935:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17786,"name":"string","nodeType":"ElementaryTypeName","src":"40935:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17789,"mutability":"mutable","name":"valueKey","nameLocation":"40978:8:28","nodeType":"VariableDeclaration","scope":17797,"src":"40962:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17788,"name":"string","nodeType":"ElementaryTypeName","src":"40962:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17792,"mutability":"mutable","name":"values","nameLocation":"41007:6:28","nodeType":"VariableDeclaration","scope":17797,"src":"40988:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40988:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17791,"nodeType":"ArrayTypeName","src":"40988:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"40934:80:28"},"returnParameters":{"id":17796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17795,"mutability":"mutable","name":"json","nameLocation":"41063:4:28","nodeType":"VariableDeclaration","scope":17797,"src":"41049:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17794,"name":"string","nodeType":"ElementaryTypeName","src":"41049:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41048:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17809,"nodeType":"FunctionDefinition","src":"41104:153:28","nodes":[],"documentation":{"id":17798,"nodeType":"StructuredDocumentation","src":"41075:24:28","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"41113:14:28","parameters":{"id":17805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17800,"mutability":"mutable","name":"objectKey","nameLocation":"41144:9:28","nodeType":"VariableDeclaration","scope":17809,"src":"41128:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17799,"name":"string","nodeType":"ElementaryTypeName","src":"41128:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17802,"mutability":"mutable","name":"valueKey","nameLocation":"41171:8:28","nodeType":"VariableDeclaration","scope":17809,"src":"41155:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17801,"name":"string","nodeType":"ElementaryTypeName","src":"41155:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17804,"mutability":"mutable","name":"value","nameLocation":"41196:5:28","nodeType":"VariableDeclaration","scope":17809,"src":"41181:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17803,"name":"bytes","nodeType":"ElementaryTypeName","src":"41181:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41127:75:28"},"returnParameters":{"id":17808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17807,"mutability":"mutable","name":"json","nameLocation":"41251:4:28","nodeType":"VariableDeclaration","scope":17809,"src":"41237:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17806,"name":"string","nodeType":"ElementaryTypeName","src":"41237:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41236:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17822,"nodeType":"FunctionDefinition","src":"41292:156:28","nodes":[],"documentation":{"id":17810,"nodeType":"StructuredDocumentation","src":"41263:24:28","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"41301:14:28","parameters":{"id":17818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17812,"mutability":"mutable","name":"objectKey","nameLocation":"41332:9:28","nodeType":"VariableDeclaration","scope":17822,"src":"41316:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17811,"name":"string","nodeType":"ElementaryTypeName","src":"41316:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17814,"mutability":"mutable","name":"valueKey","nameLocation":"41359:8:28","nodeType":"VariableDeclaration","scope":17822,"src":"41343:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17813,"name":"string","nodeType":"ElementaryTypeName","src":"41343:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17817,"mutability":"mutable","name":"values","nameLocation":"41386:6:28","nodeType":"VariableDeclaration","scope":17822,"src":"41369:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17815,"name":"bytes","nodeType":"ElementaryTypeName","src":"41369:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17816,"nodeType":"ArrayTypeName","src":"41369:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"41315:78:28"},"returnParameters":{"id":17821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17820,"mutability":"mutable","name":"json","nameLocation":"41442:4:28","nodeType":"VariableDeclaration","scope":17822,"src":"41428:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17819,"name":"string","nodeType":"ElementaryTypeName","src":"41428:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41427:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17834,"nodeType":"FunctionDefinition","src":"41483:143:28","nodes":[],"documentation":{"id":17823,"nodeType":"StructuredDocumentation","src":"41454:24:28","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"41492:12:28","parameters":{"id":17830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17825,"mutability":"mutable","name":"objectKey","nameLocation":"41521:9:28","nodeType":"VariableDeclaration","scope":17834,"src":"41505:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17824,"name":"string","nodeType":"ElementaryTypeName","src":"41505:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17827,"mutability":"mutable","name":"valueKey","nameLocation":"41548:8:28","nodeType":"VariableDeclaration","scope":17834,"src":"41532:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17826,"name":"string","nodeType":"ElementaryTypeName","src":"41532:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17829,"mutability":"mutable","name":"value","nameLocation":"41565:5:28","nodeType":"VariableDeclaration","scope":17834,"src":"41558:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17828,"name":"int256","nodeType":"ElementaryTypeName","src":"41558:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"41504:67:28"},"returnParameters":{"id":17833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17832,"mutability":"mutable","name":"json","nameLocation":"41620:4:28","nodeType":"VariableDeclaration","scope":17834,"src":"41606:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17831,"name":"string","nodeType":"ElementaryTypeName","src":"41606:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41605:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17847,"nodeType":"FunctionDefinition","src":"41661:155:28","nodes":[],"documentation":{"id":17835,"nodeType":"StructuredDocumentation","src":"41632:24:28","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"41670:12:28","parameters":{"id":17843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17837,"mutability":"mutable","name":"objectKey","nameLocation":"41699:9:28","nodeType":"VariableDeclaration","scope":17847,"src":"41683:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17836,"name":"string","nodeType":"ElementaryTypeName","src":"41683:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17839,"mutability":"mutable","name":"valueKey","nameLocation":"41726:8:28","nodeType":"VariableDeclaration","scope":17847,"src":"41710:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17838,"name":"string","nodeType":"ElementaryTypeName","src":"41710:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17842,"mutability":"mutable","name":"values","nameLocation":"41754:6:28","nodeType":"VariableDeclaration","scope":17847,"src":"41736:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17840,"name":"int256","nodeType":"ElementaryTypeName","src":"41736:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17841,"nodeType":"ArrayTypeName","src":"41736:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"41682:79:28"},"returnParameters":{"id":17846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17845,"mutability":"mutable","name":"json","nameLocation":"41810:4:28","nodeType":"VariableDeclaration","scope":17847,"src":"41796:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17844,"name":"string","nodeType":"ElementaryTypeName","src":"41796:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41795:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17857,"nodeType":"FunctionDefinition","src":"42013:111:28","nodes":[],"documentation":{"id":17848,"nodeType":"StructuredDocumentation","src":"41822:186:28","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"42022:13:28","parameters":{"id":17853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17850,"mutability":"mutable","name":"objectKey","nameLocation":"42052:9:28","nodeType":"VariableDeclaration","scope":17857,"src":"42036:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17849,"name":"string","nodeType":"ElementaryTypeName","src":"42036:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17852,"mutability":"mutable","name":"value","nameLocation":"42079:5:28","nodeType":"VariableDeclaration","scope":17857,"src":"42063:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17851,"name":"string","nodeType":"ElementaryTypeName","src":"42063:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42035:50:28"},"returnParameters":{"id":17856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17855,"mutability":"mutable","name":"json","nameLocation":"42118:4:28","nodeType":"VariableDeclaration","scope":17857,"src":"42104:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17854,"name":"string","nodeType":"ElementaryTypeName","src":"42104:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42103:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17867,"nodeType":"FunctionDefinition","src":"42159:149:28","nodes":[],"documentation":{"id":17858,"nodeType":"StructuredDocumentation","src":"42130:24:28","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"42168:17:28","parameters":{"id":17863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17860,"mutability":"mutable","name":"typeDescription","nameLocation":"42202:15:28","nodeType":"VariableDeclaration","scope":17867,"src":"42186:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17859,"name":"string","nodeType":"ElementaryTypeName","src":"42186:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17862,"mutability":"mutable","name":"value","nameLocation":"42234:5:28","nodeType":"VariableDeclaration","scope":17867,"src":"42219:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17861,"name":"bytes","nodeType":"ElementaryTypeName","src":"42219:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42185:55:28"},"returnParameters":{"id":17866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17865,"mutability":"mutable","name":"json","nameLocation":"42302:4:28","nodeType":"VariableDeclaration","scope":17867,"src":"42288:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17864,"name":"string","nodeType":"ElementaryTypeName","src":"42288:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42287:20:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17881,"nodeType":"FunctionDefinition","src":"42343:211:28","nodes":[],"documentation":{"id":17868,"nodeType":"StructuredDocumentation","src":"42314:24:28","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"42352:17:28","parameters":{"id":17877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17870,"mutability":"mutable","name":"objectKey","nameLocation":"42395:9:28","nodeType":"VariableDeclaration","scope":17881,"src":"42379:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17869,"name":"string","nodeType":"ElementaryTypeName","src":"42379:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17872,"mutability":"mutable","name":"valueKey","nameLocation":"42430:8:28","nodeType":"VariableDeclaration","scope":17881,"src":"42414:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17871,"name":"string","nodeType":"ElementaryTypeName","src":"42414:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17874,"mutability":"mutable","name":"typeDescription","nameLocation":"42464:15:28","nodeType":"VariableDeclaration","scope":17881,"src":"42448:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17873,"name":"string","nodeType":"ElementaryTypeName","src":"42448:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17876,"mutability":"mutable","name":"value","nameLocation":"42504:5:28","nodeType":"VariableDeclaration","scope":17881,"src":"42489:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17875,"name":"bytes","nodeType":"ElementaryTypeName","src":"42489:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42369:146:28"},"returnParameters":{"id":17880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17879,"mutability":"mutable","name":"json","nameLocation":"42548:4:28","nodeType":"VariableDeclaration","scope":17881,"src":"42534:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17878,"name":"string","nodeType":"ElementaryTypeName","src":"42534:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42533:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17893,"nodeType":"FunctionDefinition","src":"42589:155:28","nodes":[],"documentation":{"id":17882,"nodeType":"StructuredDocumentation","src":"42560:24:28","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"42598:15:28","parameters":{"id":17889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17884,"mutability":"mutable","name":"objectKey","nameLocation":"42630:9:28","nodeType":"VariableDeclaration","scope":17893,"src":"42614:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17883,"name":"string","nodeType":"ElementaryTypeName","src":"42614:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17886,"mutability":"mutable","name":"valueKey","nameLocation":"42657:8:28","nodeType":"VariableDeclaration","scope":17893,"src":"42641:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17885,"name":"string","nodeType":"ElementaryTypeName","src":"42641:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17888,"mutability":"mutable","name":"value","nameLocation":"42683:5:28","nodeType":"VariableDeclaration","scope":17893,"src":"42667:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17887,"name":"string","nodeType":"ElementaryTypeName","src":"42667:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42613:76:28"},"returnParameters":{"id":17892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17891,"mutability":"mutable","name":"json","nameLocation":"42738:4:28","nodeType":"VariableDeclaration","scope":17893,"src":"42724:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17890,"name":"string","nodeType":"ElementaryTypeName","src":"42724:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42723:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17906,"nodeType":"FunctionDefinition","src":"42779:158:28","nodes":[],"documentation":{"id":17894,"nodeType":"StructuredDocumentation","src":"42750:24:28","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"42788:15:28","parameters":{"id":17902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17896,"mutability":"mutable","name":"objectKey","nameLocation":"42820:9:28","nodeType":"VariableDeclaration","scope":17906,"src":"42804:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17895,"name":"string","nodeType":"ElementaryTypeName","src":"42804:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17898,"mutability":"mutable","name":"valueKey","nameLocation":"42847:8:28","nodeType":"VariableDeclaration","scope":17906,"src":"42831:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17897,"name":"string","nodeType":"ElementaryTypeName","src":"42831:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17901,"mutability":"mutable","name":"values","nameLocation":"42875:6:28","nodeType":"VariableDeclaration","scope":17906,"src":"42857:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17899,"name":"string","nodeType":"ElementaryTypeName","src":"42857:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17900,"nodeType":"ArrayTypeName","src":"42857:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"42803:79:28"},"returnParameters":{"id":17905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17904,"mutability":"mutable","name":"json","nameLocation":"42931:4:28","nodeType":"VariableDeclaration","scope":17906,"src":"42917:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17903,"name":"string","nodeType":"ElementaryTypeName","src":"42917:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42916:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17918,"nodeType":"FunctionDefinition","src":"42972:150:28","nodes":[],"documentation":{"id":17907,"nodeType":"StructuredDocumentation","src":"42943:24:28","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"42981:18:28","parameters":{"id":17914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17909,"mutability":"mutable","name":"objectKey","nameLocation":"43016:9:28","nodeType":"VariableDeclaration","scope":17918,"src":"43000:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17908,"name":"string","nodeType":"ElementaryTypeName","src":"43000:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17911,"mutability":"mutable","name":"valueKey","nameLocation":"43043:8:28","nodeType":"VariableDeclaration","scope":17918,"src":"43027:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17910,"name":"string","nodeType":"ElementaryTypeName","src":"43027:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17913,"mutability":"mutable","name":"value","nameLocation":"43061:5:28","nodeType":"VariableDeclaration","scope":17918,"src":"43053:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17912,"name":"uint256","nodeType":"ElementaryTypeName","src":"43053:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42999:68:28"},"returnParameters":{"id":17917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17916,"mutability":"mutable","name":"json","nameLocation":"43116:4:28","nodeType":"VariableDeclaration","scope":17918,"src":"43102:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17915,"name":"string","nodeType":"ElementaryTypeName","src":"43102:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43101:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17930,"nodeType":"FunctionDefinition","src":"43157:145:28","nodes":[],"documentation":{"id":17919,"nodeType":"StructuredDocumentation","src":"43128:24:28","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"43166:13:28","parameters":{"id":17926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17921,"mutability":"mutable","name":"objectKey","nameLocation":"43196:9:28","nodeType":"VariableDeclaration","scope":17930,"src":"43180:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17920,"name":"string","nodeType":"ElementaryTypeName","src":"43180:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17923,"mutability":"mutable","name":"valueKey","nameLocation":"43223:8:28","nodeType":"VariableDeclaration","scope":17930,"src":"43207:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17922,"name":"string","nodeType":"ElementaryTypeName","src":"43207:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17925,"mutability":"mutable","name":"value","nameLocation":"43241:5:28","nodeType":"VariableDeclaration","scope":17930,"src":"43233:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17924,"name":"uint256","nodeType":"ElementaryTypeName","src":"43233:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43179:68:28"},"returnParameters":{"id":17929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17928,"mutability":"mutable","name":"json","nameLocation":"43296:4:28","nodeType":"VariableDeclaration","scope":17930,"src":"43282:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17927,"name":"string","nodeType":"ElementaryTypeName","src":"43282:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43281:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17943,"nodeType":"FunctionDefinition","src":"43337:157:28","nodes":[],"documentation":{"id":17931,"nodeType":"StructuredDocumentation","src":"43308:24:28","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"43346:13:28","parameters":{"id":17939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17933,"mutability":"mutable","name":"objectKey","nameLocation":"43376:9:28","nodeType":"VariableDeclaration","scope":17943,"src":"43360:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17932,"name":"string","nodeType":"ElementaryTypeName","src":"43360:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17935,"mutability":"mutable","name":"valueKey","nameLocation":"43403:8:28","nodeType":"VariableDeclaration","scope":17943,"src":"43387:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17934,"name":"string","nodeType":"ElementaryTypeName","src":"43387:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17938,"mutability":"mutable","name":"values","nameLocation":"43432:6:28","nodeType":"VariableDeclaration","scope":17943,"src":"43413:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17936,"name":"uint256","nodeType":"ElementaryTypeName","src":"43413:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17937,"nodeType":"ArrayTypeName","src":"43413:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"43359:80:28"},"returnParameters":{"id":17942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17941,"mutability":"mutable","name":"json","nameLocation":"43488:4:28","nodeType":"VariableDeclaration","scope":17943,"src":"43474:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17940,"name":"string","nodeType":"ElementaryTypeName","src":"43474:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43473:20:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17951,"nodeType":"FunctionDefinition","src":"43594:72:28","nodes":[],"documentation":{"id":17944,"nodeType":"StructuredDocumentation","src":"43500:89:28","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"43603:9:28","parameters":{"id":17949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17946,"mutability":"mutable","name":"json","nameLocation":"43629:4:28","nodeType":"VariableDeclaration","scope":17951,"src":"43613:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17945,"name":"string","nodeType":"ElementaryTypeName","src":"43613:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17948,"mutability":"mutable","name":"path","nameLocation":"43651:4:28","nodeType":"VariableDeclaration","scope":17951,"src":"43635:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17947,"name":"string","nodeType":"ElementaryTypeName","src":"43635:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43612:44:28"},"returnParameters":{"id":17950,"nodeType":"ParameterList","parameters":[],"src":"43665:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17961,"nodeType":"FunctionDefinition","src":"43892:98:28","nodes":[],"documentation":{"id":17952,"nodeType":"StructuredDocumentation","src":"43672:215:28","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"43901:9:28","parameters":{"id":17959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17954,"mutability":"mutable","name":"json","nameLocation":"43927:4:28","nodeType":"VariableDeclaration","scope":17961,"src":"43911:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17953,"name":"string","nodeType":"ElementaryTypeName","src":"43911:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17956,"mutability":"mutable","name":"path","nameLocation":"43949:4:28","nodeType":"VariableDeclaration","scope":17961,"src":"43933:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17955,"name":"string","nodeType":"ElementaryTypeName","src":"43933:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17958,"mutability":"mutable","name":"valueKey","nameLocation":"43971:8:28","nodeType":"VariableDeclaration","scope":17961,"src":"43955:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17957,"name":"string","nodeType":"ElementaryTypeName","src":"43955:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43910:70:28"},"returnParameters":{"id":17960,"nodeType":"ParameterList","parameters":[],"src":"43989:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17971,"nodeType":"FunctionDefinition","src":"44152:91:28","nodes":[],"documentation":{"id":17962,"nodeType":"StructuredDocumentation","src":"43996:151:28","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"44161:9:28","parameters":{"id":17967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17964,"mutability":"mutable","name":"json","nameLocation":"44187:4:28","nodeType":"VariableDeclaration","scope":17971,"src":"44171:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17963,"name":"string","nodeType":"ElementaryTypeName","src":"44171:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17966,"mutability":"mutable","name":"key","nameLocation":"44209:3:28","nodeType":"VariableDeclaration","scope":17971,"src":"44193:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17965,"name":"string","nodeType":"ElementaryTypeName","src":"44193:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44170:43:28"},"returnParameters":{"id":17970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17971,"src":"44237:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17968,"name":"bool","nodeType":"ElementaryTypeName","src":"44237:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"44236:6:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17977,"nodeType":"FunctionDefinition","src":"44354:63:28","nodes":[],"documentation":{"id":17972,"nodeType":"StructuredDocumentation","src":"44285:64:28","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"44363:23:28","parameters":{"id":17975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17974,"mutability":"mutable","name":"data","nameLocation":"44402:4:28","nodeType":"VariableDeclaration","scope":17977,"src":"44387:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17973,"name":"bytes","nodeType":"ElementaryTypeName","src":"44387:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"44386:21:28"},"returnParameters":{"id":17976,"nodeType":"ParameterList","parameters":[],"src":"44416:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17981,"nodeType":"FunctionDefinition","src":"44920:30:28","nodes":[],"documentation":{"id":17978,"nodeType":"StructuredDocumentation","src":"44423:492:28","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"44929:9:28","parameters":{"id":17979,"nodeType":"ParameterList","parameters":[],"src":"44938:2:28"},"returnParameters":{"id":17980,"nodeType":"ParameterList","parameters":[],"src":"44949:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17987,"nodeType":"FunctionDefinition","src":"45120:44:28","nodes":[],"documentation":{"id":17982,"nodeType":"StructuredDocumentation","src":"44956:159:28","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"45129:9:28","parameters":{"id":17985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17984,"mutability":"mutable","name":"signer","nameLocation":"45147:6:28","nodeType":"VariableDeclaration","scope":17987,"src":"45139:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17983,"name":"address","nodeType":"ElementaryTypeName","src":"45139:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"45138:16:28"},"returnParameters":{"id":17986,"nodeType":"ParameterList","parameters":[],"src":"45163:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17993,"nodeType":"FunctionDefinition","src":"45338:48:28","nodes":[],"documentation":{"id":17988,"nodeType":"StructuredDocumentation","src":"45170:163:28","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"45347:9:28","parameters":{"id":17991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17990,"mutability":"mutable","name":"privateKey","nameLocation":"45365:10:28","nodeType":"VariableDeclaration","scope":17993,"src":"45357:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17989,"name":"uint256","nodeType":"ElementaryTypeName","src":"45357:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45356:20:28"},"returnParameters":{"id":17992,"nodeType":"ParameterList","parameters":[],"src":"45385:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17997,"nodeType":"FunctionDefinition","src":"45896:35:28","nodes":[],"documentation":{"id":17994,"nodeType":"StructuredDocumentation","src":"45392:499:28","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"45905:14:28","parameters":{"id":17995,"nodeType":"ParameterList","parameters":[],"src":"45919:2:28"},"returnParameters":{"id":17996,"nodeType":"ParameterList","parameters":[],"src":"45930:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18003,"nodeType":"FunctionDefinition","src":"46093:49:28","nodes":[],"documentation":{"id":17998,"nodeType":"StructuredDocumentation","src":"45937:151:28","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"46102:14:28","parameters":{"id":18001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18000,"mutability":"mutable","name":"signer","nameLocation":"46125:6:28","nodeType":"VariableDeclaration","scope":18003,"src":"46117:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17999,"name":"address","nodeType":"ElementaryTypeName","src":"46117:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46116:16:28"},"returnParameters":{"id":18002,"nodeType":"ParameterList","parameters":[],"src":"46141:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18009,"nodeType":"FunctionDefinition","src":"46308:53:28","nodes":[],"documentation":{"id":18004,"nodeType":"StructuredDocumentation","src":"46148:155:28","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"46317:14:28","parameters":{"id":18007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18006,"mutability":"mutable","name":"privateKey","nameLocation":"46340:10:28","nodeType":"VariableDeclaration","scope":18009,"src":"46332:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18005,"name":"uint256","nodeType":"ElementaryTypeName","src":"46332:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46331:20:28"},"returnParameters":{"id":18008,"nodeType":"ParameterList","parameters":[],"src":"46360:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18013,"nodeType":"FunctionDefinition","src":"46414:34:28","nodes":[],"documentation":{"id":18010,"nodeType":"StructuredDocumentation","src":"46367:42:28","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"46423:13:28","parameters":{"id":18011,"nodeType":"ParameterList","parameters":[],"src":"46436:2:28"},"returnParameters":{"id":18012,"nodeType":"ParameterList","parameters":[],"src":"46447:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18023,"nodeType":"FunctionDefinition","src":"46697:93:28","nodes":[],"documentation":{"id":18014,"nodeType":"StructuredDocumentation","src":"46487:205:28","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"46706:7:28","parameters":{"id":18019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18016,"mutability":"mutable","name":"input","nameLocation":"46730:5:28","nodeType":"VariableDeclaration","scope":18023,"src":"46714:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18015,"name":"string","nodeType":"ElementaryTypeName","src":"46714:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18018,"mutability":"mutable","name":"key","nameLocation":"46753:3:28","nodeType":"VariableDeclaration","scope":18023,"src":"46737:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18017,"name":"string","nodeType":"ElementaryTypeName","src":"46737:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46713:44:28"},"returnParameters":{"id":18022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18023,"src":"46781:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18020,"name":"uint256","nodeType":"ElementaryTypeName","src":"46781:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46780:9:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18031,"nodeType":"FunctionDefinition","src":"46849:100:28","nodes":[],"documentation":{"id":18024,"nodeType":"StructuredDocumentation","src":"46796:48:28","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"46858:12:28","parameters":{"id":18027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18026,"mutability":"mutable","name":"stringifiedValue","nameLocation":"46887:16:28","nodeType":"VariableDeclaration","scope":18031,"src":"46871:32:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18025,"name":"string","nodeType":"ElementaryTypeName","src":"46871:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46870:34:28"},"returnParameters":{"id":18030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18029,"mutability":"mutable","name":"parsedValue","nameLocation":"46936:11:28","nodeType":"VariableDeclaration","scope":18031,"src":"46928:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18028,"name":"address","nodeType":"ElementaryTypeName","src":"46928:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46927:21:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18039,"nodeType":"FunctionDefinition","src":"47004:94:28","nodes":[],"documentation":{"id":18032,"nodeType":"StructuredDocumentation","src":"46955:44:28","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"47013:9:28","parameters":{"id":18035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18034,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47039:16:28","nodeType":"VariableDeclaration","scope":18039,"src":"47023:32:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18033,"name":"string","nodeType":"ElementaryTypeName","src":"47023:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47022:34:28"},"returnParameters":{"id":18038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18037,"mutability":"mutable","name":"parsedValue","nameLocation":"47085:11:28","nodeType":"VariableDeclaration","scope":18039,"src":"47080:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18036,"name":"bool","nodeType":"ElementaryTypeName","src":"47080:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"47079:18:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18047,"nodeType":"FunctionDefinition","src":"47152:103:28","nodes":[],"documentation":{"id":18040,"nodeType":"StructuredDocumentation","src":"47104:43:28","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"47161:10:28","parameters":{"id":18043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18042,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47188:16:28","nodeType":"VariableDeclaration","scope":18047,"src":"47172:32:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18041,"name":"string","nodeType":"ElementaryTypeName","src":"47172:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47171:34:28"},"returnParameters":{"id":18046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18045,"mutability":"mutable","name":"parsedValue","nameLocation":"47242:11:28","nodeType":"VariableDeclaration","scope":18047,"src":"47229:24:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18044,"name":"bytes","nodeType":"ElementaryTypeName","src":"47229:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"47228:26:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18055,"nodeType":"FunctionDefinition","src":"47313:100:28","nodes":[],"documentation":{"id":18048,"nodeType":"StructuredDocumentation","src":"47261:47:28","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"47322:12:28","parameters":{"id":18051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18050,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47351:16:28","nodeType":"VariableDeclaration","scope":18055,"src":"47335:32:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18049,"name":"string","nodeType":"ElementaryTypeName","src":"47335:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47334:34:28"},"returnParameters":{"id":18054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18053,"mutability":"mutable","name":"parsedValue","nameLocation":"47400:11:28","nodeType":"VariableDeclaration","scope":18055,"src":"47392:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47392:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"47391:21:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18063,"nodeType":"FunctionDefinition","src":"47470:95:28","nodes":[],"documentation":{"id":18056,"nodeType":"StructuredDocumentation","src":"47419:46:28","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"47479:8:28","parameters":{"id":18059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18058,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47504:16:28","nodeType":"VariableDeclaration","scope":18063,"src":"47488:32:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18057,"name":"string","nodeType":"ElementaryTypeName","src":"47488:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47487:34:28"},"returnParameters":{"id":18062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18061,"mutability":"mutable","name":"parsedValue","nameLocation":"47552:11:28","nodeType":"VariableDeclaration","scope":18063,"src":"47545:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18060,"name":"int256","nodeType":"ElementaryTypeName","src":"47545:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"47544:20:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18071,"nodeType":"FunctionDefinition","src":"47623:97:28","nodes":[],"documentation":{"id":18064,"nodeType":"StructuredDocumentation","src":"47571:47:28","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"47632:9:28","parameters":{"id":18067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18066,"mutability":"mutable","name":"stringifiedValue","nameLocation":"47658:16:28","nodeType":"VariableDeclaration","scope":18071,"src":"47642:32:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18065,"name":"string","nodeType":"ElementaryTypeName","src":"47642:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47641:34:28"},"returnParameters":{"id":18070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18069,"mutability":"mutable","name":"parsedValue","nameLocation":"47707:11:28","nodeType":"VariableDeclaration","scope":18071,"src":"47699:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18068,"name":"uint256","nodeType":"ElementaryTypeName","src":"47699:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47698:21:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18083,"nodeType":"FunctionDefinition","src":"47798:151:28","nodes":[],"documentation":{"id":18072,"nodeType":"StructuredDocumentation","src":"47726:67:28","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"47807:7:28","parameters":{"id":18079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18074,"mutability":"mutable","name":"input","nameLocation":"47831:5:28","nodeType":"VariableDeclaration","scope":18083,"src":"47815:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18073,"name":"string","nodeType":"ElementaryTypeName","src":"47815:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18076,"mutability":"mutable","name":"from","nameLocation":"47854:4:28","nodeType":"VariableDeclaration","scope":18083,"src":"47838:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18075,"name":"string","nodeType":"ElementaryTypeName","src":"47838:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18078,"mutability":"mutable","name":"to","nameLocation":"47876:2:28","nodeType":"VariableDeclaration","scope":18083,"src":"47860:18:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18077,"name":"string","nodeType":"ElementaryTypeName","src":"47860:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47814:65:28"},"returnParameters":{"id":18082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18081,"mutability":"mutable","name":"output","nameLocation":"47941:6:28","nodeType":"VariableDeclaration","scope":18083,"src":"47927:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18080,"name":"string","nodeType":"ElementaryTypeName","src":"47927:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47926:22:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18094,"nodeType":"FunctionDefinition","src":"48042:113:28","nodes":[],"documentation":{"id":18084,"nodeType":"StructuredDocumentation","src":"47955:82:28","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"48051:5:28","parameters":{"id":18089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18086,"mutability":"mutable","name":"input","nameLocation":"48073:5:28","nodeType":"VariableDeclaration","scope":18094,"src":"48057:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18085,"name":"string","nodeType":"ElementaryTypeName","src":"48057:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18088,"mutability":"mutable","name":"delimiter","nameLocation":"48096:9:28","nodeType":"VariableDeclaration","scope":18094,"src":"48080:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18087,"name":"string","nodeType":"ElementaryTypeName","src":"48080:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48056:50:28"},"returnParameters":{"id":18093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18092,"mutability":"mutable","name":"outputs","nameLocation":"48146:7:28","nodeType":"VariableDeclaration","scope":18094,"src":"48130:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18090,"name":"string","nodeType":"ElementaryTypeName","src":"48130:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18091,"nodeType":"ArrayTypeName","src":"48130:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"48129:25:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18102,"nodeType":"FunctionDefinition","src":"48217:89:28","nodes":[],"documentation":{"id":18095,"nodeType":"StructuredDocumentation","src":"48161:51:28","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"48226:11:28","parameters":{"id":18098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18097,"mutability":"mutable","name":"input","nameLocation":"48254:5:28","nodeType":"VariableDeclaration","scope":18102,"src":"48238:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18096,"name":"string","nodeType":"ElementaryTypeName","src":"48238:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48237:23:28"},"returnParameters":{"id":18101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18100,"mutability":"mutable","name":"output","nameLocation":"48298:6:28","nodeType":"VariableDeclaration","scope":18102,"src":"48284:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18099,"name":"string","nodeType":"ElementaryTypeName","src":"48284:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48283:22:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18110,"nodeType":"FunctionDefinition","src":"48360:88:28","nodes":[],"documentation":{"id":18103,"nodeType":"StructuredDocumentation","src":"48312:43:28","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48369:8:28","parameters":{"id":18106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18105,"mutability":"mutable","name":"value","nameLocation":"48386:5:28","nodeType":"VariableDeclaration","scope":18110,"src":"48378:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18104,"name":"address","nodeType":"ElementaryTypeName","src":"48378:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"48377:15:28"},"returnParameters":{"id":18109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18108,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48430:16:28","nodeType":"VariableDeclaration","scope":18110,"src":"48416:30:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18107,"name":"string","nodeType":"ElementaryTypeName","src":"48416:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48415:32:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18118,"nodeType":"FunctionDefinition","src":"48502:95:28","nodes":[],"documentation":{"id":18111,"nodeType":"StructuredDocumentation","src":"48454:43:28","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48511:8:28","parameters":{"id":18114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18113,"mutability":"mutable","name":"value","nameLocation":"48535:5:28","nodeType":"VariableDeclaration","scope":18118,"src":"48520:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18112,"name":"bytes","nodeType":"ElementaryTypeName","src":"48520:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"48519:22:28"},"returnParameters":{"id":18117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18116,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48579:16:28","nodeType":"VariableDeclaration","scope":18118,"src":"48565:30:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18115,"name":"string","nodeType":"ElementaryTypeName","src":"48565:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48564:32:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18126,"nodeType":"FunctionDefinition","src":"48651:88:28","nodes":[],"documentation":{"id":18119,"nodeType":"StructuredDocumentation","src":"48603:43:28","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48660:8:28","parameters":{"id":18122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18121,"mutability":"mutable","name":"value","nameLocation":"48677:5:28","nodeType":"VariableDeclaration","scope":18126,"src":"48669:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48669:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"48668:15:28"},"returnParameters":{"id":18125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18124,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48721:16:28","nodeType":"VariableDeclaration","scope":18126,"src":"48707:30:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18123,"name":"string","nodeType":"ElementaryTypeName","src":"48707:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48706:32:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18134,"nodeType":"FunctionDefinition","src":"48793:85:28","nodes":[],"documentation":{"id":18127,"nodeType":"StructuredDocumentation","src":"48745:43:28","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48802:8:28","parameters":{"id":18130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18129,"mutability":"mutable","name":"value","nameLocation":"48816:5:28","nodeType":"VariableDeclaration","scope":18134,"src":"48811:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18128,"name":"bool","nodeType":"ElementaryTypeName","src":"48811:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48810:12:28"},"returnParameters":{"id":18133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18132,"mutability":"mutable","name":"stringifiedValue","nameLocation":"48860:16:28","nodeType":"VariableDeclaration","scope":18134,"src":"48846:30:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18131,"name":"string","nodeType":"ElementaryTypeName","src":"48846:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48845:32:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18142,"nodeType":"FunctionDefinition","src":"48932:88:28","nodes":[],"documentation":{"id":18135,"nodeType":"StructuredDocumentation","src":"48884:43:28","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"48941:8:28","parameters":{"id":18138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18137,"mutability":"mutable","name":"value","nameLocation":"48958:5:28","nodeType":"VariableDeclaration","scope":18142,"src":"48950:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18136,"name":"uint256","nodeType":"ElementaryTypeName","src":"48950:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48949:15:28"},"returnParameters":{"id":18141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18140,"mutability":"mutable","name":"stringifiedValue","nameLocation":"49002:16:28","nodeType":"VariableDeclaration","scope":18142,"src":"48988:30:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18139,"name":"string","nodeType":"ElementaryTypeName","src":"48988:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48987:32:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18150,"nodeType":"FunctionDefinition","src":"49074:87:28","nodes":[],"documentation":{"id":18143,"nodeType":"StructuredDocumentation","src":"49026:43:28","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"49083:8:28","parameters":{"id":18146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18145,"mutability":"mutable","name":"value","nameLocation":"49099:5:28","nodeType":"VariableDeclaration","scope":18150,"src":"49092:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18144,"name":"int256","nodeType":"ElementaryTypeName","src":"49092:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"49091:14:28"},"returnParameters":{"id":18149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18148,"mutability":"mutable","name":"stringifiedValue","nameLocation":"49143:16:28","nodeType":"VariableDeclaration","scope":18150,"src":"49129:30:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18147,"name":"string","nodeType":"ElementaryTypeName","src":"49129:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49128:32:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18158,"nodeType":"FunctionDefinition","src":"49223:89:28","nodes":[],"documentation":{"id":18151,"nodeType":"StructuredDocumentation","src":"49167:51:28","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"49232:11:28","parameters":{"id":18154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18153,"mutability":"mutable","name":"input","nameLocation":"49260:5:28","nodeType":"VariableDeclaration","scope":18158,"src":"49244:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18152,"name":"string","nodeType":"ElementaryTypeName","src":"49244:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49243:23:28"},"returnParameters":{"id":18157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18156,"mutability":"mutable","name":"output","nameLocation":"49304:6:28","nodeType":"VariableDeclaration","scope":18158,"src":"49290:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18155,"name":"string","nodeType":"ElementaryTypeName","src":"49290:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49289:22:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18166,"nodeType":"FunctionDefinition","src":"49395:82:28","nodes":[],"documentation":{"id":18159,"nodeType":"StructuredDocumentation","src":"49318:72:28","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"49404:4:28","parameters":{"id":18162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18161,"mutability":"mutable","name":"input","nameLocation":"49425:5:28","nodeType":"VariableDeclaration","scope":18166,"src":"49409:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18160,"name":"string","nodeType":"ElementaryTypeName","src":"49409:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49408:23:28"},"returnParameters":{"id":18165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18164,"mutability":"mutable","name":"output","nameLocation":"49469:6:28","nodeType":"VariableDeclaration","scope":18166,"src":"49455:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18163,"name":"string","nodeType":"ElementaryTypeName","src":"49455:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49454:22:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18178,"nodeType":"FunctionDefinition","src":"49672:113:28","nodes":[],"documentation":{"id":18167,"nodeType":"StructuredDocumentation","src":"49517:150:28","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"49681:24:28","parameters":{"id":18176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18169,"mutability":"mutable","name":"left","nameLocation":"49714:4:28","nodeType":"VariableDeclaration","scope":18178,"src":"49706:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18168,"name":"uint256","nodeType":"ElementaryTypeName","src":"49706:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18171,"mutability":"mutable","name":"right","nameLocation":"49728:5:28","nodeType":"VariableDeclaration","scope":18178,"src":"49720:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18170,"name":"uint256","nodeType":"ElementaryTypeName","src":"49720:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18173,"mutability":"mutable","name":"maxDelta","nameLocation":"49743:8:28","nodeType":"VariableDeclaration","scope":18178,"src":"49735:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18172,"name":"uint256","nodeType":"ElementaryTypeName","src":"49735:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18175,"mutability":"mutable","name":"decimals","nameLocation":"49761:8:28","nodeType":"VariableDeclaration","scope":18178,"src":"49753:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18174,"name":"uint256","nodeType":"ElementaryTypeName","src":"49753:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49705:65:28"},"returnParameters":{"id":18177,"nodeType":"ParameterList","parameters":[],"src":"49784:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18192,"nodeType":"FunctionDefinition","src":"50000:182:28","nodes":[],"documentation":{"id":18179,"nodeType":"StructuredDocumentation","src":"49791:204:28","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"50009:24:28","parameters":{"id":18190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18181,"mutability":"mutable","name":"left","nameLocation":"50051:4:28","nodeType":"VariableDeclaration","scope":18192,"src":"50043:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18180,"name":"uint256","nodeType":"ElementaryTypeName","src":"50043:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18183,"mutability":"mutable","name":"right","nameLocation":"50073:5:28","nodeType":"VariableDeclaration","scope":18192,"src":"50065:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18182,"name":"uint256","nodeType":"ElementaryTypeName","src":"50065:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18185,"mutability":"mutable","name":"maxDelta","nameLocation":"50096:8:28","nodeType":"VariableDeclaration","scope":18192,"src":"50088:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18184,"name":"uint256","nodeType":"ElementaryTypeName","src":"50088:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18187,"mutability":"mutable","name":"decimals","nameLocation":"50122:8:28","nodeType":"VariableDeclaration","scope":18192,"src":"50114:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18186,"name":"uint256","nodeType":"ElementaryTypeName","src":"50114:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18189,"mutability":"mutable","name":"error","nameLocation":"50156:5:28","nodeType":"VariableDeclaration","scope":18192,"src":"50140:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18188,"name":"string","nodeType":"ElementaryTypeName","src":"50140:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50033:134:28"},"returnParameters":{"id":18191,"nodeType":"ParameterList","parameters":[],"src":"50181:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18204,"nodeType":"FunctionDefinition","src":"50342:111:28","nodes":[],"documentation":{"id":18193,"nodeType":"StructuredDocumentation","src":"50188:149:28","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"50351:24:28","parameters":{"id":18202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18195,"mutability":"mutable","name":"left","nameLocation":"50383:4:28","nodeType":"VariableDeclaration","scope":18204,"src":"50376:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18194,"name":"int256","nodeType":"ElementaryTypeName","src":"50376:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18197,"mutability":"mutable","name":"right","nameLocation":"50396:5:28","nodeType":"VariableDeclaration","scope":18204,"src":"50389:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18196,"name":"int256","nodeType":"ElementaryTypeName","src":"50389:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18199,"mutability":"mutable","name":"maxDelta","nameLocation":"50411:8:28","nodeType":"VariableDeclaration","scope":18204,"src":"50403:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18198,"name":"uint256","nodeType":"ElementaryTypeName","src":"50403:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18201,"mutability":"mutable","name":"decimals","nameLocation":"50429:8:28","nodeType":"VariableDeclaration","scope":18204,"src":"50421:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18200,"name":"uint256","nodeType":"ElementaryTypeName","src":"50421:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50375:63:28"},"returnParameters":{"id":18203,"nodeType":"ParameterList","parameters":[],"src":"50452:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18218,"nodeType":"FunctionDefinition","src":"50667:180:28","nodes":[],"documentation":{"id":18205,"nodeType":"StructuredDocumentation","src":"50459:203:28","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"50676:24:28","parameters":{"id":18216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18207,"mutability":"mutable","name":"left","nameLocation":"50717:4:28","nodeType":"VariableDeclaration","scope":18218,"src":"50710:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18206,"name":"int256","nodeType":"ElementaryTypeName","src":"50710:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18209,"mutability":"mutable","name":"right","nameLocation":"50738:5:28","nodeType":"VariableDeclaration","scope":18218,"src":"50731:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18208,"name":"int256","nodeType":"ElementaryTypeName","src":"50731:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18211,"mutability":"mutable","name":"maxDelta","nameLocation":"50761:8:28","nodeType":"VariableDeclaration","scope":18218,"src":"50753:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18210,"name":"uint256","nodeType":"ElementaryTypeName","src":"50753:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18213,"mutability":"mutable","name":"decimals","nameLocation":"50787:8:28","nodeType":"VariableDeclaration","scope":18218,"src":"50779:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18212,"name":"uint256","nodeType":"ElementaryTypeName","src":"50779:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18215,"mutability":"mutable","name":"error","nameLocation":"50821:5:28","nodeType":"VariableDeclaration","scope":18218,"src":"50805:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18214,"name":"string","nodeType":"ElementaryTypeName","src":"50805:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50700:132:28"},"returnParameters":{"id":18217,"nodeType":"ParameterList","parameters":[],"src":"50846:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18228,"nodeType":"FunctionDefinition","src":"50951:88:28","nodes":[],"documentation":{"id":18219,"nodeType":"StructuredDocumentation","src":"50853:93:28","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"50960:17:28","parameters":{"id":18226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18221,"mutability":"mutable","name":"left","nameLocation":"50986:4:28","nodeType":"VariableDeclaration","scope":18228,"src":"50978:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18220,"name":"uint256","nodeType":"ElementaryTypeName","src":"50978:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18223,"mutability":"mutable","name":"right","nameLocation":"51000:5:28","nodeType":"VariableDeclaration","scope":18228,"src":"50992:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18222,"name":"uint256","nodeType":"ElementaryTypeName","src":"50992:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18225,"mutability":"mutable","name":"maxDelta","nameLocation":"51015:8:28","nodeType":"VariableDeclaration","scope":18228,"src":"51007:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18224,"name":"uint256","nodeType":"ElementaryTypeName","src":"51007:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50977:47:28"},"returnParameters":{"id":18227,"nodeType":"ParameterList","parameters":[],"src":"51038:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18240,"nodeType":"FunctionDefinition","src":"51205:111:28","nodes":[],"documentation":{"id":18229,"nodeType":"StructuredDocumentation","src":"51045:155:28","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"51214:17:28","parameters":{"id":18238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18231,"mutability":"mutable","name":"left","nameLocation":"51240:4:28","nodeType":"VariableDeclaration","scope":18240,"src":"51232:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18230,"name":"uint256","nodeType":"ElementaryTypeName","src":"51232:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18233,"mutability":"mutable","name":"right","nameLocation":"51254:5:28","nodeType":"VariableDeclaration","scope":18240,"src":"51246:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18232,"name":"uint256","nodeType":"ElementaryTypeName","src":"51246:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18235,"mutability":"mutable","name":"maxDelta","nameLocation":"51269:8:28","nodeType":"VariableDeclaration","scope":18240,"src":"51261:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18234,"name":"uint256","nodeType":"ElementaryTypeName","src":"51261:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18237,"mutability":"mutable","name":"error","nameLocation":"51295:5:28","nodeType":"VariableDeclaration","scope":18240,"src":"51279:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18236,"name":"string","nodeType":"ElementaryTypeName","src":"51279:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51231:70:28"},"returnParameters":{"id":18239,"nodeType":"ParameterList","parameters":[],"src":"51315:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18250,"nodeType":"FunctionDefinition","src":"51419:86:28","nodes":[],"documentation":{"id":18241,"nodeType":"StructuredDocumentation","src":"51322:92:28","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"51428:17:28","parameters":{"id":18248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18243,"mutability":"mutable","name":"left","nameLocation":"51453:4:28","nodeType":"VariableDeclaration","scope":18250,"src":"51446:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18242,"name":"int256","nodeType":"ElementaryTypeName","src":"51446:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18245,"mutability":"mutable","name":"right","nameLocation":"51466:5:28","nodeType":"VariableDeclaration","scope":18250,"src":"51459:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18244,"name":"int256","nodeType":"ElementaryTypeName","src":"51459:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18247,"mutability":"mutable","name":"maxDelta","nameLocation":"51481:8:28","nodeType":"VariableDeclaration","scope":18250,"src":"51473:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18246,"name":"uint256","nodeType":"ElementaryTypeName","src":"51473:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51445:45:28"},"returnParameters":{"id":18249,"nodeType":"ParameterList","parameters":[],"src":"51504:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18262,"nodeType":"FunctionDefinition","src":"51670:109:28","nodes":[],"documentation":{"id":18251,"nodeType":"StructuredDocumentation","src":"51511:154:28","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"51679:17:28","parameters":{"id":18260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18253,"mutability":"mutable","name":"left","nameLocation":"51704:4:28","nodeType":"VariableDeclaration","scope":18262,"src":"51697:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18252,"name":"int256","nodeType":"ElementaryTypeName","src":"51697:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18255,"mutability":"mutable","name":"right","nameLocation":"51717:5:28","nodeType":"VariableDeclaration","scope":18262,"src":"51710:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18254,"name":"int256","nodeType":"ElementaryTypeName","src":"51710:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18257,"mutability":"mutable","name":"maxDelta","nameLocation":"51732:8:28","nodeType":"VariableDeclaration","scope":18262,"src":"51724:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18256,"name":"uint256","nodeType":"ElementaryTypeName","src":"51724:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18259,"mutability":"mutable","name":"error","nameLocation":"51758:5:28","nodeType":"VariableDeclaration","scope":18262,"src":"51742:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18258,"name":"string","nodeType":"ElementaryTypeName","src":"51742:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51696:68:28"},"returnParameters":{"id":18261,"nodeType":"ParameterList","parameters":[],"src":"51778:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18274,"nodeType":"FunctionDefinition","src":"52050:136:28","nodes":[],"documentation":{"id":18263,"nodeType":"StructuredDocumentation","src":"51785:260:28","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"52059:24:28","parameters":{"id":18272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18265,"mutability":"mutable","name":"left","nameLocation":"52092:4:28","nodeType":"VariableDeclaration","scope":18274,"src":"52084:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18264,"name":"uint256","nodeType":"ElementaryTypeName","src":"52084:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18267,"mutability":"mutable","name":"right","nameLocation":"52106:5:28","nodeType":"VariableDeclaration","scope":18274,"src":"52098:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18266,"name":"uint256","nodeType":"ElementaryTypeName","src":"52098:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18269,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"52121:15:28","nodeType":"VariableDeclaration","scope":18274,"src":"52113:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18268,"name":"uint256","nodeType":"ElementaryTypeName","src":"52113:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18271,"mutability":"mutable","name":"decimals","nameLocation":"52146:8:28","nodeType":"VariableDeclaration","scope":18274,"src":"52138:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18270,"name":"uint256","nodeType":"ElementaryTypeName","src":"52138:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52083:72:28"},"returnParameters":{"id":18273,"nodeType":"ParameterList","parameters":[],"src":"52185:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18288,"nodeType":"FunctionDefinition","src":"52511:189:28","nodes":[],"documentation":{"id":18275,"nodeType":"StructuredDocumentation","src":"52192:314:28","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"52520:24:28","parameters":{"id":18286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18277,"mutability":"mutable","name":"left","nameLocation":"52562:4:28","nodeType":"VariableDeclaration","scope":18288,"src":"52554:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18276,"name":"uint256","nodeType":"ElementaryTypeName","src":"52554:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18279,"mutability":"mutable","name":"right","nameLocation":"52584:5:28","nodeType":"VariableDeclaration","scope":18288,"src":"52576:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18278,"name":"uint256","nodeType":"ElementaryTypeName","src":"52576:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18281,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"52607:15:28","nodeType":"VariableDeclaration","scope":18288,"src":"52599:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18280,"name":"uint256","nodeType":"ElementaryTypeName","src":"52599:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18283,"mutability":"mutable","name":"decimals","nameLocation":"52640:8:28","nodeType":"VariableDeclaration","scope":18288,"src":"52632:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18282,"name":"uint256","nodeType":"ElementaryTypeName","src":"52632:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18285,"mutability":"mutable","name":"error","nameLocation":"52674:5:28","nodeType":"VariableDeclaration","scope":18288,"src":"52658:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18284,"name":"string","nodeType":"ElementaryTypeName","src":"52658:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52544:141:28"},"returnParameters":{"id":18287,"nodeType":"ParameterList","parameters":[],"src":"52699:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18300,"nodeType":"FunctionDefinition","src":"52970:134:28","nodes":[],"documentation":{"id":18289,"nodeType":"StructuredDocumentation","src":"52706:259:28","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"52979:24:28","parameters":{"id":18298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18291,"mutability":"mutable","name":"left","nameLocation":"53011:4:28","nodeType":"VariableDeclaration","scope":18300,"src":"53004:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18290,"name":"int256","nodeType":"ElementaryTypeName","src":"53004:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18293,"mutability":"mutable","name":"right","nameLocation":"53024:5:28","nodeType":"VariableDeclaration","scope":18300,"src":"53017:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18292,"name":"int256","nodeType":"ElementaryTypeName","src":"53017:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18295,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53039:15:28","nodeType":"VariableDeclaration","scope":18300,"src":"53031:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18294,"name":"uint256","nodeType":"ElementaryTypeName","src":"53031:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18297,"mutability":"mutable","name":"decimals","nameLocation":"53064:8:28","nodeType":"VariableDeclaration","scope":18300,"src":"53056:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18296,"name":"uint256","nodeType":"ElementaryTypeName","src":"53056:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53003:70:28"},"returnParameters":{"id":18299,"nodeType":"ParameterList","parameters":[],"src":"53103:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18314,"nodeType":"FunctionDefinition","src":"53428:187:28","nodes":[],"documentation":{"id":18301,"nodeType":"StructuredDocumentation","src":"53110:313:28","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"53437:24:28","parameters":{"id":18312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18303,"mutability":"mutable","name":"left","nameLocation":"53478:4:28","nodeType":"VariableDeclaration","scope":18314,"src":"53471:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18302,"name":"int256","nodeType":"ElementaryTypeName","src":"53471:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18305,"mutability":"mutable","name":"right","nameLocation":"53499:5:28","nodeType":"VariableDeclaration","scope":18314,"src":"53492:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18304,"name":"int256","nodeType":"ElementaryTypeName","src":"53492:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18307,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53522:15:28","nodeType":"VariableDeclaration","scope":18314,"src":"53514:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18306,"name":"uint256","nodeType":"ElementaryTypeName","src":"53514:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18309,"mutability":"mutable","name":"decimals","nameLocation":"53555:8:28","nodeType":"VariableDeclaration","scope":18314,"src":"53547:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18308,"name":"uint256","nodeType":"ElementaryTypeName","src":"53547:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18311,"mutability":"mutable","name":"error","nameLocation":"53589:5:28","nodeType":"VariableDeclaration","scope":18314,"src":"53573:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18310,"name":"string","nodeType":"ElementaryTypeName","src":"53573:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53461:139:28"},"returnParameters":{"id":18313,"nodeType":"ParameterList","parameters":[],"src":"53614:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18324,"nodeType":"FunctionDefinition","src":"53829:95:28","nodes":[],"documentation":{"id":18315,"nodeType":"StructuredDocumentation","src":"53621:203:28","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"53838:17:28","parameters":{"id":18322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18317,"mutability":"mutable","name":"left","nameLocation":"53864:4:28","nodeType":"VariableDeclaration","scope":18324,"src":"53856:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18316,"name":"uint256","nodeType":"ElementaryTypeName","src":"53856:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18319,"mutability":"mutable","name":"right","nameLocation":"53878:5:28","nodeType":"VariableDeclaration","scope":18324,"src":"53870:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18318,"name":"uint256","nodeType":"ElementaryTypeName","src":"53870:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18321,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"53893:15:28","nodeType":"VariableDeclaration","scope":18324,"src":"53885:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18320,"name":"uint256","nodeType":"ElementaryTypeName","src":"53885:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53855:54:28"},"returnParameters":{"id":18323,"nodeType":"ParameterList","parameters":[],"src":"53923:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18336,"nodeType":"FunctionDefinition","src":"54200:134:28","nodes":[],"documentation":{"id":18325,"nodeType":"StructuredDocumentation","src":"53930:265:28","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"54209:17:28","parameters":{"id":18334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18327,"mutability":"mutable","name":"left","nameLocation":"54235:4:28","nodeType":"VariableDeclaration","scope":18336,"src":"54227:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18326,"name":"uint256","nodeType":"ElementaryTypeName","src":"54227:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18329,"mutability":"mutable","name":"right","nameLocation":"54249:5:28","nodeType":"VariableDeclaration","scope":18336,"src":"54241:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18328,"name":"uint256","nodeType":"ElementaryTypeName","src":"54241:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18331,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"54264:15:28","nodeType":"VariableDeclaration","scope":18336,"src":"54256:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18330,"name":"uint256","nodeType":"ElementaryTypeName","src":"54256:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18333,"mutability":"mutable","name":"error","nameLocation":"54297:5:28","nodeType":"VariableDeclaration","scope":18336,"src":"54281:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18332,"name":"string","nodeType":"ElementaryTypeName","src":"54281:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54226:77:28"},"returnParameters":{"id":18335,"nodeType":"ParameterList","parameters":[],"src":"54333:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18346,"nodeType":"FunctionDefinition","src":"54547:93:28","nodes":[],"documentation":{"id":18337,"nodeType":"StructuredDocumentation","src":"54340:202:28","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"54556:17:28","parameters":{"id":18344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18339,"mutability":"mutable","name":"left","nameLocation":"54581:4:28","nodeType":"VariableDeclaration","scope":18346,"src":"54574:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18338,"name":"int256","nodeType":"ElementaryTypeName","src":"54574:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18341,"mutability":"mutable","name":"right","nameLocation":"54594:5:28","nodeType":"VariableDeclaration","scope":18346,"src":"54587:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18340,"name":"int256","nodeType":"ElementaryTypeName","src":"54587:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18343,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"54609:15:28","nodeType":"VariableDeclaration","scope":18346,"src":"54601:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18342,"name":"uint256","nodeType":"ElementaryTypeName","src":"54601:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54573:52:28"},"returnParameters":{"id":18345,"nodeType":"ParameterList","parameters":[],"src":"54639:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18358,"nodeType":"FunctionDefinition","src":"54915:132:28","nodes":[],"documentation":{"id":18347,"nodeType":"StructuredDocumentation","src":"54646:264:28","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"54924:17:28","parameters":{"id":18356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18349,"mutability":"mutable","name":"left","nameLocation":"54949:4:28","nodeType":"VariableDeclaration","scope":18358,"src":"54942:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18348,"name":"int256","nodeType":"ElementaryTypeName","src":"54942:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18351,"mutability":"mutable","name":"right","nameLocation":"54962:5:28","nodeType":"VariableDeclaration","scope":18358,"src":"54955:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18350,"name":"int256","nodeType":"ElementaryTypeName","src":"54955:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18353,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"54977:15:28","nodeType":"VariableDeclaration","scope":18358,"src":"54969:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18352,"name":"uint256","nodeType":"ElementaryTypeName","src":"54969:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18355,"mutability":"mutable","name":"error","nameLocation":"55010:5:28","nodeType":"VariableDeclaration","scope":18358,"src":"54994:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18354,"name":"string","nodeType":"ElementaryTypeName","src":"54994:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54941:75:28"},"returnParameters":{"id":18357,"nodeType":"ParameterList","parameters":[],"src":"55046:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18368,"nodeType":"FunctionDefinition","src":"55156:86:28","nodes":[],"documentation":{"id":18359,"nodeType":"StructuredDocumentation","src":"55053:98:28","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55165:15:28","parameters":{"id":18366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18361,"mutability":"mutable","name":"left","nameLocation":"55189:4:28","nodeType":"VariableDeclaration","scope":18368,"src":"55181:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18360,"name":"uint256","nodeType":"ElementaryTypeName","src":"55181:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18363,"mutability":"mutable","name":"right","nameLocation":"55203:5:28","nodeType":"VariableDeclaration","scope":18368,"src":"55195:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18362,"name":"uint256","nodeType":"ElementaryTypeName","src":"55195:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18365,"mutability":"mutable","name":"decimals","nameLocation":"55218:8:28","nodeType":"VariableDeclaration","scope":18368,"src":"55210:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18364,"name":"uint256","nodeType":"ElementaryTypeName","src":"55210:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55180:47:28"},"returnParameters":{"id":18367,"nodeType":"ParameterList","parameters":[],"src":"55241:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18380,"nodeType":"FunctionDefinition","src":"55413:109:28","nodes":[],"documentation":{"id":18369,"nodeType":"StructuredDocumentation","src":"55248:160:28","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55422:15:28","parameters":{"id":18378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18371,"mutability":"mutable","name":"left","nameLocation":"55446:4:28","nodeType":"VariableDeclaration","scope":18380,"src":"55438:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18370,"name":"uint256","nodeType":"ElementaryTypeName","src":"55438:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18373,"mutability":"mutable","name":"right","nameLocation":"55460:5:28","nodeType":"VariableDeclaration","scope":18380,"src":"55452:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18372,"name":"uint256","nodeType":"ElementaryTypeName","src":"55452:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18375,"mutability":"mutable","name":"decimals","nameLocation":"55475:8:28","nodeType":"VariableDeclaration","scope":18380,"src":"55467:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18374,"name":"uint256","nodeType":"ElementaryTypeName","src":"55467:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18377,"mutability":"mutable","name":"error","nameLocation":"55501:5:28","nodeType":"VariableDeclaration","scope":18380,"src":"55485:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18376,"name":"string","nodeType":"ElementaryTypeName","src":"55485:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55437:70:28"},"returnParameters":{"id":18379,"nodeType":"ParameterList","parameters":[],"src":"55521:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18390,"nodeType":"FunctionDefinition","src":"55630:84:28","nodes":[],"documentation":{"id":18381,"nodeType":"StructuredDocumentation","src":"55528:97:28","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55639:15:28","parameters":{"id":18388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18383,"mutability":"mutable","name":"left","nameLocation":"55662:4:28","nodeType":"VariableDeclaration","scope":18390,"src":"55655:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18382,"name":"int256","nodeType":"ElementaryTypeName","src":"55655:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18385,"mutability":"mutable","name":"right","nameLocation":"55675:5:28","nodeType":"VariableDeclaration","scope":18390,"src":"55668:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18384,"name":"int256","nodeType":"ElementaryTypeName","src":"55668:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18387,"mutability":"mutable","name":"decimals","nameLocation":"55690:8:28","nodeType":"VariableDeclaration","scope":18390,"src":"55682:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18386,"name":"uint256","nodeType":"ElementaryTypeName","src":"55682:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55654:45:28"},"returnParameters":{"id":18389,"nodeType":"ParameterList","parameters":[],"src":"55713:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18402,"nodeType":"FunctionDefinition","src":"55884:107:28","nodes":[],"documentation":{"id":18391,"nodeType":"StructuredDocumentation","src":"55720:159:28","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"55893:15:28","parameters":{"id":18400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18393,"mutability":"mutable","name":"left","nameLocation":"55916:4:28","nodeType":"VariableDeclaration","scope":18402,"src":"55909:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18392,"name":"int256","nodeType":"ElementaryTypeName","src":"55909:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18395,"mutability":"mutable","name":"right","nameLocation":"55929:5:28","nodeType":"VariableDeclaration","scope":18402,"src":"55922:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18394,"name":"int256","nodeType":"ElementaryTypeName","src":"55922:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18397,"mutability":"mutable","name":"decimals","nameLocation":"55944:8:28","nodeType":"VariableDeclaration","scope":18402,"src":"55936:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18396,"name":"uint256","nodeType":"ElementaryTypeName","src":"55936:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18399,"mutability":"mutable","name":"error","nameLocation":"55970:5:28","nodeType":"VariableDeclaration","scope":18402,"src":"55954:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18398,"name":"string","nodeType":"ElementaryTypeName","src":"55954:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55908:68:28"},"returnParameters":{"id":18401,"nodeType":"ParameterList","parameters":[],"src":"55990:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18410,"nodeType":"FunctionDefinition","src":"56047:55:28","nodes":[],"documentation":{"id":18403,"nodeType":"StructuredDocumentation","src":"55997:45:28","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56056:8:28","parameters":{"id":18408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18405,"mutability":"mutable","name":"left","nameLocation":"56070:4:28","nodeType":"VariableDeclaration","scope":18410,"src":"56065:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18404,"name":"bool","nodeType":"ElementaryTypeName","src":"56065:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18407,"mutability":"mutable","name":"right","nameLocation":"56081:5:28","nodeType":"VariableDeclaration","scope":18410,"src":"56076:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18406,"name":"bool","nodeType":"ElementaryTypeName","src":"56076:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"56064:23:28"},"returnParameters":{"id":18409,"nodeType":"ParameterList","parameters":[],"src":"56101:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18420,"nodeType":"FunctionDefinition","src":"56215:78:28","nodes":[],"documentation":{"id":18411,"nodeType":"StructuredDocumentation","src":"56108:102:28","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56224:8:28","parameters":{"id":18418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18413,"mutability":"mutable","name":"left","nameLocation":"56238:4:28","nodeType":"VariableDeclaration","scope":18420,"src":"56233:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18412,"name":"bool","nodeType":"ElementaryTypeName","src":"56233:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18415,"mutability":"mutable","name":"right","nameLocation":"56249:5:28","nodeType":"VariableDeclaration","scope":18420,"src":"56244:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18414,"name":"bool","nodeType":"ElementaryTypeName","src":"56244:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18417,"mutability":"mutable","name":"error","nameLocation":"56272:5:28","nodeType":"VariableDeclaration","scope":18420,"src":"56256:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18416,"name":"string","nodeType":"ElementaryTypeName","src":"56256:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56232:46:28"},"returnParameters":{"id":18419,"nodeType":"ParameterList","parameters":[],"src":"56292:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18428,"nodeType":"FunctionDefinition","src":"56351:77:28","nodes":[],"documentation":{"id":18421,"nodeType":"StructuredDocumentation","src":"56299:47:28","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56360:8:28","parameters":{"id":18426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18423,"mutability":"mutable","name":"left","nameLocation":"56385:4:28","nodeType":"VariableDeclaration","scope":18428,"src":"56369:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18422,"name":"string","nodeType":"ElementaryTypeName","src":"56369:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18425,"mutability":"mutable","name":"right","nameLocation":"56407:5:28","nodeType":"VariableDeclaration","scope":18428,"src":"56391:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18424,"name":"string","nodeType":"ElementaryTypeName","src":"56391:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56368:45:28"},"returnParameters":{"id":18427,"nodeType":"ParameterList","parameters":[],"src":"56427:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18438,"nodeType":"FunctionDefinition","src":"56543:100:28","nodes":[],"documentation":{"id":18429,"nodeType":"StructuredDocumentation","src":"56434:104:28","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56552:8:28","parameters":{"id":18436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18431,"mutability":"mutable","name":"left","nameLocation":"56577:4:28","nodeType":"VariableDeclaration","scope":18438,"src":"56561:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18430,"name":"string","nodeType":"ElementaryTypeName","src":"56561:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18433,"mutability":"mutable","name":"right","nameLocation":"56599:5:28","nodeType":"VariableDeclaration","scope":18438,"src":"56583:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18432,"name":"string","nodeType":"ElementaryTypeName","src":"56583:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18435,"mutability":"mutable","name":"error","nameLocation":"56622:5:28","nodeType":"VariableDeclaration","scope":18438,"src":"56606:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18434,"name":"string","nodeType":"ElementaryTypeName","src":"56606:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56560:68:28"},"returnParameters":{"id":18437,"nodeType":"ParameterList","parameters":[],"src":"56642:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18446,"nodeType":"FunctionDefinition","src":"56700:75:28","nodes":[],"documentation":{"id":18439,"nodeType":"StructuredDocumentation","src":"56649:46:28","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56709:8:28","parameters":{"id":18444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18441,"mutability":"mutable","name":"left","nameLocation":"56733:4:28","nodeType":"VariableDeclaration","scope":18446,"src":"56718:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18440,"name":"bytes","nodeType":"ElementaryTypeName","src":"56718:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18443,"mutability":"mutable","name":"right","nameLocation":"56754:5:28","nodeType":"VariableDeclaration","scope":18446,"src":"56739:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18442,"name":"bytes","nodeType":"ElementaryTypeName","src":"56739:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"56717:43:28"},"returnParameters":{"id":18445,"nodeType":"ParameterList","parameters":[],"src":"56774:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18456,"nodeType":"FunctionDefinition","src":"56889:98:28","nodes":[],"documentation":{"id":18447,"nodeType":"StructuredDocumentation","src":"56781:103:28","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"56898:8:28","parameters":{"id":18454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18449,"mutability":"mutable","name":"left","nameLocation":"56922:4:28","nodeType":"VariableDeclaration","scope":18456,"src":"56907:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18448,"name":"bytes","nodeType":"ElementaryTypeName","src":"56907:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18451,"mutability":"mutable","name":"right","nameLocation":"56943:5:28","nodeType":"VariableDeclaration","scope":18456,"src":"56928:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18450,"name":"bytes","nodeType":"ElementaryTypeName","src":"56928:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18453,"mutability":"mutable","name":"error","nameLocation":"56966:5:28","nodeType":"VariableDeclaration","scope":18456,"src":"56950:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18452,"name":"string","nodeType":"ElementaryTypeName","src":"56950:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56906:66:28"},"returnParameters":{"id":18455,"nodeType":"ParameterList","parameters":[],"src":"56986:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18466,"nodeType":"FunctionDefinition","src":"57053:77:28","nodes":[],"documentation":{"id":18457,"nodeType":"StructuredDocumentation","src":"56993:55:28","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57062:8:28","parameters":{"id":18464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18460,"mutability":"mutable","name":"left","nameLocation":"57087:4:28","nodeType":"VariableDeclaration","scope":18466,"src":"57071:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18458,"name":"bool","nodeType":"ElementaryTypeName","src":"57071:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18459,"nodeType":"ArrayTypeName","src":"57071:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":18463,"mutability":"mutable","name":"right","nameLocation":"57109:5:28","nodeType":"VariableDeclaration","scope":18466,"src":"57093:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18461,"name":"bool","nodeType":"ElementaryTypeName","src":"57093:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18462,"nodeType":"ArrayTypeName","src":"57093:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"57070:45:28"},"returnParameters":{"id":18465,"nodeType":"ParameterList","parameters":[],"src":"57129:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18478,"nodeType":"FunctionDefinition","src":"57253:100:28","nodes":[],"documentation":{"id":18467,"nodeType":"StructuredDocumentation","src":"57136:112:28","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57262:8:28","parameters":{"id":18476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18470,"mutability":"mutable","name":"left","nameLocation":"57287:4:28","nodeType":"VariableDeclaration","scope":18478,"src":"57271:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18468,"name":"bool","nodeType":"ElementaryTypeName","src":"57271:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18469,"nodeType":"ArrayTypeName","src":"57271:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":18473,"mutability":"mutable","name":"right","nameLocation":"57309:5:28","nodeType":"VariableDeclaration","scope":18478,"src":"57293:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18471,"name":"bool","nodeType":"ElementaryTypeName","src":"57293:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18472,"nodeType":"ArrayTypeName","src":"57293:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":18475,"mutability":"mutable","name":"error","nameLocation":"57332:5:28","nodeType":"VariableDeclaration","scope":18478,"src":"57316:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18474,"name":"string","nodeType":"ElementaryTypeName","src":"57316:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57270:68:28"},"returnParameters":{"id":18477,"nodeType":"ParameterList","parameters":[],"src":"57352:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18488,"nodeType":"FunctionDefinition","src":"57421:83:28","nodes":[],"documentation":{"id":18479,"nodeType":"StructuredDocumentation","src":"57359:57:28","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57430:8:28","parameters":{"id":18486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18482,"mutability":"mutable","name":"left","nameLocation":"57458:4:28","nodeType":"VariableDeclaration","scope":18488,"src":"57439:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18480,"name":"uint256","nodeType":"ElementaryTypeName","src":"57439:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18481,"nodeType":"ArrayTypeName","src":"57439:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18485,"mutability":"mutable","name":"right","nameLocation":"57483:5:28","nodeType":"VariableDeclaration","scope":18488,"src":"57464:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18483,"name":"uint256","nodeType":"ElementaryTypeName","src":"57464:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18484,"nodeType":"ArrayTypeName","src":"57464:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"57438:51:28"},"returnParameters":{"id":18487,"nodeType":"ParameterList","parameters":[],"src":"57503:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18500,"nodeType":"FunctionDefinition","src":"57630:106:28","nodes":[],"documentation":{"id":18489,"nodeType":"StructuredDocumentation","src":"57510:115:28","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57639:8:28","parameters":{"id":18498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18492,"mutability":"mutable","name":"left","nameLocation":"57667:4:28","nodeType":"VariableDeclaration","scope":18500,"src":"57648:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18490,"name":"uint256","nodeType":"ElementaryTypeName","src":"57648:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18491,"nodeType":"ArrayTypeName","src":"57648:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18495,"mutability":"mutable","name":"right","nameLocation":"57692:5:28","nodeType":"VariableDeclaration","scope":18500,"src":"57673:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18493,"name":"uint256","nodeType":"ElementaryTypeName","src":"57673:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18494,"nodeType":"ArrayTypeName","src":"57673:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18497,"mutability":"mutable","name":"error","nameLocation":"57715:5:28","nodeType":"VariableDeclaration","scope":18500,"src":"57699:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18496,"name":"string","nodeType":"ElementaryTypeName","src":"57699:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57647:74:28"},"returnParameters":{"id":18499,"nodeType":"ParameterList","parameters":[],"src":"57735:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18510,"nodeType":"FunctionDefinition","src":"57804:81:28","nodes":[],"documentation":{"id":18501,"nodeType":"StructuredDocumentation","src":"57742:57:28","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"57813:8:28","parameters":{"id":18508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18504,"mutability":"mutable","name":"left","nameLocation":"57840:4:28","nodeType":"VariableDeclaration","scope":18510,"src":"57822:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18502,"name":"int256","nodeType":"ElementaryTypeName","src":"57822:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18503,"nodeType":"ArrayTypeName","src":"57822:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18507,"mutability":"mutable","name":"right","nameLocation":"57864:5:28","nodeType":"VariableDeclaration","scope":18510,"src":"57846:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18505,"name":"int256","nodeType":"ElementaryTypeName","src":"57846:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18506,"nodeType":"ArrayTypeName","src":"57846:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"57821:49:28"},"returnParameters":{"id":18509,"nodeType":"ParameterList","parameters":[],"src":"57884:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18522,"nodeType":"FunctionDefinition","src":"58010:104:28","nodes":[],"documentation":{"id":18511,"nodeType":"StructuredDocumentation","src":"57891:114:28","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58019:8:28","parameters":{"id":18520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18514,"mutability":"mutable","name":"left","nameLocation":"58046:4:28","nodeType":"VariableDeclaration","scope":18522,"src":"58028:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18512,"name":"int256","nodeType":"ElementaryTypeName","src":"58028:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18513,"nodeType":"ArrayTypeName","src":"58028:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18517,"mutability":"mutable","name":"right","nameLocation":"58070:5:28","nodeType":"VariableDeclaration","scope":18522,"src":"58052:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18515,"name":"int256","nodeType":"ElementaryTypeName","src":"58052:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18516,"nodeType":"ArrayTypeName","src":"58052:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18519,"mutability":"mutable","name":"error","nameLocation":"58093:5:28","nodeType":"VariableDeclaration","scope":18522,"src":"58077:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18518,"name":"string","nodeType":"ElementaryTypeName","src":"58077:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58027:72:28"},"returnParameters":{"id":18521,"nodeType":"ParameterList","parameters":[],"src":"58113:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18530,"nodeType":"FunctionDefinition","src":"58173:61:28","nodes":[],"documentation":{"id":18523,"nodeType":"StructuredDocumentation","src":"58120:48:28","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58182:8:28","parameters":{"id":18528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18525,"mutability":"mutable","name":"left","nameLocation":"58199:4:28","nodeType":"VariableDeclaration","scope":18530,"src":"58191:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18524,"name":"uint256","nodeType":"ElementaryTypeName","src":"58191:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18527,"mutability":"mutable","name":"right","nameLocation":"58213:5:28","nodeType":"VariableDeclaration","scope":18530,"src":"58205:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18526,"name":"uint256","nodeType":"ElementaryTypeName","src":"58205:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58190:29:28"},"returnParameters":{"id":18529,"nodeType":"ParameterList","parameters":[],"src":"58233:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18540,"nodeType":"FunctionDefinition","src":"58303:83:28","nodes":[],"documentation":{"id":18531,"nodeType":"StructuredDocumentation","src":"58240:58:28","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58312:8:28","parameters":{"id":18538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18534,"mutability":"mutable","name":"left","nameLocation":"58340:4:28","nodeType":"VariableDeclaration","scope":18540,"src":"58321:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18532,"name":"address","nodeType":"ElementaryTypeName","src":"58321:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18533,"nodeType":"ArrayTypeName","src":"58321:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18537,"mutability":"mutable","name":"right","nameLocation":"58365:5:28","nodeType":"VariableDeclaration","scope":18540,"src":"58346:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18535,"name":"address","nodeType":"ElementaryTypeName","src":"58346:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18536,"nodeType":"ArrayTypeName","src":"58346:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"58320:51:28"},"returnParameters":{"id":18539,"nodeType":"ParameterList","parameters":[],"src":"58385:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18552,"nodeType":"FunctionDefinition","src":"58512:106:28","nodes":[],"documentation":{"id":18541,"nodeType":"StructuredDocumentation","src":"58392:115:28","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58521:8:28","parameters":{"id":18550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18544,"mutability":"mutable","name":"left","nameLocation":"58549:4:28","nodeType":"VariableDeclaration","scope":18552,"src":"58530:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18542,"name":"address","nodeType":"ElementaryTypeName","src":"58530:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18543,"nodeType":"ArrayTypeName","src":"58530:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18547,"mutability":"mutable","name":"right","nameLocation":"58574:5:28","nodeType":"VariableDeclaration","scope":18552,"src":"58555:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18545,"name":"address","nodeType":"ElementaryTypeName","src":"58555:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18546,"nodeType":"ArrayTypeName","src":"58555:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18549,"mutability":"mutable","name":"error","nameLocation":"58597:5:28","nodeType":"VariableDeclaration","scope":18552,"src":"58581:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18548,"name":"string","nodeType":"ElementaryTypeName","src":"58581:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58529:74:28"},"returnParameters":{"id":18551,"nodeType":"ParameterList","parameters":[],"src":"58617:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18562,"nodeType":"FunctionDefinition","src":"58687:83:28","nodes":[],"documentation":{"id":18553,"nodeType":"StructuredDocumentation","src":"58624:58:28","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58696:8:28","parameters":{"id":18560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18556,"mutability":"mutable","name":"left","nameLocation":"58724:4:28","nodeType":"VariableDeclaration","scope":18562,"src":"58705:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58705:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18555,"nodeType":"ArrayTypeName","src":"58705:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18559,"mutability":"mutable","name":"right","nameLocation":"58749:5:28","nodeType":"VariableDeclaration","scope":18562,"src":"58730:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58730:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18558,"nodeType":"ArrayTypeName","src":"58730:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"58704:51:28"},"returnParameters":{"id":18561,"nodeType":"ParameterList","parameters":[],"src":"58769:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18574,"nodeType":"FunctionDefinition","src":"58896:106:28","nodes":[],"documentation":{"id":18563,"nodeType":"StructuredDocumentation","src":"58776:115:28","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"58905:8:28","parameters":{"id":18572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18566,"mutability":"mutable","name":"left","nameLocation":"58933:4:28","nodeType":"VariableDeclaration","scope":18574,"src":"58914:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58914:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18565,"nodeType":"ArrayTypeName","src":"58914:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18569,"mutability":"mutable","name":"right","nameLocation":"58958:5:28","nodeType":"VariableDeclaration","scope":18574,"src":"58939:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58939:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18568,"nodeType":"ArrayTypeName","src":"58939:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18571,"mutability":"mutable","name":"error","nameLocation":"58981:5:28","nodeType":"VariableDeclaration","scope":18574,"src":"58965:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18570,"name":"string","nodeType":"ElementaryTypeName","src":"58965:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58913:74:28"},"returnParameters":{"id":18573,"nodeType":"ParameterList","parameters":[],"src":"59001:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18584,"nodeType":"FunctionDefinition","src":"59070:81:28","nodes":[],"documentation":{"id":18575,"nodeType":"StructuredDocumentation","src":"59008:57:28","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59079:8:28","parameters":{"id":18582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18578,"mutability":"mutable","name":"left","nameLocation":"59106:4:28","nodeType":"VariableDeclaration","scope":18584,"src":"59088:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18576,"name":"string","nodeType":"ElementaryTypeName","src":"59088:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18577,"nodeType":"ArrayTypeName","src":"59088:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18581,"mutability":"mutable","name":"right","nameLocation":"59130:5:28","nodeType":"VariableDeclaration","scope":18584,"src":"59112:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18579,"name":"string","nodeType":"ElementaryTypeName","src":"59112:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18580,"nodeType":"ArrayTypeName","src":"59112:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"59087:49:28"},"returnParameters":{"id":18583,"nodeType":"ParameterList","parameters":[],"src":"59150:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18596,"nodeType":"FunctionDefinition","src":"59276:104:28","nodes":[],"documentation":{"id":18585,"nodeType":"StructuredDocumentation","src":"59157:114:28","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59285:8:28","parameters":{"id":18594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18588,"mutability":"mutable","name":"left","nameLocation":"59312:4:28","nodeType":"VariableDeclaration","scope":18596,"src":"59294:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18586,"name":"string","nodeType":"ElementaryTypeName","src":"59294:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18587,"nodeType":"ArrayTypeName","src":"59294:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18591,"mutability":"mutable","name":"right","nameLocation":"59336:5:28","nodeType":"VariableDeclaration","scope":18596,"src":"59318:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18589,"name":"string","nodeType":"ElementaryTypeName","src":"59318:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18590,"nodeType":"ArrayTypeName","src":"59318:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18593,"mutability":"mutable","name":"error","nameLocation":"59359:5:28","nodeType":"VariableDeclaration","scope":18596,"src":"59343:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18592,"name":"string","nodeType":"ElementaryTypeName","src":"59343:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59293:72:28"},"returnParameters":{"id":18595,"nodeType":"ParameterList","parameters":[],"src":"59379:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18606,"nodeType":"FunctionDefinition","src":"59447:79:28","nodes":[],"documentation":{"id":18597,"nodeType":"StructuredDocumentation","src":"59386:56:28","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59456:8:28","parameters":{"id":18604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18600,"mutability":"mutable","name":"left","nameLocation":"59482:4:28","nodeType":"VariableDeclaration","scope":18606,"src":"59465:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18598,"name":"bytes","nodeType":"ElementaryTypeName","src":"59465:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18599,"nodeType":"ArrayTypeName","src":"59465:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18603,"mutability":"mutable","name":"right","nameLocation":"59505:5:28","nodeType":"VariableDeclaration","scope":18606,"src":"59488:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18601,"name":"bytes","nodeType":"ElementaryTypeName","src":"59488:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18602,"nodeType":"ArrayTypeName","src":"59488:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"59464:47:28"},"returnParameters":{"id":18605,"nodeType":"ParameterList","parameters":[],"src":"59525:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18618,"nodeType":"FunctionDefinition","src":"59650:102:28","nodes":[],"documentation":{"id":18607,"nodeType":"StructuredDocumentation","src":"59532:113:28","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59659:8:28","parameters":{"id":18616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18610,"mutability":"mutable","name":"left","nameLocation":"59685:4:28","nodeType":"VariableDeclaration","scope":18618,"src":"59668:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18608,"name":"bytes","nodeType":"ElementaryTypeName","src":"59668:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18609,"nodeType":"ArrayTypeName","src":"59668:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18613,"mutability":"mutable","name":"right","nameLocation":"59708:5:28","nodeType":"VariableDeclaration","scope":18618,"src":"59691:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18611,"name":"bytes","nodeType":"ElementaryTypeName","src":"59691:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18612,"nodeType":"ArrayTypeName","src":"59691:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18615,"mutability":"mutable","name":"error","nameLocation":"59731:5:28","nodeType":"VariableDeclaration","scope":18618,"src":"59715:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18614,"name":"string","nodeType":"ElementaryTypeName","src":"59715:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59667:70:28"},"returnParameters":{"id":18617,"nodeType":"ParameterList","parameters":[],"src":"59751:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18628,"nodeType":"FunctionDefinition","src":"59868:84:28","nodes":[],"documentation":{"id":18619,"nodeType":"StructuredDocumentation","src":"59758:105:28","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"59877:8:28","parameters":{"id":18626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18621,"mutability":"mutable","name":"left","nameLocation":"59894:4:28","nodeType":"VariableDeclaration","scope":18628,"src":"59886:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18620,"name":"uint256","nodeType":"ElementaryTypeName","src":"59886:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18623,"mutability":"mutable","name":"right","nameLocation":"59908:5:28","nodeType":"VariableDeclaration","scope":18628,"src":"59900:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18622,"name":"uint256","nodeType":"ElementaryTypeName","src":"59900:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18625,"mutability":"mutable","name":"error","nameLocation":"59931:5:28","nodeType":"VariableDeclaration","scope":18628,"src":"59915:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18624,"name":"string","nodeType":"ElementaryTypeName","src":"59915:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59885:52:28"},"returnParameters":{"id":18627,"nodeType":"ParameterList","parameters":[],"src":"59951:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18636,"nodeType":"FunctionDefinition","src":"60010:59:28","nodes":[],"documentation":{"id":18629,"nodeType":"StructuredDocumentation","src":"59958:47:28","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60019:8:28","parameters":{"id":18634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18631,"mutability":"mutable","name":"left","nameLocation":"60035:4:28","nodeType":"VariableDeclaration","scope":18636,"src":"60028:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18630,"name":"int256","nodeType":"ElementaryTypeName","src":"60028:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18633,"mutability":"mutable","name":"right","nameLocation":"60048:5:28","nodeType":"VariableDeclaration","scope":18636,"src":"60041:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18632,"name":"int256","nodeType":"ElementaryTypeName","src":"60041:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"60027:27:28"},"returnParameters":{"id":18635,"nodeType":"ParameterList","parameters":[],"src":"60068:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18646,"nodeType":"FunctionDefinition","src":"60184:82:28","nodes":[],"documentation":{"id":18637,"nodeType":"StructuredDocumentation","src":"60075:104:28","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60193:8:28","parameters":{"id":18644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18639,"mutability":"mutable","name":"left","nameLocation":"60209:4:28","nodeType":"VariableDeclaration","scope":18646,"src":"60202:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18638,"name":"int256","nodeType":"ElementaryTypeName","src":"60202:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18641,"mutability":"mutable","name":"right","nameLocation":"60222:5:28","nodeType":"VariableDeclaration","scope":18646,"src":"60215:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18640,"name":"int256","nodeType":"ElementaryTypeName","src":"60215:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18643,"mutability":"mutable","name":"error","nameLocation":"60245:5:28","nodeType":"VariableDeclaration","scope":18646,"src":"60229:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18642,"name":"string","nodeType":"ElementaryTypeName","src":"60229:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60201:50:28"},"returnParameters":{"id":18645,"nodeType":"ParameterList","parameters":[],"src":"60265:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18654,"nodeType":"FunctionDefinition","src":"60325:61:28","nodes":[],"documentation":{"id":18647,"nodeType":"StructuredDocumentation","src":"60272:48:28","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60334:8:28","parameters":{"id":18652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18649,"mutability":"mutable","name":"left","nameLocation":"60351:4:28","nodeType":"VariableDeclaration","scope":18654,"src":"60343:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18648,"name":"address","nodeType":"ElementaryTypeName","src":"60343:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18651,"mutability":"mutable","name":"right","nameLocation":"60365:5:28","nodeType":"VariableDeclaration","scope":18654,"src":"60357:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18650,"name":"address","nodeType":"ElementaryTypeName","src":"60357:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"60342:29:28"},"returnParameters":{"id":18653,"nodeType":"ParameterList","parameters":[],"src":"60385:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18664,"nodeType":"FunctionDefinition","src":"60502:84:28","nodes":[],"documentation":{"id":18655,"nodeType":"StructuredDocumentation","src":"60392:105:28","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60511:8:28","parameters":{"id":18662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18657,"mutability":"mutable","name":"left","nameLocation":"60528:4:28","nodeType":"VariableDeclaration","scope":18664,"src":"60520:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18656,"name":"address","nodeType":"ElementaryTypeName","src":"60520:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18659,"mutability":"mutable","name":"right","nameLocation":"60542:5:28","nodeType":"VariableDeclaration","scope":18664,"src":"60534:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18658,"name":"address","nodeType":"ElementaryTypeName","src":"60534:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18661,"mutability":"mutable","name":"error","nameLocation":"60565:5:28","nodeType":"VariableDeclaration","scope":18664,"src":"60549:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18660,"name":"string","nodeType":"ElementaryTypeName","src":"60549:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60519:52:28"},"returnParameters":{"id":18663,"nodeType":"ParameterList","parameters":[],"src":"60585:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18672,"nodeType":"FunctionDefinition","src":"60645:61:28","nodes":[],"documentation":{"id":18665,"nodeType":"StructuredDocumentation","src":"60592:48:28","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60654:8:28","parameters":{"id":18670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18667,"mutability":"mutable","name":"left","nameLocation":"60671:4:28","nodeType":"VariableDeclaration","scope":18672,"src":"60663:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60663:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18669,"mutability":"mutable","name":"right","nameLocation":"60685:5:28","nodeType":"VariableDeclaration","scope":18672,"src":"60677:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60677:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"60662:29:28"},"returnParameters":{"id":18671,"nodeType":"ParameterList","parameters":[],"src":"60705:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18682,"nodeType":"FunctionDefinition","src":"60822:84:28","nodes":[],"documentation":{"id":18673,"nodeType":"StructuredDocumentation","src":"60712:105:28","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"60831:8:28","parameters":{"id":18680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18675,"mutability":"mutable","name":"left","nameLocation":"60848:4:28","nodeType":"VariableDeclaration","scope":18682,"src":"60840:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60840:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18677,"mutability":"mutable","name":"right","nameLocation":"60862:5:28","nodeType":"VariableDeclaration","scope":18682,"src":"60854:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60854:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18679,"mutability":"mutable","name":"error","nameLocation":"60885:5:28","nodeType":"VariableDeclaration","scope":18682,"src":"60869:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18678,"name":"string","nodeType":"ElementaryTypeName","src":"60869:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60839:52:28"},"returnParameters":{"id":18681,"nodeType":"ParameterList","parameters":[],"src":"60905:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18688,"nodeType":"FunctionDefinition","src":"60963:51:28","nodes":[],"documentation":{"id":18683,"nodeType":"StructuredDocumentation","src":"60912:46:28","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"60972:11:28","parameters":{"id":18686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18685,"mutability":"mutable","name":"condition","nameLocation":"60989:9:28","nodeType":"VariableDeclaration","scope":18688,"src":"60984:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18684,"name":"bool","nodeType":"ElementaryTypeName","src":"60984:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"60983:16:28"},"returnParameters":{"id":18687,"nodeType":"ParameterList","parameters":[],"src":"61013:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18696,"nodeType":"FunctionDefinition","src":"61128:74:28","nodes":[],"documentation":{"id":18689,"nodeType":"StructuredDocumentation","src":"61020:103:28","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"61137:11:28","parameters":{"id":18694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18691,"mutability":"mutable","name":"condition","nameLocation":"61154:9:28","nodeType":"VariableDeclaration","scope":18696,"src":"61149:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18690,"name":"bool","nodeType":"ElementaryTypeName","src":"61149:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18693,"mutability":"mutable","name":"error","nameLocation":"61181:5:28","nodeType":"VariableDeclaration","scope":18696,"src":"61165:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18692,"name":"string","nodeType":"ElementaryTypeName","src":"61165:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61148:39:28"},"returnParameters":{"id":18695,"nodeType":"ParameterList","parameters":[],"src":"61201:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18706,"nodeType":"FunctionDefinition","src":"61363:86:28","nodes":[],"documentation":{"id":18697,"nodeType":"StructuredDocumentation","src":"61208:150:28","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61372:15:28","parameters":{"id":18704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18699,"mutability":"mutable","name":"left","nameLocation":"61396:4:28","nodeType":"VariableDeclaration","scope":18706,"src":"61388:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18698,"name":"uint256","nodeType":"ElementaryTypeName","src":"61388:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18701,"mutability":"mutable","name":"right","nameLocation":"61410:5:28","nodeType":"VariableDeclaration","scope":18706,"src":"61402:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18700,"name":"uint256","nodeType":"ElementaryTypeName","src":"61402:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18703,"mutability":"mutable","name":"decimals","nameLocation":"61425:8:28","nodeType":"VariableDeclaration","scope":18706,"src":"61417:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18702,"name":"uint256","nodeType":"ElementaryTypeName","src":"61417:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61387:47:28"},"returnParameters":{"id":18705,"nodeType":"ParameterList","parameters":[],"src":"61448:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18718,"nodeType":"FunctionDefinition","src":"61664:109:28","nodes":[],"documentation":{"id":18707,"nodeType":"StructuredDocumentation","src":"61455:204:28","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61673:15:28","parameters":{"id":18716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18709,"mutability":"mutable","name":"left","nameLocation":"61697:4:28","nodeType":"VariableDeclaration","scope":18718,"src":"61689:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18708,"name":"uint256","nodeType":"ElementaryTypeName","src":"61689:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18711,"mutability":"mutable","name":"right","nameLocation":"61711:5:28","nodeType":"VariableDeclaration","scope":18718,"src":"61703:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18710,"name":"uint256","nodeType":"ElementaryTypeName","src":"61703:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18713,"mutability":"mutable","name":"decimals","nameLocation":"61726:8:28","nodeType":"VariableDeclaration","scope":18718,"src":"61718:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18712,"name":"uint256","nodeType":"ElementaryTypeName","src":"61718:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18715,"mutability":"mutable","name":"error","nameLocation":"61752:5:28","nodeType":"VariableDeclaration","scope":18718,"src":"61736:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18714,"name":"string","nodeType":"ElementaryTypeName","src":"61736:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61688:70:28"},"returnParameters":{"id":18717,"nodeType":"ParameterList","parameters":[],"src":"61772:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18728,"nodeType":"FunctionDefinition","src":"61933:84:28","nodes":[],"documentation":{"id":18719,"nodeType":"StructuredDocumentation","src":"61779:149:28","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"61942:15:28","parameters":{"id":18726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18721,"mutability":"mutable","name":"left","nameLocation":"61965:4:28","nodeType":"VariableDeclaration","scope":18728,"src":"61958:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18720,"name":"int256","nodeType":"ElementaryTypeName","src":"61958:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18723,"mutability":"mutable","name":"right","nameLocation":"61978:5:28","nodeType":"VariableDeclaration","scope":18728,"src":"61971:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18722,"name":"int256","nodeType":"ElementaryTypeName","src":"61971:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18725,"mutability":"mutable","name":"decimals","nameLocation":"61993:8:28","nodeType":"VariableDeclaration","scope":18728,"src":"61985:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18724,"name":"uint256","nodeType":"ElementaryTypeName","src":"61985:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61957:45:28"},"returnParameters":{"id":18727,"nodeType":"ParameterList","parameters":[],"src":"62016:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18740,"nodeType":"FunctionDefinition","src":"62231:107:28","nodes":[],"documentation":{"id":18729,"nodeType":"StructuredDocumentation","src":"62023:203:28","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"62240:15:28","parameters":{"id":18738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18731,"mutability":"mutable","name":"left","nameLocation":"62263:4:28","nodeType":"VariableDeclaration","scope":18740,"src":"62256:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18730,"name":"int256","nodeType":"ElementaryTypeName","src":"62256:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18733,"mutability":"mutable","name":"right","nameLocation":"62276:5:28","nodeType":"VariableDeclaration","scope":18740,"src":"62269:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18732,"name":"int256","nodeType":"ElementaryTypeName","src":"62269:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18735,"mutability":"mutable","name":"decimals","nameLocation":"62291:8:28","nodeType":"VariableDeclaration","scope":18740,"src":"62283:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18734,"name":"uint256","nodeType":"ElementaryTypeName","src":"62283:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18737,"mutability":"mutable","name":"error","nameLocation":"62317:5:28","nodeType":"VariableDeclaration","scope":18740,"src":"62301:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18736,"name":"string","nodeType":"ElementaryTypeName","src":"62301:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62255:68:28"},"returnParameters":{"id":18739,"nodeType":"ParameterList","parameters":[],"src":"62337:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18748,"nodeType":"FunctionDefinition","src":"62442:61:28","nodes":[],"documentation":{"id":18741,"nodeType":"StructuredDocumentation","src":"62344:93:28","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62451:8:28","parameters":{"id":18746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18743,"mutability":"mutable","name":"left","nameLocation":"62468:4:28","nodeType":"VariableDeclaration","scope":18748,"src":"62460:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18742,"name":"uint256","nodeType":"ElementaryTypeName","src":"62460:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18745,"mutability":"mutable","name":"right","nameLocation":"62482:5:28","nodeType":"VariableDeclaration","scope":18748,"src":"62474:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18744,"name":"uint256","nodeType":"ElementaryTypeName","src":"62474:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62459:29:28"},"returnParameters":{"id":18747,"nodeType":"ParameterList","parameters":[],"src":"62502:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18758,"nodeType":"FunctionDefinition","src":"62669:84:28","nodes":[],"documentation":{"id":18749,"nodeType":"StructuredDocumentation","src":"62509:155:28","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62678:8:28","parameters":{"id":18756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18751,"mutability":"mutable","name":"left","nameLocation":"62695:4:28","nodeType":"VariableDeclaration","scope":18758,"src":"62687:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18750,"name":"uint256","nodeType":"ElementaryTypeName","src":"62687:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18753,"mutability":"mutable","name":"right","nameLocation":"62709:5:28","nodeType":"VariableDeclaration","scope":18758,"src":"62701:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18752,"name":"uint256","nodeType":"ElementaryTypeName","src":"62701:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18755,"mutability":"mutable","name":"error","nameLocation":"62732:5:28","nodeType":"VariableDeclaration","scope":18758,"src":"62716:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18754,"name":"string","nodeType":"ElementaryTypeName","src":"62716:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62686:52:28"},"returnParameters":{"id":18757,"nodeType":"ParameterList","parameters":[],"src":"62752:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18766,"nodeType":"FunctionDefinition","src":"62856:59:28","nodes":[],"documentation":{"id":18759,"nodeType":"StructuredDocumentation","src":"62759:92:28","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"62865:8:28","parameters":{"id":18764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18761,"mutability":"mutable","name":"left","nameLocation":"62881:4:28","nodeType":"VariableDeclaration","scope":18766,"src":"62874:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18760,"name":"int256","nodeType":"ElementaryTypeName","src":"62874:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18763,"mutability":"mutable","name":"right","nameLocation":"62894:5:28","nodeType":"VariableDeclaration","scope":18766,"src":"62887:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18762,"name":"int256","nodeType":"ElementaryTypeName","src":"62887:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"62873:27:28"},"returnParameters":{"id":18765,"nodeType":"ParameterList","parameters":[],"src":"62914:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18776,"nodeType":"FunctionDefinition","src":"63080:82:28","nodes":[],"documentation":{"id":18767,"nodeType":"StructuredDocumentation","src":"62921:154:28","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"63089:8:28","parameters":{"id":18774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18769,"mutability":"mutable","name":"left","nameLocation":"63105:4:28","nodeType":"VariableDeclaration","scope":18776,"src":"63098:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18768,"name":"int256","nodeType":"ElementaryTypeName","src":"63098:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18771,"mutability":"mutable","name":"right","nameLocation":"63118:5:28","nodeType":"VariableDeclaration","scope":18776,"src":"63111:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18770,"name":"int256","nodeType":"ElementaryTypeName","src":"63111:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18773,"mutability":"mutable","name":"error","nameLocation":"63141:5:28","nodeType":"VariableDeclaration","scope":18776,"src":"63125:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18772,"name":"string","nodeType":"ElementaryTypeName","src":"63125:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63097:50:28"},"returnParameters":{"id":18775,"nodeType":"ParameterList","parameters":[],"src":"63161:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18786,"nodeType":"FunctionDefinition","src":"63311:86:28","nodes":[],"documentation":{"id":18777,"nodeType":"StructuredDocumentation","src":"63168:138:28","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63320:15:28","parameters":{"id":18784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18779,"mutability":"mutable","name":"left","nameLocation":"63344:4:28","nodeType":"VariableDeclaration","scope":18786,"src":"63336:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18778,"name":"uint256","nodeType":"ElementaryTypeName","src":"63336:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18781,"mutability":"mutable","name":"right","nameLocation":"63358:5:28","nodeType":"VariableDeclaration","scope":18786,"src":"63350:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18780,"name":"uint256","nodeType":"ElementaryTypeName","src":"63350:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18783,"mutability":"mutable","name":"decimals","nameLocation":"63373:8:28","nodeType":"VariableDeclaration","scope":18786,"src":"63365:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18782,"name":"uint256","nodeType":"ElementaryTypeName","src":"63365:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63335:47:28"},"returnParameters":{"id":18785,"nodeType":"ParameterList","parameters":[],"src":"63396:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18798,"nodeType":"FunctionDefinition","src":"63600:109:28","nodes":[],"documentation":{"id":18787,"nodeType":"StructuredDocumentation","src":"63403:192:28","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63609:15:28","parameters":{"id":18796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18789,"mutability":"mutable","name":"left","nameLocation":"63633:4:28","nodeType":"VariableDeclaration","scope":18798,"src":"63625:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18788,"name":"uint256","nodeType":"ElementaryTypeName","src":"63625:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18791,"mutability":"mutable","name":"right","nameLocation":"63647:5:28","nodeType":"VariableDeclaration","scope":18798,"src":"63639:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18790,"name":"uint256","nodeType":"ElementaryTypeName","src":"63639:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18793,"mutability":"mutable","name":"decimals","nameLocation":"63662:8:28","nodeType":"VariableDeclaration","scope":18798,"src":"63654:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18792,"name":"uint256","nodeType":"ElementaryTypeName","src":"63654:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18795,"mutability":"mutable","name":"error","nameLocation":"63688:5:28","nodeType":"VariableDeclaration","scope":18798,"src":"63672:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18794,"name":"string","nodeType":"ElementaryTypeName","src":"63672:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63624:70:28"},"returnParameters":{"id":18797,"nodeType":"ParameterList","parameters":[],"src":"63708:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18808,"nodeType":"FunctionDefinition","src":"63857:84:28","nodes":[],"documentation":{"id":18799,"nodeType":"StructuredDocumentation","src":"63715:137:28","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"63866:15:28","parameters":{"id":18806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18801,"mutability":"mutable","name":"left","nameLocation":"63889:4:28","nodeType":"VariableDeclaration","scope":18808,"src":"63882:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18800,"name":"int256","nodeType":"ElementaryTypeName","src":"63882:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18803,"mutability":"mutable","name":"right","nameLocation":"63902:5:28","nodeType":"VariableDeclaration","scope":18808,"src":"63895:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18802,"name":"int256","nodeType":"ElementaryTypeName","src":"63895:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18805,"mutability":"mutable","name":"decimals","nameLocation":"63917:8:28","nodeType":"VariableDeclaration","scope":18808,"src":"63909:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18804,"name":"uint256","nodeType":"ElementaryTypeName","src":"63909:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63881:45:28"},"returnParameters":{"id":18807,"nodeType":"ParameterList","parameters":[],"src":"63940:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18820,"nodeType":"FunctionDefinition","src":"64143:107:28","nodes":[],"documentation":{"id":18809,"nodeType":"StructuredDocumentation","src":"63947:191:28","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"64152:15:28","parameters":{"id":18818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18811,"mutability":"mutable","name":"left","nameLocation":"64175:4:28","nodeType":"VariableDeclaration","scope":18820,"src":"64168:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18810,"name":"int256","nodeType":"ElementaryTypeName","src":"64168:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18813,"mutability":"mutable","name":"right","nameLocation":"64188:5:28","nodeType":"VariableDeclaration","scope":18820,"src":"64181:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18812,"name":"int256","nodeType":"ElementaryTypeName","src":"64181:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18815,"mutability":"mutable","name":"decimals","nameLocation":"64203:8:28","nodeType":"VariableDeclaration","scope":18820,"src":"64195:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18814,"name":"uint256","nodeType":"ElementaryTypeName","src":"64195:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18817,"mutability":"mutable","name":"error","nameLocation":"64229:5:28","nodeType":"VariableDeclaration","scope":18820,"src":"64213:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18816,"name":"string","nodeType":"ElementaryTypeName","src":"64213:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64167:68:28"},"returnParameters":{"id":18819,"nodeType":"ParameterList","parameters":[],"src":"64249:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18828,"nodeType":"FunctionDefinition","src":"64342:61:28","nodes":[],"documentation":{"id":18821,"nodeType":"StructuredDocumentation","src":"64256:81:28","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64351:8:28","parameters":{"id":18826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18823,"mutability":"mutable","name":"left","nameLocation":"64368:4:28","nodeType":"VariableDeclaration","scope":18828,"src":"64360:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18822,"name":"uint256","nodeType":"ElementaryTypeName","src":"64360:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18825,"mutability":"mutable","name":"right","nameLocation":"64382:5:28","nodeType":"VariableDeclaration","scope":18828,"src":"64374:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18824,"name":"uint256","nodeType":"ElementaryTypeName","src":"64374:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64359:29:28"},"returnParameters":{"id":18827,"nodeType":"ParameterList","parameters":[],"src":"64402:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18838,"nodeType":"FunctionDefinition","src":"64557:84:28","nodes":[],"documentation":{"id":18829,"nodeType":"StructuredDocumentation","src":"64409:143:28","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64566:8:28","parameters":{"id":18836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18831,"mutability":"mutable","name":"left","nameLocation":"64583:4:28","nodeType":"VariableDeclaration","scope":18838,"src":"64575:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18830,"name":"uint256","nodeType":"ElementaryTypeName","src":"64575:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18833,"mutability":"mutable","name":"right","nameLocation":"64597:5:28","nodeType":"VariableDeclaration","scope":18838,"src":"64589:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18832,"name":"uint256","nodeType":"ElementaryTypeName","src":"64589:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18835,"mutability":"mutable","name":"error","nameLocation":"64620:5:28","nodeType":"VariableDeclaration","scope":18838,"src":"64604:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18834,"name":"string","nodeType":"ElementaryTypeName","src":"64604:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64574:52:28"},"returnParameters":{"id":18837,"nodeType":"ParameterList","parameters":[],"src":"64640:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18846,"nodeType":"FunctionDefinition","src":"64732:59:28","nodes":[],"documentation":{"id":18839,"nodeType":"StructuredDocumentation","src":"64647:80:28","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64741:8:28","parameters":{"id":18844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18841,"mutability":"mutable","name":"left","nameLocation":"64757:4:28","nodeType":"VariableDeclaration","scope":18846,"src":"64750:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18840,"name":"int256","nodeType":"ElementaryTypeName","src":"64750:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18843,"mutability":"mutable","name":"right","nameLocation":"64770:5:28","nodeType":"VariableDeclaration","scope":18846,"src":"64763:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18842,"name":"int256","nodeType":"ElementaryTypeName","src":"64763:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"64749:27:28"},"returnParameters":{"id":18845,"nodeType":"ParameterList","parameters":[],"src":"64790:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18856,"nodeType":"FunctionDefinition","src":"64944:82:28","nodes":[],"documentation":{"id":18847,"nodeType":"StructuredDocumentation","src":"64797:142:28","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"64953:8:28","parameters":{"id":18854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18849,"mutability":"mutable","name":"left","nameLocation":"64969:4:28","nodeType":"VariableDeclaration","scope":18856,"src":"64962:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18848,"name":"int256","nodeType":"ElementaryTypeName","src":"64962:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18851,"mutability":"mutable","name":"right","nameLocation":"64982:5:28","nodeType":"VariableDeclaration","scope":18856,"src":"64975:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18850,"name":"int256","nodeType":"ElementaryTypeName","src":"64975:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18853,"mutability":"mutable","name":"error","nameLocation":"65005:5:28","nodeType":"VariableDeclaration","scope":18856,"src":"64989:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18852,"name":"string","nodeType":"ElementaryTypeName","src":"64989:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64961:50:28"},"returnParameters":{"id":18855,"nodeType":"ParameterList","parameters":[],"src":"65025:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18866,"nodeType":"FunctionDefinition","src":"65184:86:28","nodes":[],"documentation":{"id":18857,"nodeType":"StructuredDocumentation","src":"65032:147:28","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65193:15:28","parameters":{"id":18864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18859,"mutability":"mutable","name":"left","nameLocation":"65217:4:28","nodeType":"VariableDeclaration","scope":18866,"src":"65209:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18858,"name":"uint256","nodeType":"ElementaryTypeName","src":"65209:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18861,"mutability":"mutable","name":"right","nameLocation":"65231:5:28","nodeType":"VariableDeclaration","scope":18866,"src":"65223:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18860,"name":"uint256","nodeType":"ElementaryTypeName","src":"65223:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18863,"mutability":"mutable","name":"decimals","nameLocation":"65246:8:28","nodeType":"VariableDeclaration","scope":18866,"src":"65238:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18862,"name":"uint256","nodeType":"ElementaryTypeName","src":"65238:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65208:47:28"},"returnParameters":{"id":18865,"nodeType":"ParameterList","parameters":[],"src":"65269:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18878,"nodeType":"FunctionDefinition","src":"65482:109:28","nodes":[],"documentation":{"id":18867,"nodeType":"StructuredDocumentation","src":"65276:201:28","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65491:15:28","parameters":{"id":18876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18869,"mutability":"mutable","name":"left","nameLocation":"65515:4:28","nodeType":"VariableDeclaration","scope":18878,"src":"65507:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18868,"name":"uint256","nodeType":"ElementaryTypeName","src":"65507:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18871,"mutability":"mutable","name":"right","nameLocation":"65529:5:28","nodeType":"VariableDeclaration","scope":18878,"src":"65521:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18870,"name":"uint256","nodeType":"ElementaryTypeName","src":"65521:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18873,"mutability":"mutable","name":"decimals","nameLocation":"65544:8:28","nodeType":"VariableDeclaration","scope":18878,"src":"65536:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18872,"name":"uint256","nodeType":"ElementaryTypeName","src":"65536:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18875,"mutability":"mutable","name":"error","nameLocation":"65570:5:28","nodeType":"VariableDeclaration","scope":18878,"src":"65554:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18874,"name":"string","nodeType":"ElementaryTypeName","src":"65554:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65506:70:28"},"returnParameters":{"id":18877,"nodeType":"ParameterList","parameters":[],"src":"65590:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18888,"nodeType":"FunctionDefinition","src":"65748:84:28","nodes":[],"documentation":{"id":18879,"nodeType":"StructuredDocumentation","src":"65597:146:28","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"65757:15:28","parameters":{"id":18886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18881,"mutability":"mutable","name":"left","nameLocation":"65780:4:28","nodeType":"VariableDeclaration","scope":18888,"src":"65773:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18880,"name":"int256","nodeType":"ElementaryTypeName","src":"65773:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18883,"mutability":"mutable","name":"right","nameLocation":"65793:5:28","nodeType":"VariableDeclaration","scope":18888,"src":"65786:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18882,"name":"int256","nodeType":"ElementaryTypeName","src":"65786:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18885,"mutability":"mutable","name":"decimals","nameLocation":"65808:8:28","nodeType":"VariableDeclaration","scope":18888,"src":"65800:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18884,"name":"uint256","nodeType":"ElementaryTypeName","src":"65800:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65772:45:28"},"returnParameters":{"id":18887,"nodeType":"ParameterList","parameters":[],"src":"65831:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18900,"nodeType":"FunctionDefinition","src":"66043:107:28","nodes":[],"documentation":{"id":18889,"nodeType":"StructuredDocumentation","src":"65838:200:28","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"66052:15:28","parameters":{"id":18898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18891,"mutability":"mutable","name":"left","nameLocation":"66075:4:28","nodeType":"VariableDeclaration","scope":18900,"src":"66068:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18890,"name":"int256","nodeType":"ElementaryTypeName","src":"66068:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18893,"mutability":"mutable","name":"right","nameLocation":"66088:5:28","nodeType":"VariableDeclaration","scope":18900,"src":"66081:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18892,"name":"int256","nodeType":"ElementaryTypeName","src":"66081:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18895,"mutability":"mutable","name":"decimals","nameLocation":"66103:8:28","nodeType":"VariableDeclaration","scope":18900,"src":"66095:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18894,"name":"uint256","nodeType":"ElementaryTypeName","src":"66095:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18897,"mutability":"mutable","name":"error","nameLocation":"66129:5:28","nodeType":"VariableDeclaration","scope":18900,"src":"66113:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18896,"name":"string","nodeType":"ElementaryTypeName","src":"66113:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66067:68:28"},"returnParameters":{"id":18899,"nodeType":"ParameterList","parameters":[],"src":"66149:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18908,"nodeType":"FunctionDefinition","src":"66251:61:28","nodes":[],"documentation":{"id":18901,"nodeType":"StructuredDocumentation","src":"66156:90:28","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66260:8:28","parameters":{"id":18906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18903,"mutability":"mutable","name":"left","nameLocation":"66277:4:28","nodeType":"VariableDeclaration","scope":18908,"src":"66269:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18902,"name":"uint256","nodeType":"ElementaryTypeName","src":"66269:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18905,"mutability":"mutable","name":"right","nameLocation":"66291:5:28","nodeType":"VariableDeclaration","scope":18908,"src":"66283:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18904,"name":"uint256","nodeType":"ElementaryTypeName","src":"66283:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66268:29:28"},"returnParameters":{"id":18907,"nodeType":"ParameterList","parameters":[],"src":"66311:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18918,"nodeType":"FunctionDefinition","src":"66475:84:28","nodes":[],"documentation":{"id":18909,"nodeType":"StructuredDocumentation","src":"66318:152:28","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66484:8:28","parameters":{"id":18916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18911,"mutability":"mutable","name":"left","nameLocation":"66501:4:28","nodeType":"VariableDeclaration","scope":18918,"src":"66493:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18910,"name":"uint256","nodeType":"ElementaryTypeName","src":"66493:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18913,"mutability":"mutable","name":"right","nameLocation":"66515:5:28","nodeType":"VariableDeclaration","scope":18918,"src":"66507:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18912,"name":"uint256","nodeType":"ElementaryTypeName","src":"66507:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18915,"mutability":"mutable","name":"error","nameLocation":"66538:5:28","nodeType":"VariableDeclaration","scope":18918,"src":"66522:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18914,"name":"string","nodeType":"ElementaryTypeName","src":"66522:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66492:52:28"},"returnParameters":{"id":18917,"nodeType":"ParameterList","parameters":[],"src":"66558:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18926,"nodeType":"FunctionDefinition","src":"66659:59:28","nodes":[],"documentation":{"id":18919,"nodeType":"StructuredDocumentation","src":"66565:89:28","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66668:8:28","parameters":{"id":18924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18921,"mutability":"mutable","name":"left","nameLocation":"66684:4:28","nodeType":"VariableDeclaration","scope":18926,"src":"66677:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18920,"name":"int256","nodeType":"ElementaryTypeName","src":"66677:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18923,"mutability":"mutable","name":"right","nameLocation":"66697:5:28","nodeType":"VariableDeclaration","scope":18926,"src":"66690:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18922,"name":"int256","nodeType":"ElementaryTypeName","src":"66690:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"66676:27:28"},"returnParameters":{"id":18925,"nodeType":"ParameterList","parameters":[],"src":"66717:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18936,"nodeType":"FunctionDefinition","src":"66880:82:28","nodes":[],"documentation":{"id":18927,"nodeType":"StructuredDocumentation","src":"66724:151:28","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"66889:8:28","parameters":{"id":18934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18929,"mutability":"mutable","name":"left","nameLocation":"66905:4:28","nodeType":"VariableDeclaration","scope":18936,"src":"66898:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18928,"name":"int256","nodeType":"ElementaryTypeName","src":"66898:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18931,"mutability":"mutable","name":"right","nameLocation":"66918:5:28","nodeType":"VariableDeclaration","scope":18936,"src":"66911:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18930,"name":"int256","nodeType":"ElementaryTypeName","src":"66911:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18933,"mutability":"mutable","name":"error","nameLocation":"66941:5:28","nodeType":"VariableDeclaration","scope":18936,"src":"66925:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18932,"name":"string","nodeType":"ElementaryTypeName","src":"66925:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66897:50:28"},"returnParameters":{"id":18935,"nodeType":"ParameterList","parameters":[],"src":"66961:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18946,"nodeType":"FunctionDefinition","src":"67108:86:28","nodes":[],"documentation":{"id":18937,"nodeType":"StructuredDocumentation","src":"66968:135:28","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67117:15:28","parameters":{"id":18944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18939,"mutability":"mutable","name":"left","nameLocation":"67141:4:28","nodeType":"VariableDeclaration","scope":18946,"src":"67133:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18938,"name":"uint256","nodeType":"ElementaryTypeName","src":"67133:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18941,"mutability":"mutable","name":"right","nameLocation":"67155:5:28","nodeType":"VariableDeclaration","scope":18946,"src":"67147:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18940,"name":"uint256","nodeType":"ElementaryTypeName","src":"67147:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18943,"mutability":"mutable","name":"decimals","nameLocation":"67170:8:28","nodeType":"VariableDeclaration","scope":18946,"src":"67162:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18942,"name":"uint256","nodeType":"ElementaryTypeName","src":"67162:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67132:47:28"},"returnParameters":{"id":18945,"nodeType":"ParameterList","parameters":[],"src":"67193:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18958,"nodeType":"FunctionDefinition","src":"67394:109:28","nodes":[],"documentation":{"id":18947,"nodeType":"StructuredDocumentation","src":"67200:189:28","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67403:15:28","parameters":{"id":18956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18949,"mutability":"mutable","name":"left","nameLocation":"67427:4:28","nodeType":"VariableDeclaration","scope":18958,"src":"67419:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18948,"name":"uint256","nodeType":"ElementaryTypeName","src":"67419:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18951,"mutability":"mutable","name":"right","nameLocation":"67441:5:28","nodeType":"VariableDeclaration","scope":18958,"src":"67433:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18950,"name":"uint256","nodeType":"ElementaryTypeName","src":"67433:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18953,"mutability":"mutable","name":"decimals","nameLocation":"67456:8:28","nodeType":"VariableDeclaration","scope":18958,"src":"67448:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18952,"name":"uint256","nodeType":"ElementaryTypeName","src":"67448:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18955,"mutability":"mutable","name":"error","nameLocation":"67482:5:28","nodeType":"VariableDeclaration","scope":18958,"src":"67466:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18954,"name":"string","nodeType":"ElementaryTypeName","src":"67466:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67418:70:28"},"returnParameters":{"id":18957,"nodeType":"ParameterList","parameters":[],"src":"67502:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18968,"nodeType":"FunctionDefinition","src":"67648:84:28","nodes":[],"documentation":{"id":18959,"nodeType":"StructuredDocumentation","src":"67509:134:28","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67657:15:28","parameters":{"id":18966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18961,"mutability":"mutable","name":"left","nameLocation":"67680:4:28","nodeType":"VariableDeclaration","scope":18968,"src":"67673:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18960,"name":"int256","nodeType":"ElementaryTypeName","src":"67673:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18963,"mutability":"mutable","name":"right","nameLocation":"67693:5:28","nodeType":"VariableDeclaration","scope":18968,"src":"67686:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18962,"name":"int256","nodeType":"ElementaryTypeName","src":"67686:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18965,"mutability":"mutable","name":"decimals","nameLocation":"67708:8:28","nodeType":"VariableDeclaration","scope":18968,"src":"67700:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18964,"name":"uint256","nodeType":"ElementaryTypeName","src":"67700:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67672:45:28"},"returnParameters":{"id":18967,"nodeType":"ParameterList","parameters":[],"src":"67731:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18980,"nodeType":"FunctionDefinition","src":"67931:107:28","nodes":[],"documentation":{"id":18969,"nodeType":"StructuredDocumentation","src":"67738:188:28","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"67940:15:28","parameters":{"id":18978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18971,"mutability":"mutable","name":"left","nameLocation":"67963:4:28","nodeType":"VariableDeclaration","scope":18980,"src":"67956:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18970,"name":"int256","nodeType":"ElementaryTypeName","src":"67956:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18973,"mutability":"mutable","name":"right","nameLocation":"67976:5:28","nodeType":"VariableDeclaration","scope":18980,"src":"67969:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18972,"name":"int256","nodeType":"ElementaryTypeName","src":"67969:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18975,"mutability":"mutable","name":"decimals","nameLocation":"67991:8:28","nodeType":"VariableDeclaration","scope":18980,"src":"67983:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18974,"name":"uint256","nodeType":"ElementaryTypeName","src":"67983:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18977,"mutability":"mutable","name":"error","nameLocation":"68017:5:28","nodeType":"VariableDeclaration","scope":18980,"src":"68001:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18976,"name":"string","nodeType":"ElementaryTypeName","src":"68001:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67955:68:28"},"returnParameters":{"id":18979,"nodeType":"ParameterList","parameters":[],"src":"68037:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18988,"nodeType":"FunctionDefinition","src":"68127:61:28","nodes":[],"documentation":{"id":18981,"nodeType":"StructuredDocumentation","src":"68044:78:28","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"68136:8:28","parameters":{"id":18986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18983,"mutability":"mutable","name":"left","nameLocation":"68153:4:28","nodeType":"VariableDeclaration","scope":18988,"src":"68145:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18982,"name":"uint256","nodeType":"ElementaryTypeName","src":"68145:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18985,"mutability":"mutable","name":"right","nameLocation":"68167:5:28","nodeType":"VariableDeclaration","scope":18988,"src":"68159:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18984,"name":"uint256","nodeType":"ElementaryTypeName","src":"68159:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68144:29:28"},"returnParameters":{"id":18987,"nodeType":"ParameterList","parameters":[],"src":"68187:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18998,"nodeType":"FunctionDefinition","src":"68339:84:28","nodes":[],"documentation":{"id":18989,"nodeType":"StructuredDocumentation","src":"68194:140:28","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"68348:8:28","parameters":{"id":18996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18991,"mutability":"mutable","name":"left","nameLocation":"68365:4:28","nodeType":"VariableDeclaration","scope":18998,"src":"68357:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18990,"name":"uint256","nodeType":"ElementaryTypeName","src":"68357:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18993,"mutability":"mutable","name":"right","nameLocation":"68379:5:28","nodeType":"VariableDeclaration","scope":18998,"src":"68371:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18992,"name":"uint256","nodeType":"ElementaryTypeName","src":"68371:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18995,"mutability":"mutable","name":"error","nameLocation":"68402:5:28","nodeType":"VariableDeclaration","scope":18998,"src":"68386:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18994,"name":"string","nodeType":"ElementaryTypeName","src":"68386:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68356:52:28"},"returnParameters":{"id":18997,"nodeType":"ParameterList","parameters":[],"src":"68422:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19006,"nodeType":"FunctionDefinition","src":"68511:59:28","nodes":[],"documentation":{"id":18999,"nodeType":"StructuredDocumentation","src":"68429:77:28","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"68520:8:28","parameters":{"id":19004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19001,"mutability":"mutable","name":"left","nameLocation":"68536:4:28","nodeType":"VariableDeclaration","scope":19006,"src":"68529:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19000,"name":"int256","nodeType":"ElementaryTypeName","src":"68529:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19003,"mutability":"mutable","name":"right","nameLocation":"68549:5:28","nodeType":"VariableDeclaration","scope":19006,"src":"68542:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19002,"name":"int256","nodeType":"ElementaryTypeName","src":"68542:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"68528:27:28"},"returnParameters":{"id":19005,"nodeType":"ParameterList","parameters":[],"src":"68569:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19016,"nodeType":"FunctionDefinition","src":"68720:82:28","nodes":[],"documentation":{"id":19007,"nodeType":"StructuredDocumentation","src":"68576:139:28","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"68729:8:28","parameters":{"id":19014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19009,"mutability":"mutable","name":"left","nameLocation":"68745:4:28","nodeType":"VariableDeclaration","scope":19016,"src":"68738:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19008,"name":"int256","nodeType":"ElementaryTypeName","src":"68738:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19011,"mutability":"mutable","name":"right","nameLocation":"68758:5:28","nodeType":"VariableDeclaration","scope":19016,"src":"68751:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19010,"name":"int256","nodeType":"ElementaryTypeName","src":"68751:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19013,"mutability":"mutable","name":"error","nameLocation":"68781:5:28","nodeType":"VariableDeclaration","scope":19016,"src":"68765:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19012,"name":"string","nodeType":"ElementaryTypeName","src":"68765:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68737:50:28"},"returnParameters":{"id":19015,"nodeType":"ParameterList","parameters":[],"src":"68801:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19026,"nodeType":"FunctionDefinition","src":"68915:89:28","nodes":[],"documentation":{"id":19017,"nodeType":"StructuredDocumentation","src":"68808:102:28","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"68924:18:28","parameters":{"id":19024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19019,"mutability":"mutable","name":"left","nameLocation":"68951:4:28","nodeType":"VariableDeclaration","scope":19026,"src":"68943:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19018,"name":"uint256","nodeType":"ElementaryTypeName","src":"68943:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19021,"mutability":"mutable","name":"right","nameLocation":"68965:5:28","nodeType":"VariableDeclaration","scope":19026,"src":"68957:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19020,"name":"uint256","nodeType":"ElementaryTypeName","src":"68957:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19023,"mutability":"mutable","name":"decimals","nameLocation":"68980:8:28","nodeType":"VariableDeclaration","scope":19026,"src":"68972:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19022,"name":"uint256","nodeType":"ElementaryTypeName","src":"68972:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68942:47:28"},"returnParameters":{"id":19025,"nodeType":"ParameterList","parameters":[],"src":"69003:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19038,"nodeType":"FunctionDefinition","src":"69179:112:28","nodes":[],"documentation":{"id":19027,"nodeType":"StructuredDocumentation","src":"69010:164:28","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"69188:18:28","parameters":{"id":19036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19029,"mutability":"mutable","name":"left","nameLocation":"69215:4:28","nodeType":"VariableDeclaration","scope":19038,"src":"69207:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19028,"name":"uint256","nodeType":"ElementaryTypeName","src":"69207:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19031,"mutability":"mutable","name":"right","nameLocation":"69229:5:28","nodeType":"VariableDeclaration","scope":19038,"src":"69221:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19030,"name":"uint256","nodeType":"ElementaryTypeName","src":"69221:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19033,"mutability":"mutable","name":"decimals","nameLocation":"69244:8:28","nodeType":"VariableDeclaration","scope":19038,"src":"69236:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19032,"name":"uint256","nodeType":"ElementaryTypeName","src":"69236:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19035,"mutability":"mutable","name":"error","nameLocation":"69270:5:28","nodeType":"VariableDeclaration","scope":19038,"src":"69254:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19034,"name":"string","nodeType":"ElementaryTypeName","src":"69254:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69206:70:28"},"returnParameters":{"id":19037,"nodeType":"ParameterList","parameters":[],"src":"69290:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19048,"nodeType":"FunctionDefinition","src":"69403:87:28","nodes":[],"documentation":{"id":19039,"nodeType":"StructuredDocumentation","src":"69297:101:28","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"69412:18:28","parameters":{"id":19046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19041,"mutability":"mutable","name":"left","nameLocation":"69438:4:28","nodeType":"VariableDeclaration","scope":19048,"src":"69431:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19040,"name":"int256","nodeType":"ElementaryTypeName","src":"69431:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19043,"mutability":"mutable","name":"right","nameLocation":"69451:5:28","nodeType":"VariableDeclaration","scope":19048,"src":"69444:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19042,"name":"int256","nodeType":"ElementaryTypeName","src":"69444:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19045,"mutability":"mutable","name":"decimals","nameLocation":"69466:8:28","nodeType":"VariableDeclaration","scope":19048,"src":"69458:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19044,"name":"uint256","nodeType":"ElementaryTypeName","src":"69458:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69430:45:28"},"returnParameters":{"id":19047,"nodeType":"ParameterList","parameters":[],"src":"69489:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19060,"nodeType":"FunctionDefinition","src":"69664:110:28","nodes":[],"documentation":{"id":19049,"nodeType":"StructuredDocumentation","src":"69496:163:28","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"69673:18:28","parameters":{"id":19058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19051,"mutability":"mutable","name":"left","nameLocation":"69699:4:28","nodeType":"VariableDeclaration","scope":19060,"src":"69692:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19050,"name":"int256","nodeType":"ElementaryTypeName","src":"69692:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19053,"mutability":"mutable","name":"right","nameLocation":"69712:5:28","nodeType":"VariableDeclaration","scope":19060,"src":"69705:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19052,"name":"int256","nodeType":"ElementaryTypeName","src":"69705:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19055,"mutability":"mutable","name":"decimals","nameLocation":"69727:8:28","nodeType":"VariableDeclaration","scope":19060,"src":"69719:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19054,"name":"uint256","nodeType":"ElementaryTypeName","src":"69719:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19057,"mutability":"mutable","name":"error","nameLocation":"69753:5:28","nodeType":"VariableDeclaration","scope":19060,"src":"69737:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19056,"name":"string","nodeType":"ElementaryTypeName","src":"69737:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69691:68:28"},"returnParameters":{"id":19059,"nodeType":"ParameterList","parameters":[],"src":"69773:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19068,"nodeType":"FunctionDefinition","src":"69834:58:28","nodes":[],"documentation":{"id":19061,"nodeType":"StructuredDocumentation","src":"69780:49:28","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69843:11:28","parameters":{"id":19066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19063,"mutability":"mutable","name":"left","nameLocation":"69860:4:28","nodeType":"VariableDeclaration","scope":19068,"src":"69855:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19062,"name":"bool","nodeType":"ElementaryTypeName","src":"69855:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19065,"mutability":"mutable","name":"right","nameLocation":"69871:5:28","nodeType":"VariableDeclaration","scope":19068,"src":"69866:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19064,"name":"bool","nodeType":"ElementaryTypeName","src":"69866:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69854:23:28"},"returnParameters":{"id":19067,"nodeType":"ParameterList","parameters":[],"src":"69891:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19078,"nodeType":"FunctionDefinition","src":"70009:81:28","nodes":[],"documentation":{"id":19069,"nodeType":"StructuredDocumentation","src":"69898:106:28","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70018:11:28","parameters":{"id":19076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19071,"mutability":"mutable","name":"left","nameLocation":"70035:4:28","nodeType":"VariableDeclaration","scope":19078,"src":"70030:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19070,"name":"bool","nodeType":"ElementaryTypeName","src":"70030:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19073,"mutability":"mutable","name":"right","nameLocation":"70046:5:28","nodeType":"VariableDeclaration","scope":19078,"src":"70041:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19072,"name":"bool","nodeType":"ElementaryTypeName","src":"70041:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19075,"mutability":"mutable","name":"error","nameLocation":"70069:5:28","nodeType":"VariableDeclaration","scope":19078,"src":"70053:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19074,"name":"string","nodeType":"ElementaryTypeName","src":"70053:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70029:46:28"},"returnParameters":{"id":19077,"nodeType":"ParameterList","parameters":[],"src":"70089:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19086,"nodeType":"FunctionDefinition","src":"70152:80:28","nodes":[],"documentation":{"id":19079,"nodeType":"StructuredDocumentation","src":"70096:51:28","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70161:11:28","parameters":{"id":19084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19081,"mutability":"mutable","name":"left","nameLocation":"70189:4:28","nodeType":"VariableDeclaration","scope":19086,"src":"70173:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19080,"name":"string","nodeType":"ElementaryTypeName","src":"70173:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19083,"mutability":"mutable","name":"right","nameLocation":"70211:5:28","nodeType":"VariableDeclaration","scope":19086,"src":"70195:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19082,"name":"string","nodeType":"ElementaryTypeName","src":"70195:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70172:45:28"},"returnParameters":{"id":19085,"nodeType":"ParameterList","parameters":[],"src":"70231:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19096,"nodeType":"FunctionDefinition","src":"70351:103:28","nodes":[],"documentation":{"id":19087,"nodeType":"StructuredDocumentation","src":"70238:108:28","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70360:11:28","parameters":{"id":19094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19089,"mutability":"mutable","name":"left","nameLocation":"70388:4:28","nodeType":"VariableDeclaration","scope":19096,"src":"70372:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19088,"name":"string","nodeType":"ElementaryTypeName","src":"70372:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19091,"mutability":"mutable","name":"right","nameLocation":"70410:5:28","nodeType":"VariableDeclaration","scope":19096,"src":"70394:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19090,"name":"string","nodeType":"ElementaryTypeName","src":"70394:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19093,"mutability":"mutable","name":"error","nameLocation":"70433:5:28","nodeType":"VariableDeclaration","scope":19096,"src":"70417:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19092,"name":"string","nodeType":"ElementaryTypeName","src":"70417:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70371:68:28"},"returnParameters":{"id":19095,"nodeType":"ParameterList","parameters":[],"src":"70453:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19104,"nodeType":"FunctionDefinition","src":"70515:78:28","nodes":[],"documentation":{"id":19097,"nodeType":"StructuredDocumentation","src":"70460:50:28","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70524:11:28","parameters":{"id":19102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19099,"mutability":"mutable","name":"left","nameLocation":"70551:4:28","nodeType":"VariableDeclaration","scope":19104,"src":"70536:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19098,"name":"bytes","nodeType":"ElementaryTypeName","src":"70536:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19101,"mutability":"mutable","name":"right","nameLocation":"70572:5:28","nodeType":"VariableDeclaration","scope":19104,"src":"70557:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19100,"name":"bytes","nodeType":"ElementaryTypeName","src":"70557:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"70535:43:28"},"returnParameters":{"id":19103,"nodeType":"ParameterList","parameters":[],"src":"70592:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19114,"nodeType":"FunctionDefinition","src":"70711:101:28","nodes":[],"documentation":{"id":19105,"nodeType":"StructuredDocumentation","src":"70599:107:28","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70720:11:28","parameters":{"id":19112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19107,"mutability":"mutable","name":"left","nameLocation":"70747:4:28","nodeType":"VariableDeclaration","scope":19114,"src":"70732:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19106,"name":"bytes","nodeType":"ElementaryTypeName","src":"70732:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19109,"mutability":"mutable","name":"right","nameLocation":"70768:5:28","nodeType":"VariableDeclaration","scope":19114,"src":"70753:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19108,"name":"bytes","nodeType":"ElementaryTypeName","src":"70753:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19111,"mutability":"mutable","name":"error","nameLocation":"70791:5:28","nodeType":"VariableDeclaration","scope":19114,"src":"70775:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19110,"name":"string","nodeType":"ElementaryTypeName","src":"70775:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70731:66:28"},"returnParameters":{"id":19113,"nodeType":"ParameterList","parameters":[],"src":"70811:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19124,"nodeType":"FunctionDefinition","src":"70882:80:28","nodes":[],"documentation":{"id":19115,"nodeType":"StructuredDocumentation","src":"70818:59:28","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"70891:11:28","parameters":{"id":19122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19118,"mutability":"mutable","name":"left","nameLocation":"70919:4:28","nodeType":"VariableDeclaration","scope":19124,"src":"70903:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":19116,"name":"bool","nodeType":"ElementaryTypeName","src":"70903:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":19117,"nodeType":"ArrayTypeName","src":"70903:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":19121,"mutability":"mutable","name":"right","nameLocation":"70941:5:28","nodeType":"VariableDeclaration","scope":19124,"src":"70925:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":19119,"name":"bool","nodeType":"ElementaryTypeName","src":"70925:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":19120,"nodeType":"ArrayTypeName","src":"70925:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"70902:45:28"},"returnParameters":{"id":19123,"nodeType":"ParameterList","parameters":[],"src":"70961:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19136,"nodeType":"FunctionDefinition","src":"71089:103:28","nodes":[],"documentation":{"id":19125,"nodeType":"StructuredDocumentation","src":"70968:116:28","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71098:11:28","parameters":{"id":19134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19128,"mutability":"mutable","name":"left","nameLocation":"71126:4:28","nodeType":"VariableDeclaration","scope":19136,"src":"71110:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":19126,"name":"bool","nodeType":"ElementaryTypeName","src":"71110:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":19127,"nodeType":"ArrayTypeName","src":"71110:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":19131,"mutability":"mutable","name":"right","nameLocation":"71148:5:28","nodeType":"VariableDeclaration","scope":19136,"src":"71132:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":19129,"name":"bool","nodeType":"ElementaryTypeName","src":"71132:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":19130,"nodeType":"ArrayTypeName","src":"71132:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":19133,"mutability":"mutable","name":"error","nameLocation":"71171:5:28","nodeType":"VariableDeclaration","scope":19136,"src":"71155:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19132,"name":"string","nodeType":"ElementaryTypeName","src":"71155:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71109:68:28"},"returnParameters":{"id":19135,"nodeType":"ParameterList","parameters":[],"src":"71191:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19146,"nodeType":"FunctionDefinition","src":"71265:86:28","nodes":[],"documentation":{"id":19137,"nodeType":"StructuredDocumentation","src":"71198:62:28","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71274:11:28","parameters":{"id":19144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19140,"mutability":"mutable","name":"left","nameLocation":"71305:4:28","nodeType":"VariableDeclaration","scope":19146,"src":"71286:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19138,"name":"uint256","nodeType":"ElementaryTypeName","src":"71286:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":19139,"nodeType":"ArrayTypeName","src":"71286:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":19143,"mutability":"mutable","name":"right","nameLocation":"71330:5:28","nodeType":"VariableDeclaration","scope":19146,"src":"71311:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19141,"name":"uint256","nodeType":"ElementaryTypeName","src":"71311:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":19142,"nodeType":"ArrayTypeName","src":"71311:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"71285:51:28"},"returnParameters":{"id":19145,"nodeType":"ParameterList","parameters":[],"src":"71350:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19158,"nodeType":"FunctionDefinition","src":"71481:109:28","nodes":[],"documentation":{"id":19147,"nodeType":"StructuredDocumentation","src":"71357:119:28","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71490:11:28","parameters":{"id":19156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19150,"mutability":"mutable","name":"left","nameLocation":"71521:4:28","nodeType":"VariableDeclaration","scope":19158,"src":"71502:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19148,"name":"uint256","nodeType":"ElementaryTypeName","src":"71502:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":19149,"nodeType":"ArrayTypeName","src":"71502:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":19153,"mutability":"mutable","name":"right","nameLocation":"71546:5:28","nodeType":"VariableDeclaration","scope":19158,"src":"71527:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19151,"name":"uint256","nodeType":"ElementaryTypeName","src":"71527:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":19152,"nodeType":"ArrayTypeName","src":"71527:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":19155,"mutability":"mutable","name":"error","nameLocation":"71569:5:28","nodeType":"VariableDeclaration","scope":19158,"src":"71553:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19154,"name":"string","nodeType":"ElementaryTypeName","src":"71553:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71501:74:28"},"returnParameters":{"id":19157,"nodeType":"ParameterList","parameters":[],"src":"71589:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19168,"nodeType":"FunctionDefinition","src":"71662:84:28","nodes":[],"documentation":{"id":19159,"nodeType":"StructuredDocumentation","src":"71596:61:28","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71671:11:28","parameters":{"id":19166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19162,"mutability":"mutable","name":"left","nameLocation":"71701:4:28","nodeType":"VariableDeclaration","scope":19168,"src":"71683:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":19160,"name":"int256","nodeType":"ElementaryTypeName","src":"71683:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":19161,"nodeType":"ArrayTypeName","src":"71683:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":19165,"mutability":"mutable","name":"right","nameLocation":"71725:5:28","nodeType":"VariableDeclaration","scope":19168,"src":"71707:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":19163,"name":"int256","nodeType":"ElementaryTypeName","src":"71707:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":19164,"nodeType":"ArrayTypeName","src":"71707:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"71682:49:28"},"returnParameters":{"id":19167,"nodeType":"ParameterList","parameters":[],"src":"71745:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19180,"nodeType":"FunctionDefinition","src":"71875:107:28","nodes":[],"documentation":{"id":19169,"nodeType":"StructuredDocumentation","src":"71752:118:28","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"71884:11:28","parameters":{"id":19178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19172,"mutability":"mutable","name":"left","nameLocation":"71914:4:28","nodeType":"VariableDeclaration","scope":19180,"src":"71896:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":19170,"name":"int256","nodeType":"ElementaryTypeName","src":"71896:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":19171,"nodeType":"ArrayTypeName","src":"71896:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":19175,"mutability":"mutable","name":"right","nameLocation":"71938:5:28","nodeType":"VariableDeclaration","scope":19180,"src":"71920:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":19173,"name":"int256","nodeType":"ElementaryTypeName","src":"71920:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":19174,"nodeType":"ArrayTypeName","src":"71920:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":19177,"mutability":"mutable","name":"error","nameLocation":"71961:5:28","nodeType":"VariableDeclaration","scope":19180,"src":"71945:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19176,"name":"string","nodeType":"ElementaryTypeName","src":"71945:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71895:72:28"},"returnParameters":{"id":19179,"nodeType":"ParameterList","parameters":[],"src":"71981:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19188,"nodeType":"FunctionDefinition","src":"72045:64:28","nodes":[],"documentation":{"id":19181,"nodeType":"StructuredDocumentation","src":"71988:52:28","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72054:11:28","parameters":{"id":19186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19183,"mutability":"mutable","name":"left","nameLocation":"72074:4:28","nodeType":"VariableDeclaration","scope":19188,"src":"72066:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19182,"name":"uint256","nodeType":"ElementaryTypeName","src":"72066:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19185,"mutability":"mutable","name":"right","nameLocation":"72088:5:28","nodeType":"VariableDeclaration","scope":19188,"src":"72080:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19184,"name":"uint256","nodeType":"ElementaryTypeName","src":"72080:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72065:29:28"},"returnParameters":{"id":19187,"nodeType":"ParameterList","parameters":[],"src":"72108:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19198,"nodeType":"FunctionDefinition","src":"72182:86:28","nodes":[],"documentation":{"id":19189,"nodeType":"StructuredDocumentation","src":"72115:62:28","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72191:11:28","parameters":{"id":19196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19192,"mutability":"mutable","name":"left","nameLocation":"72222:4:28","nodeType":"VariableDeclaration","scope":19198,"src":"72203:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19190,"name":"address","nodeType":"ElementaryTypeName","src":"72203:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19191,"nodeType":"ArrayTypeName","src":"72203:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":19195,"mutability":"mutable","name":"right","nameLocation":"72247:5:28","nodeType":"VariableDeclaration","scope":19198,"src":"72228:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19193,"name":"address","nodeType":"ElementaryTypeName","src":"72228:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19194,"nodeType":"ArrayTypeName","src":"72228:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"72202:51:28"},"returnParameters":{"id":19197,"nodeType":"ParameterList","parameters":[],"src":"72267:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19210,"nodeType":"FunctionDefinition","src":"72398:109:28","nodes":[],"documentation":{"id":19199,"nodeType":"StructuredDocumentation","src":"72274:119:28","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72407:11:28","parameters":{"id":19208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19202,"mutability":"mutable","name":"left","nameLocation":"72438:4:28","nodeType":"VariableDeclaration","scope":19210,"src":"72419:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19200,"name":"address","nodeType":"ElementaryTypeName","src":"72419:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19201,"nodeType":"ArrayTypeName","src":"72419:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":19205,"mutability":"mutable","name":"right","nameLocation":"72463:5:28","nodeType":"VariableDeclaration","scope":19210,"src":"72444:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19203,"name":"address","nodeType":"ElementaryTypeName","src":"72444:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19204,"nodeType":"ArrayTypeName","src":"72444:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":19207,"mutability":"mutable","name":"error","nameLocation":"72486:5:28","nodeType":"VariableDeclaration","scope":19210,"src":"72470:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19206,"name":"string","nodeType":"ElementaryTypeName","src":"72470:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72418:74:28"},"returnParameters":{"id":19209,"nodeType":"ParameterList","parameters":[],"src":"72506:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19220,"nodeType":"FunctionDefinition","src":"72580:86:28","nodes":[],"documentation":{"id":19211,"nodeType":"StructuredDocumentation","src":"72513:62:28","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72589:11:28","parameters":{"id":19218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19214,"mutability":"mutable","name":"left","nameLocation":"72620:4:28","nodeType":"VariableDeclaration","scope":19220,"src":"72601:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72601:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19213,"nodeType":"ArrayTypeName","src":"72601:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":19217,"mutability":"mutable","name":"right","nameLocation":"72645:5:28","nodeType":"VariableDeclaration","scope":19220,"src":"72626:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72626:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19216,"nodeType":"ArrayTypeName","src":"72626:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"72600:51:28"},"returnParameters":{"id":19219,"nodeType":"ParameterList","parameters":[],"src":"72665:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19232,"nodeType":"FunctionDefinition","src":"72796:109:28","nodes":[],"documentation":{"id":19221,"nodeType":"StructuredDocumentation","src":"72672:119:28","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72805:11:28","parameters":{"id":19230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19224,"mutability":"mutable","name":"left","nameLocation":"72836:4:28","nodeType":"VariableDeclaration","scope":19232,"src":"72817:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72817:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19223,"nodeType":"ArrayTypeName","src":"72817:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":19227,"mutability":"mutable","name":"right","nameLocation":"72861:5:28","nodeType":"VariableDeclaration","scope":19232,"src":"72842:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72842:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19226,"nodeType":"ArrayTypeName","src":"72842:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":19229,"mutability":"mutable","name":"error","nameLocation":"72884:5:28","nodeType":"VariableDeclaration","scope":19232,"src":"72868:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19228,"name":"string","nodeType":"ElementaryTypeName","src":"72868:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72816:74:28"},"returnParameters":{"id":19231,"nodeType":"ParameterList","parameters":[],"src":"72904:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19242,"nodeType":"FunctionDefinition","src":"72977:84:28","nodes":[],"documentation":{"id":19233,"nodeType":"StructuredDocumentation","src":"72911:61:28","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"72986:11:28","parameters":{"id":19240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19236,"mutability":"mutable","name":"left","nameLocation":"73016:4:28","nodeType":"VariableDeclaration","scope":19242,"src":"72998:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19234,"name":"string","nodeType":"ElementaryTypeName","src":"72998:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19235,"nodeType":"ArrayTypeName","src":"72998:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":19239,"mutability":"mutable","name":"right","nameLocation":"73040:5:28","nodeType":"VariableDeclaration","scope":19242,"src":"73022:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19237,"name":"string","nodeType":"ElementaryTypeName","src":"73022:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19238,"nodeType":"ArrayTypeName","src":"73022:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"72997:49:28"},"returnParameters":{"id":19241,"nodeType":"ParameterList","parameters":[],"src":"73060:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19254,"nodeType":"FunctionDefinition","src":"73190:107:28","nodes":[],"documentation":{"id":19243,"nodeType":"StructuredDocumentation","src":"73067:118:28","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73199:11:28","parameters":{"id":19252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19246,"mutability":"mutable","name":"left","nameLocation":"73229:4:28","nodeType":"VariableDeclaration","scope":19254,"src":"73211:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19244,"name":"string","nodeType":"ElementaryTypeName","src":"73211:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19245,"nodeType":"ArrayTypeName","src":"73211:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":19249,"mutability":"mutable","name":"right","nameLocation":"73253:5:28","nodeType":"VariableDeclaration","scope":19254,"src":"73235:23:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19247,"name":"string","nodeType":"ElementaryTypeName","src":"73235:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19248,"nodeType":"ArrayTypeName","src":"73235:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":19251,"mutability":"mutable","name":"error","nameLocation":"73276:5:28","nodeType":"VariableDeclaration","scope":19254,"src":"73260:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19250,"name":"string","nodeType":"ElementaryTypeName","src":"73260:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73210:72:28"},"returnParameters":{"id":19253,"nodeType":"ParameterList","parameters":[],"src":"73296:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19264,"nodeType":"FunctionDefinition","src":"73368:82:28","nodes":[],"documentation":{"id":19255,"nodeType":"StructuredDocumentation","src":"73303:60:28","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73377:11:28","parameters":{"id":19262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19258,"mutability":"mutable","name":"left","nameLocation":"73406:4:28","nodeType":"VariableDeclaration","scope":19264,"src":"73389:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19256,"name":"bytes","nodeType":"ElementaryTypeName","src":"73389:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19257,"nodeType":"ArrayTypeName","src":"73389:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":19261,"mutability":"mutable","name":"right","nameLocation":"73429:5:28","nodeType":"VariableDeclaration","scope":19264,"src":"73412:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19259,"name":"bytes","nodeType":"ElementaryTypeName","src":"73412:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19260,"nodeType":"ArrayTypeName","src":"73412:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"73388:47:28"},"returnParameters":{"id":19263,"nodeType":"ParameterList","parameters":[],"src":"73449:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19276,"nodeType":"FunctionDefinition","src":"73578:105:28","nodes":[],"documentation":{"id":19265,"nodeType":"StructuredDocumentation","src":"73456:117:28","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73587:11:28","parameters":{"id":19274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19268,"mutability":"mutable","name":"left","nameLocation":"73616:4:28","nodeType":"VariableDeclaration","scope":19276,"src":"73599:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19266,"name":"bytes","nodeType":"ElementaryTypeName","src":"73599:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19267,"nodeType":"ArrayTypeName","src":"73599:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":19271,"mutability":"mutable","name":"right","nameLocation":"73639:5:28","nodeType":"VariableDeclaration","scope":19276,"src":"73622:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19269,"name":"bytes","nodeType":"ElementaryTypeName","src":"73622:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19270,"nodeType":"ArrayTypeName","src":"73622:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":19273,"mutability":"mutable","name":"error","nameLocation":"73662:5:28","nodeType":"VariableDeclaration","scope":19276,"src":"73646:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19272,"name":"string","nodeType":"ElementaryTypeName","src":"73646:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73598:70:28"},"returnParameters":{"id":19275,"nodeType":"ParameterList","parameters":[],"src":"73682:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19286,"nodeType":"FunctionDefinition","src":"73803:87:28","nodes":[],"documentation":{"id":19277,"nodeType":"StructuredDocumentation","src":"73689:109:28","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73812:11:28","parameters":{"id":19284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19279,"mutability":"mutable","name":"left","nameLocation":"73832:4:28","nodeType":"VariableDeclaration","scope":19286,"src":"73824:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19278,"name":"uint256","nodeType":"ElementaryTypeName","src":"73824:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19281,"mutability":"mutable","name":"right","nameLocation":"73846:5:28","nodeType":"VariableDeclaration","scope":19286,"src":"73838:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19280,"name":"uint256","nodeType":"ElementaryTypeName","src":"73838:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19283,"mutability":"mutable","name":"error","nameLocation":"73869:5:28","nodeType":"VariableDeclaration","scope":19286,"src":"73853:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19282,"name":"string","nodeType":"ElementaryTypeName","src":"73853:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73823:52:28"},"returnParameters":{"id":19285,"nodeType":"ParameterList","parameters":[],"src":"73889:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19294,"nodeType":"FunctionDefinition","src":"73952:62:28","nodes":[],"documentation":{"id":19287,"nodeType":"StructuredDocumentation","src":"73896:51:28","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"73961:11:28","parameters":{"id":19292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19289,"mutability":"mutable","name":"left","nameLocation":"73980:4:28","nodeType":"VariableDeclaration","scope":19294,"src":"73973:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19288,"name":"int256","nodeType":"ElementaryTypeName","src":"73973:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19291,"mutability":"mutable","name":"right","nameLocation":"73993:5:28","nodeType":"VariableDeclaration","scope":19294,"src":"73986:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19290,"name":"int256","nodeType":"ElementaryTypeName","src":"73986:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"73972:27:28"},"returnParameters":{"id":19293,"nodeType":"ParameterList","parameters":[],"src":"74013:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19304,"nodeType":"FunctionDefinition","src":"74133:85:28","nodes":[],"documentation":{"id":19295,"nodeType":"StructuredDocumentation","src":"74020:108:28","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74142:11:28","parameters":{"id":19302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19297,"mutability":"mutable","name":"left","nameLocation":"74161:4:28","nodeType":"VariableDeclaration","scope":19304,"src":"74154:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19296,"name":"int256","nodeType":"ElementaryTypeName","src":"74154:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19299,"mutability":"mutable","name":"right","nameLocation":"74174:5:28","nodeType":"VariableDeclaration","scope":19304,"src":"74167:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19298,"name":"int256","nodeType":"ElementaryTypeName","src":"74167:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":19301,"mutability":"mutable","name":"error","nameLocation":"74197:5:28","nodeType":"VariableDeclaration","scope":19304,"src":"74181:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19300,"name":"string","nodeType":"ElementaryTypeName","src":"74181:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74153:50:28"},"returnParameters":{"id":19303,"nodeType":"ParameterList","parameters":[],"src":"74217:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19312,"nodeType":"FunctionDefinition","src":"74281:64:28","nodes":[],"documentation":{"id":19305,"nodeType":"StructuredDocumentation","src":"74224:52:28","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74290:11:28","parameters":{"id":19310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19307,"mutability":"mutable","name":"left","nameLocation":"74310:4:28","nodeType":"VariableDeclaration","scope":19312,"src":"74302:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19306,"name":"address","nodeType":"ElementaryTypeName","src":"74302:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19309,"mutability":"mutable","name":"right","nameLocation":"74324:5:28","nodeType":"VariableDeclaration","scope":19312,"src":"74316:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19308,"name":"address","nodeType":"ElementaryTypeName","src":"74316:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"74301:29:28"},"returnParameters":{"id":19311,"nodeType":"ParameterList","parameters":[],"src":"74344:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19322,"nodeType":"FunctionDefinition","src":"74465:87:28","nodes":[],"documentation":{"id":19313,"nodeType":"StructuredDocumentation","src":"74351:109:28","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74474:11:28","parameters":{"id":19320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19315,"mutability":"mutable","name":"left","nameLocation":"74494:4:28","nodeType":"VariableDeclaration","scope":19322,"src":"74486:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19314,"name":"address","nodeType":"ElementaryTypeName","src":"74486:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19317,"mutability":"mutable","name":"right","nameLocation":"74508:5:28","nodeType":"VariableDeclaration","scope":19322,"src":"74500:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19316,"name":"address","nodeType":"ElementaryTypeName","src":"74500:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19319,"mutability":"mutable","name":"error","nameLocation":"74531:5:28","nodeType":"VariableDeclaration","scope":19322,"src":"74515:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19318,"name":"string","nodeType":"ElementaryTypeName","src":"74515:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74485:52:28"},"returnParameters":{"id":19321,"nodeType":"ParameterList","parameters":[],"src":"74551:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19330,"nodeType":"FunctionDefinition","src":"74615:64:28","nodes":[],"documentation":{"id":19323,"nodeType":"StructuredDocumentation","src":"74558:52:28","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74624:11:28","parameters":{"id":19328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19325,"mutability":"mutable","name":"left","nameLocation":"74644:4:28","nodeType":"VariableDeclaration","scope":19330,"src":"74636:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74636:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19327,"mutability":"mutable","name":"right","nameLocation":"74658:5:28","nodeType":"VariableDeclaration","scope":19330,"src":"74650:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74650:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"74635:29:28"},"returnParameters":{"id":19329,"nodeType":"ParameterList","parameters":[],"src":"74678:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19340,"nodeType":"FunctionDefinition","src":"74799:87:28","nodes":[],"documentation":{"id":19331,"nodeType":"StructuredDocumentation","src":"74685:109:28","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"74808:11:28","parameters":{"id":19338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19333,"mutability":"mutable","name":"left","nameLocation":"74828:4:28","nodeType":"VariableDeclaration","scope":19340,"src":"74820:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74820:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19335,"mutability":"mutable","name":"right","nameLocation":"74842:5:28","nodeType":"VariableDeclaration","scope":19340,"src":"74834:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"74834:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19337,"mutability":"mutable","name":"error","nameLocation":"74865:5:28","nodeType":"VariableDeclaration","scope":19340,"src":"74849:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19336,"name":"string","nodeType":"ElementaryTypeName","src":"74849:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74819:52:28"},"returnParameters":{"id":19339,"nodeType":"ParameterList","parameters":[],"src":"74885:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19346,"nodeType":"FunctionDefinition","src":"74942:50:28","nodes":[],"documentation":{"id":19341,"nodeType":"StructuredDocumentation","src":"74892:45:28","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"74951:10:28","parameters":{"id":19344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19343,"mutability":"mutable","name":"condition","nameLocation":"74967:9:28","nodeType":"VariableDeclaration","scope":19346,"src":"74962:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19342,"name":"bool","nodeType":"ElementaryTypeName","src":"74962:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74961:16:28"},"returnParameters":{"id":19345,"nodeType":"ParameterList","parameters":[],"src":"74991:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19354,"nodeType":"FunctionDefinition","src":"75105:73:28","nodes":[],"documentation":{"id":19347,"nodeType":"StructuredDocumentation","src":"74998:102:28","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"75114:10:28","parameters":{"id":19352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19349,"mutability":"mutable","name":"condition","nameLocation":"75130:9:28","nodeType":"VariableDeclaration","scope":19354,"src":"75125:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19348,"name":"bool","nodeType":"ElementaryTypeName","src":"75125:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19351,"mutability":"mutable","name":"error","nameLocation":"75157:5:28","nodeType":"VariableDeclaration","scope":19354,"src":"75141:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19350,"name":"string","nodeType":"ElementaryTypeName","src":"75141:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75124:39:28"},"returnParameters":{"id":19353,"nodeType":"ParameterList","parameters":[],"src":"75177:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19360,"nodeType":"FunctionDefinition","src":"75273:46:28","nodes":[],"documentation":{"id":19355,"nodeType":"StructuredDocumentation","src":"75184:84:28","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"75282:6:28","parameters":{"id":19358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19357,"mutability":"mutable","name":"condition","nameLocation":"75294:9:28","nodeType":"VariableDeclaration","scope":19360,"src":"75289:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19356,"name":"bool","nodeType":"ElementaryTypeName","src":"75289:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"75288:16:28"},"returnParameters":{"id":19359,"nodeType":"ParameterList","parameters":[],"src":"75318:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19364,"nodeType":"FunctionDefinition","src":"75409:40:28","nodes":[],"documentation":{"id":19361,"nodeType":"StructuredDocumentation","src":"75325:79:28","text":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"functionSelector":"285b366a","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"75418:14:28","parameters":{"id":19362,"nodeType":"ParameterList","parameters":[],"src":"75432:2:28"},"returnParameters":{"id":19363,"nodeType":"ParameterList","parameters":[],"src":"75448:0:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19370,"nodeType":"FunctionDefinition","src":"75511:51:28","nodes":[],"documentation":{"id":19365,"nodeType":"StructuredDocumentation","src":"75455:51:28","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"75520:10:28","parameters":{"id":19368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19367,"mutability":"mutable","name":"char","nameLocation":"75547:4:28","nodeType":"VariableDeclaration","scope":19370,"src":"75531:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19366,"name":"string","nodeType":"ElementaryTypeName","src":"75531:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75530:22:28"},"returnParameters":{"id":19369,"nodeType":"ParameterList","parameters":[],"src":"75561:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19378,"nodeType":"FunctionDefinition","src":"75636:63:28","nodes":[],"documentation":{"id":19371,"nodeType":"StructuredDocumentation","src":"75568:63:28","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"75645:10:28","parameters":{"id":19376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19373,"mutability":"mutable","name":"char","nameLocation":"75672:4:28","nodeType":"VariableDeclaration","scope":19378,"src":"75656:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19372,"name":"string","nodeType":"ElementaryTypeName","src":"75656:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19375,"mutability":"mutable","name":"value","nameLocation":"75683:5:28","nodeType":"VariableDeclaration","scope":19378,"src":"75678:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19374,"name":"bool","nodeType":"ElementaryTypeName","src":"75678:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"75655:34:28"},"returnParameters":{"id":19377,"nodeType":"ParameterList","parameters":[],"src":"75698:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19384,"nodeType":"FunctionDefinition","src":"76104:75:28","nodes":[],"documentation":{"id":19379,"nodeType":"StructuredDocumentation","src":"75705:394:28","text":"Returns the Foundry version.\n Format: <cargo_version>+<git_sha>+<build_timestamp>\n Sample output: 0.2.0+faa94c384+202407110019\n Note: Build timestamps may vary slightly across platforms due to separate CI jobs.\n For reliable version comparisons, use YYYYMMDD0000 format (e.g., >= 202407110000)\n to compare timestamps while ignoring minor time differences."},"functionSelector":"ea991bb5","implemented":false,"kind":"function","modifiers":[],"name":"getFoundryVersion","nameLocation":"76113:17:28","parameters":{"id":19380,"nodeType":"ParameterList","parameters":[],"src":"76130:2:28"},"returnParameters":{"id":19383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19382,"mutability":"mutable","name":"version","nameLocation":"76170:7:28","nodeType":"VariableDeclaration","scope":19384,"src":"76156:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19381,"name":"string","nodeType":"ElementaryTypeName","src":"76156:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76155:23:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19392,"nodeType":"FunctionDefinition","src":"76234:85:28","nodes":[],"documentation":{"id":19385,"nodeType":"StructuredDocumentation","src":"76185:44:28","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"76243:6:28","parameters":{"id":19388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19387,"mutability":"mutable","name":"rpcAlias","nameLocation":"76266:8:28","nodeType":"VariableDeclaration","scope":19392,"src":"76250:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19386,"name":"string","nodeType":"ElementaryTypeName","src":"76250:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76249:26:28"},"returnParameters":{"id":19391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19390,"mutability":"mutable","name":"json","nameLocation":"76313:4:28","nodeType":"VariableDeclaration","scope":19392,"src":"76299:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19389,"name":"string","nodeType":"ElementaryTypeName","src":"76299:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76298:20:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19400,"nodeType":"FunctionDefinition","src":"76384:67:28","nodes":[],"documentation":{"id":19393,"nodeType":"StructuredDocumentation","src":"76325:54:28","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"76393:13:28","parameters":{"id":19394,"nodeType":"ParameterList","parameters":[],"src":"76406:2:28"},"returnParameters":{"id":19399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19398,"mutability":"mutable","name":"urls","nameLocation":"76445:4:28","nodeType":"VariableDeclaration","scope":19400,"src":"76432:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$16366_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":19396,"nodeType":"UserDefinedTypeName","pathNode":{"id":19395,"name":"Rpc","nameLocations":["76432:3:28"],"nodeType":"IdentifierPath","referencedDeclaration":16366,"src":"76432:3:28"},"referencedDeclaration":16366,"src":"76432:3:28","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$16366_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":19397,"nodeType":"ArrayTypeName","src":"76432:5:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$16366_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"76431:19:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19409,"nodeType":"FunctionDefinition","src":"76522:67:28","nodes":[],"documentation":{"id":19401,"nodeType":"StructuredDocumentation","src":"76457:60:28","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"76531:7:28","parameters":{"id":19402,"nodeType":"ParameterList","parameters":[],"src":"76538:2:28"},"returnParameters":{"id":19408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19407,"mutability":"mutable","name":"urls","nameLocation":"76583:4:28","nodeType":"VariableDeclaration","scope":19409,"src":"76564:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":19403,"name":"string","nodeType":"ElementaryTypeName","src":"76564:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19405,"length":{"hexValue":"32","id":19404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"76571:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"76564:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":19406,"nodeType":"ArrayTypeName","src":"76564:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"76563:25:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19415,"nodeType":"FunctionDefinition","src":"76670:42:28","nodes":[],"documentation":{"id":19410,"nodeType":"StructuredDocumentation","src":"76595:70:28","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"76679:5:28","parameters":{"id":19413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19412,"mutability":"mutable","name":"duration","nameLocation":"76693:8:28","nodeType":"VariableDeclaration","scope":19415,"src":"76685:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19411,"name":"uint256","nodeType":"ElementaryTypeName","src":"76685:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76684:18:28"},"returnParameters":{"id":19414,"nodeType":"ParameterList","parameters":[],"src":"76711:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19425,"nodeType":"FunctionDefinition","src":"76797:95:28","nodes":[],"documentation":{"id":19416,"nodeType":"StructuredDocumentation","src":"76749:43:28","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"76806:13:28","parameters":{"id":19421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19418,"mutability":"mutable","name":"toml","nameLocation":"76836:4:28","nodeType":"VariableDeclaration","scope":19425,"src":"76820:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19417,"name":"string","nodeType":"ElementaryTypeName","src":"76820:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19420,"mutability":"mutable","name":"key","nameLocation":"76858:3:28","nodeType":"VariableDeclaration","scope":19425,"src":"76842:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19419,"name":"string","nodeType":"ElementaryTypeName","src":"76842:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76819:43:28"},"returnParameters":{"id":19424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19425,"src":"76886:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19422,"name":"bool","nodeType":"ElementaryTypeName","src":"76886:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"76885:6:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19435,"nodeType":"FunctionDefinition","src":"76973:101:28","nodes":[],"documentation":{"id":19426,"nodeType":"StructuredDocumentation","src":"76898:70:28","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"76982:16:28","parameters":{"id":19431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19428,"mutability":"mutable","name":"toml","nameLocation":"77015:4:28","nodeType":"VariableDeclaration","scope":19435,"src":"76999:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19427,"name":"string","nodeType":"ElementaryTypeName","src":"76999:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19430,"mutability":"mutable","name":"key","nameLocation":"77037:3:28","nodeType":"VariableDeclaration","scope":19435,"src":"77021:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19429,"name":"string","nodeType":"ElementaryTypeName","src":"77021:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76998:43:28"},"returnParameters":{"id":19434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19435,"src":"77065:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19432,"name":"address","nodeType":"ElementaryTypeName","src":"77065:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77064:9:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19446,"nodeType":"FunctionDefinition","src":"77157:139:28","nodes":[],"documentation":{"id":19436,"nodeType":"StructuredDocumentation","src":"77080:72:28","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"77166:21:28","parameters":{"id":19441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19438,"mutability":"mutable","name":"toml","nameLocation":"77204:4:28","nodeType":"VariableDeclaration","scope":19446,"src":"77188:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19437,"name":"string","nodeType":"ElementaryTypeName","src":"77188:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19440,"mutability":"mutable","name":"key","nameLocation":"77226:3:28","nodeType":"VariableDeclaration","scope":19446,"src":"77210:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19439,"name":"string","nodeType":"ElementaryTypeName","src":"77210:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77187:43:28"},"returnParameters":{"id":19445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19446,"src":"77278:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19442,"name":"address","nodeType":"ElementaryTypeName","src":"77278:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19443,"nodeType":"ArrayTypeName","src":"77278:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"77277:18:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19456,"nodeType":"FunctionDefinition","src":"77374:95:28","nodes":[],"documentation":{"id":19447,"nodeType":"StructuredDocumentation","src":"77302:67:28","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"77383:13:28","parameters":{"id":19452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19449,"mutability":"mutable","name":"toml","nameLocation":"77413:4:28","nodeType":"VariableDeclaration","scope":19456,"src":"77397:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19448,"name":"string","nodeType":"ElementaryTypeName","src":"77397:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19451,"mutability":"mutable","name":"key","nameLocation":"77435:3:28","nodeType":"VariableDeclaration","scope":19456,"src":"77419:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19450,"name":"string","nodeType":"ElementaryTypeName","src":"77419:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77396:43:28"},"returnParameters":{"id":19455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19456,"src":"77463:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19453,"name":"bool","nodeType":"ElementaryTypeName","src":"77463:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"77462:6:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19467,"nodeType":"FunctionDefinition","src":"77549:109:28","nodes":[],"documentation":{"id":19457,"nodeType":"StructuredDocumentation","src":"77475:69:28","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"77558:18:28","parameters":{"id":19462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19459,"mutability":"mutable","name":"toml","nameLocation":"77593:4:28","nodeType":"VariableDeclaration","scope":19467,"src":"77577:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19458,"name":"string","nodeType":"ElementaryTypeName","src":"77577:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19461,"mutability":"mutable","name":"key","nameLocation":"77615:3:28","nodeType":"VariableDeclaration","scope":19467,"src":"77599:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19460,"name":"string","nodeType":"ElementaryTypeName","src":"77599:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77576:43:28"},"returnParameters":{"id":19466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19467,"src":"77643:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":19463,"name":"bool","nodeType":"ElementaryTypeName","src":"77643:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":19464,"nodeType":"ArrayTypeName","src":"77643:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"77642:15:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19477,"nodeType":"FunctionDefinition","src":"77737:104:28","nodes":[],"documentation":{"id":19468,"nodeType":"StructuredDocumentation","src":"77664:68:28","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"77746:14:28","parameters":{"id":19473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19470,"mutability":"mutable","name":"toml","nameLocation":"77777:4:28","nodeType":"VariableDeclaration","scope":19477,"src":"77761:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19469,"name":"string","nodeType":"ElementaryTypeName","src":"77761:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19472,"mutability":"mutable","name":"key","nameLocation":"77799:3:28","nodeType":"VariableDeclaration","scope":19477,"src":"77783:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19471,"name":"string","nodeType":"ElementaryTypeName","src":"77783:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77760:43:28"},"returnParameters":{"id":19476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19477,"src":"77827:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19474,"name":"bytes","nodeType":"ElementaryTypeName","src":"77827:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"77826:14:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19487,"nodeType":"FunctionDefinition","src":"77922:101:28","nodes":[],"documentation":{"id":19478,"nodeType":"StructuredDocumentation","src":"77847:70:28","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"77931:16:28","parameters":{"id":19483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19480,"mutability":"mutable","name":"toml","nameLocation":"77964:4:28","nodeType":"VariableDeclaration","scope":19487,"src":"77948:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19479,"name":"string","nodeType":"ElementaryTypeName","src":"77948:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19482,"mutability":"mutable","name":"key","nameLocation":"77986:3:28","nodeType":"VariableDeclaration","scope":19487,"src":"77970:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19481,"name":"string","nodeType":"ElementaryTypeName","src":"77970:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77947:43:28"},"returnParameters":{"id":19486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19487,"src":"78014:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78014:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78013:9:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19498,"nodeType":"FunctionDefinition","src":"78106:139:28","nodes":[],"documentation":{"id":19488,"nodeType":"StructuredDocumentation","src":"78029:72:28","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"78115:21:28","parameters":{"id":19493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19490,"mutability":"mutable","name":"toml","nameLocation":"78153:4:28","nodeType":"VariableDeclaration","scope":19498,"src":"78137:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19489,"name":"string","nodeType":"ElementaryTypeName","src":"78137:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19492,"mutability":"mutable","name":"key","nameLocation":"78175:3:28","nodeType":"VariableDeclaration","scope":19498,"src":"78159:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19491,"name":"string","nodeType":"ElementaryTypeName","src":"78159:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78136:43:28"},"returnParameters":{"id":19497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19498,"src":"78227:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78227:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19495,"nodeType":"ArrayTypeName","src":"78227:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"78226:18:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19509,"nodeType":"FunctionDefinition","src":"78326:111:28","nodes":[],"documentation":{"id":19499,"nodeType":"StructuredDocumentation","src":"78251:70:28","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"78335:19:28","parameters":{"id":19504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19501,"mutability":"mutable","name":"toml","nameLocation":"78371:4:28","nodeType":"VariableDeclaration","scope":19509,"src":"78355:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19500,"name":"string","nodeType":"ElementaryTypeName","src":"78355:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19503,"mutability":"mutable","name":"key","nameLocation":"78393:3:28","nodeType":"VariableDeclaration","scope":19509,"src":"78377:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19502,"name":"string","nodeType":"ElementaryTypeName","src":"78377:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78354:43:28"},"returnParameters":{"id":19508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19509,"src":"78421:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":19505,"name":"bytes","nodeType":"ElementaryTypeName","src":"78421:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":19506,"nodeType":"ArrayTypeName","src":"78421:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"78420:16:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19519,"nodeType":"FunctionDefinition","src":"78517:96:28","nodes":[],"documentation":{"id":19510,"nodeType":"StructuredDocumentation","src":"78443:69:28","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"78526:12:28","parameters":{"id":19515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19512,"mutability":"mutable","name":"toml","nameLocation":"78555:4:28","nodeType":"VariableDeclaration","scope":19519,"src":"78539:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19511,"name":"string","nodeType":"ElementaryTypeName","src":"78539:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19514,"mutability":"mutable","name":"key","nameLocation":"78577:3:28","nodeType":"VariableDeclaration","scope":19519,"src":"78561:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19513,"name":"string","nodeType":"ElementaryTypeName","src":"78561:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78538:43:28"},"returnParameters":{"id":19518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19519,"src":"78605:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19516,"name":"int256","nodeType":"ElementaryTypeName","src":"78605:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"78604:8:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19530,"nodeType":"FunctionDefinition","src":"78695:110:28","nodes":[],"documentation":{"id":19520,"nodeType":"StructuredDocumentation","src":"78619:71:28","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"78704:17:28","parameters":{"id":19525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19522,"mutability":"mutable","name":"toml","nameLocation":"78738:4:28","nodeType":"VariableDeclaration","scope":19530,"src":"78722:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19521,"name":"string","nodeType":"ElementaryTypeName","src":"78722:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19524,"mutability":"mutable","name":"key","nameLocation":"78760:3:28","nodeType":"VariableDeclaration","scope":19530,"src":"78744:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19523,"name":"string","nodeType":"ElementaryTypeName","src":"78744:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78721:43:28"},"returnParameters":{"id":19529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19530,"src":"78788:15:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":19526,"name":"int256","nodeType":"ElementaryTypeName","src":"78788:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":19527,"nodeType":"ArrayTypeName","src":"78788:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"78787:17:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19541,"nodeType":"FunctionDefinition","src":"78869:111:28","nodes":[],"documentation":{"id":19531,"nodeType":"StructuredDocumentation","src":"78811:53:28","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"78878:13:28","parameters":{"id":19536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19533,"mutability":"mutable","name":"toml","nameLocation":"78908:4:28","nodeType":"VariableDeclaration","scope":19541,"src":"78892:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19532,"name":"string","nodeType":"ElementaryTypeName","src":"78892:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19535,"mutability":"mutable","name":"key","nameLocation":"78930:3:28","nodeType":"VariableDeclaration","scope":19541,"src":"78914:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19534,"name":"string","nodeType":"ElementaryTypeName","src":"78914:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78891:43:28"},"returnParameters":{"id":19540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19539,"mutability":"mutable","name":"keys","nameLocation":"78974:4:28","nodeType":"VariableDeclaration","scope":19541,"src":"78958:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19537,"name":"string","nodeType":"ElementaryTypeName","src":"78958:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19538,"nodeType":"ArrayTypeName","src":"78958:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"78957:22:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19551,"nodeType":"FunctionDefinition","src":"79060:106:28","nodes":[],"documentation":{"id":19542,"nodeType":"StructuredDocumentation","src":"78986:69:28","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"79069:15:28","parameters":{"id":19547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19544,"mutability":"mutable","name":"toml","nameLocation":"79101:4:28","nodeType":"VariableDeclaration","scope":19551,"src":"79085:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19543,"name":"string","nodeType":"ElementaryTypeName","src":"79085:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19546,"mutability":"mutable","name":"key","nameLocation":"79123:3:28","nodeType":"VariableDeclaration","scope":19551,"src":"79107:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19545,"name":"string","nodeType":"ElementaryTypeName","src":"79107:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79084:43:28"},"returnParameters":{"id":19550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19551,"src":"79151:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19548,"name":"string","nodeType":"ElementaryTypeName","src":"79151:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79150:15:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19562,"nodeType":"FunctionDefinition","src":"79248:113:28","nodes":[],"documentation":{"id":19552,"nodeType":"StructuredDocumentation","src":"79172:71:28","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"79257:20:28","parameters":{"id":19557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19554,"mutability":"mutable","name":"toml","nameLocation":"79294:4:28","nodeType":"VariableDeclaration","scope":19562,"src":"79278:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19553,"name":"string","nodeType":"ElementaryTypeName","src":"79278:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19556,"mutability":"mutable","name":"key","nameLocation":"79316:3:28","nodeType":"VariableDeclaration","scope":19562,"src":"79300:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19555,"name":"string","nodeType":"ElementaryTypeName","src":"79300:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79277:43:28"},"returnParameters":{"id":19561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19562,"src":"79344:15:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":19558,"name":"string","nodeType":"ElementaryTypeName","src":"79344:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":19559,"nodeType":"ArrayTypeName","src":"79344:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"79343:17:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19574,"nodeType":"FunctionDefinition","src":"79478:165:28","nodes":[],"documentation":{"id":19563,"nodeType":"StructuredDocumentation","src":"79367:106:28","text":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"49be3743","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlTypeArray","nameLocation":"79487:18:28","parameters":{"id":19570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19565,"mutability":"mutable","name":"toml","nameLocation":"79522:4:28","nodeType":"VariableDeclaration","scope":19574,"src":"79506:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19564,"name":"string","nodeType":"ElementaryTypeName","src":"79506:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19567,"mutability":"mutable","name":"key","nameLocation":"79544:3:28","nodeType":"VariableDeclaration","scope":19574,"src":"79528:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19566,"name":"string","nodeType":"ElementaryTypeName","src":"79528:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19569,"mutability":"mutable","name":"typeDescription","nameLocation":"79565:15:28","nodeType":"VariableDeclaration","scope":19574,"src":"79549:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19568,"name":"string","nodeType":"ElementaryTypeName","src":"79549:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79505:76:28"},"returnParameters":{"id":19573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19574,"src":"79629:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19571,"name":"bytes","nodeType":"ElementaryTypeName","src":"79629:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79628:14:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19584,"nodeType":"FunctionDefinition","src":"79745:139:28","nodes":[],"documentation":{"id":19575,"nodeType":"StructuredDocumentation","src":"79649:91:28","text":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"47fa5e11","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"79754:13:28","parameters":{"id":19580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19577,"mutability":"mutable","name":"toml","nameLocation":"79784:4:28","nodeType":"VariableDeclaration","scope":19584,"src":"79768:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19576,"name":"string","nodeType":"ElementaryTypeName","src":"79768:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19579,"mutability":"mutable","name":"typeDescription","nameLocation":"79806:15:28","nodeType":"VariableDeclaration","scope":19584,"src":"79790:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19578,"name":"string","nodeType":"ElementaryTypeName","src":"79790:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79767:55:28"},"returnParameters":{"id":19583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19584,"src":"79870:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19581,"name":"bytes","nodeType":"ElementaryTypeName","src":"79870:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79869:14:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19596,"nodeType":"FunctionDefinition","src":"79995:160:28","nodes":[],"documentation":{"id":19585,"nodeType":"StructuredDocumentation","src":"79890:100:28","text":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"f9fa5cdb","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"80004:13:28","parameters":{"id":19592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19587,"mutability":"mutable","name":"toml","nameLocation":"80034:4:28","nodeType":"VariableDeclaration","scope":19596,"src":"80018:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19586,"name":"string","nodeType":"ElementaryTypeName","src":"80018:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19589,"mutability":"mutable","name":"key","nameLocation":"80056:3:28","nodeType":"VariableDeclaration","scope":19596,"src":"80040:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19588,"name":"string","nodeType":"ElementaryTypeName","src":"80040:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19591,"mutability":"mutable","name":"typeDescription","nameLocation":"80077:15:28","nodeType":"VariableDeclaration","scope":19596,"src":"80061:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19590,"name":"string","nodeType":"ElementaryTypeName","src":"80061:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80017:76:28"},"returnParameters":{"id":19595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19596,"src":"80141:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19593,"name":"bytes","nodeType":"ElementaryTypeName","src":"80141:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"80140:14:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19606,"nodeType":"FunctionDefinition","src":"80236:98:28","nodes":[],"documentation":{"id":19597,"nodeType":"StructuredDocumentation","src":"80161:70:28","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"80245:13:28","parameters":{"id":19602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19599,"mutability":"mutable","name":"toml","nameLocation":"80275:4:28","nodeType":"VariableDeclaration","scope":19606,"src":"80259:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19598,"name":"string","nodeType":"ElementaryTypeName","src":"80259:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19601,"mutability":"mutable","name":"key","nameLocation":"80297:3:28","nodeType":"VariableDeclaration","scope":19606,"src":"80281:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19600,"name":"string","nodeType":"ElementaryTypeName","src":"80281:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80258:43:28"},"returnParameters":{"id":19605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19606,"src":"80325:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19603,"name":"uint256","nodeType":"ElementaryTypeName","src":"80325:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80324:9:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19617,"nodeType":"FunctionDefinition","src":"80417:112:28","nodes":[],"documentation":{"id":19607,"nodeType":"StructuredDocumentation","src":"80340:72:28","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"80426:18:28","parameters":{"id":19612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19609,"mutability":"mutable","name":"toml","nameLocation":"80461:4:28","nodeType":"VariableDeclaration","scope":19617,"src":"80445:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19608,"name":"string","nodeType":"ElementaryTypeName","src":"80445:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19611,"mutability":"mutable","name":"key","nameLocation":"80483:3:28","nodeType":"VariableDeclaration","scope":19617,"src":"80467:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19610,"name":"string","nodeType":"ElementaryTypeName","src":"80467:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80444:43:28"},"returnParameters":{"id":19616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19617,"src":"80511:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19613,"name":"uint256","nodeType":"ElementaryTypeName","src":"80511:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":19614,"nodeType":"ArrayTypeName","src":"80511:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"80510:18:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19625,"nodeType":"FunctionDefinition","src":"80569:93:28","nodes":[],"documentation":{"id":19618,"nodeType":"StructuredDocumentation","src":"80535:29:28","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"80578:9:28","parameters":{"id":19621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19620,"mutability":"mutable","name":"toml","nameLocation":"80604:4:28","nodeType":"VariableDeclaration","scope":19625,"src":"80588:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19619,"name":"string","nodeType":"ElementaryTypeName","src":"80588:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80587:22:28"},"returnParameters":{"id":19624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19623,"mutability":"mutable","name":"abiEncodedData","nameLocation":"80646:14:28","nodeType":"VariableDeclaration","scope":19625,"src":"80633:27:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19622,"name":"bytes","nodeType":"ElementaryTypeName","src":"80633:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"80632:29:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19635,"nodeType":"FunctionDefinition","src":"80711:114:28","nodes":[],"documentation":{"id":19626,"nodeType":"StructuredDocumentation","src":"80668:38:28","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"80720:9:28","parameters":{"id":19631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19628,"mutability":"mutable","name":"toml","nameLocation":"80746:4:28","nodeType":"VariableDeclaration","scope":19635,"src":"80730:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19627,"name":"string","nodeType":"ElementaryTypeName","src":"80730:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19630,"mutability":"mutable","name":"key","nameLocation":"80768:3:28","nodeType":"VariableDeclaration","scope":19635,"src":"80752:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19629,"name":"string","nodeType":"ElementaryTypeName","src":"80752:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80729:43:28"},"returnParameters":{"id":19634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19633,"mutability":"mutable","name":"abiEncodedData","nameLocation":"80809:14:28","nodeType":"VariableDeclaration","scope":19635,"src":"80796:27:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19632,"name":"bytes","nodeType":"ElementaryTypeName","src":"80796:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"80795:29:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19643,"nodeType":"FunctionDefinition","src":"80918:72:28","nodes":[],"documentation":{"id":19636,"nodeType":"StructuredDocumentation","src":"80831:82:28","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"80927:9:28","parameters":{"id":19641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19638,"mutability":"mutable","name":"json","nameLocation":"80953:4:28","nodeType":"VariableDeclaration","scope":19643,"src":"80937:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19637,"name":"string","nodeType":"ElementaryTypeName","src":"80937:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19640,"mutability":"mutable","name":"path","nameLocation":"80975:4:28","nodeType":"VariableDeclaration","scope":19643,"src":"80959:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19639,"name":"string","nodeType":"ElementaryTypeName","src":"80959:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80936:44:28"},"returnParameters":{"id":19642,"nodeType":"ParameterList","parameters":[],"src":"80989:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19653,"nodeType":"FunctionDefinition","src":"81259:98:28","nodes":[],"documentation":{"id":19644,"nodeType":"StructuredDocumentation","src":"80996:258:28","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"81268:9:28","parameters":{"id":19651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19646,"mutability":"mutable","name":"json","nameLocation":"81294:4:28","nodeType":"VariableDeclaration","scope":19653,"src":"81278:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19645,"name":"string","nodeType":"ElementaryTypeName","src":"81278:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19648,"mutability":"mutable","name":"path","nameLocation":"81316:4:28","nodeType":"VariableDeclaration","scope":19653,"src":"81300:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19647,"name":"string","nodeType":"ElementaryTypeName","src":"81300:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19650,"mutability":"mutable","name":"valueKey","nameLocation":"81338:8:28","nodeType":"VariableDeclaration","scope":19653,"src":"81322:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19649,"name":"string","nodeType":"ElementaryTypeName","src":"81322:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81277:70:28"},"returnParameters":{"id":19652,"nodeType":"ParameterList","parameters":[],"src":"81356:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19665,"nodeType":"FunctionDefinition","src":"81496:141:28","nodes":[],"documentation":{"id":19654,"nodeType":"StructuredDocumentation","src":"81399:92:28","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"81505:21:28","parameters":{"id":19661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19656,"mutability":"mutable","name":"salt","nameLocation":"81535:4:28","nodeType":"VariableDeclaration","scope":19665,"src":"81527:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81527:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19658,"mutability":"mutable","name":"initCodeHash","nameLocation":"81549:12:28","nodeType":"VariableDeclaration","scope":19665,"src":"81541:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81541:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19660,"mutability":"mutable","name":"deployer","nameLocation":"81571:8:28","nodeType":"VariableDeclaration","scope":19665,"src":"81563:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19659,"name":"address","nodeType":"ElementaryTypeName","src":"81563:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81526:54:28"},"returnParameters":{"id":19664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19665,"src":"81628:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19662,"name":"address","nodeType":"ElementaryTypeName","src":"81628:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81627:9:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19675,"nodeType":"FunctionDefinition","src":"81742:99:28","nodes":[],"documentation":{"id":19666,"nodeType":"StructuredDocumentation","src":"81643:94:28","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"81751:21:28","parameters":{"id":19671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19668,"mutability":"mutable","name":"salt","nameLocation":"81781:4:28","nodeType":"VariableDeclaration","scope":19675,"src":"81773:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81773:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19670,"mutability":"mutable","name":"initCodeHash","nameLocation":"81795:12:28","nodeType":"VariableDeclaration","scope":19675,"src":"81787:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81787:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"81772:36:28"},"returnParameters":{"id":19674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19675,"src":"81832:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19672,"name":"address","nodeType":"ElementaryTypeName","src":"81832:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81831:9:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19685,"nodeType":"FunctionDefinition","src":"81946:95:28","nodes":[],"documentation":{"id":19676,"nodeType":"StructuredDocumentation","src":"81847:94:28","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"81955:20:28","parameters":{"id":19681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19678,"mutability":"mutable","name":"deployer","nameLocation":"81984:8:28","nodeType":"VariableDeclaration","scope":19685,"src":"81976:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19677,"name":"address","nodeType":"ElementaryTypeName","src":"81976:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19680,"mutability":"mutable","name":"nonce","nameLocation":"82002:5:28","nodeType":"VariableDeclaration","scope":19685,"src":"81994:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19679,"name":"uint256","nodeType":"ElementaryTypeName","src":"81994:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81975:33:28"},"returnParameters":{"id":19684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19685,"src":"82032:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19682,"name":"address","nodeType":"ElementaryTypeName","src":"82032:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82031:9:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19693,"nodeType":"FunctionDefinition","src":"82134:56:28","nodes":[],"documentation":{"id":19686,"nodeType":"StructuredDocumentation","src":"82047:82:28","text":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"functionSelector":"203dac0d","implemented":false,"kind":"function","modifiers":[],"name":"copyStorage","nameLocation":"82143:11:28","parameters":{"id":19691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19688,"mutability":"mutable","name":"from","nameLocation":"82163:4:28","nodeType":"VariableDeclaration","scope":19693,"src":"82155:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19687,"name":"address","nodeType":"ElementaryTypeName","src":"82155:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19690,"mutability":"mutable","name":"to","nameLocation":"82177:2:28","nodeType":"VariableDeclaration","scope":19693,"src":"82169:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19689,"name":"address","nodeType":"ElementaryTypeName","src":"82169:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82154:26:28"},"returnParameters":{"id":19692,"nodeType":"ParameterList","parameters":[],"src":"82189:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19701,"nodeType":"FunctionDefinition","src":"82246:75:28","nodes":[],"documentation":{"id":19694,"nodeType":"StructuredDocumentation","src":"82196:45:28","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"82255:11:28","parameters":{"id":19697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19696,"mutability":"mutable","name":"name","nameLocation":"82283:4:28","nodeType":"VariableDeclaration","scope":19701,"src":"82267:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19695,"name":"string","nodeType":"ElementaryTypeName","src":"82267:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82266:22:28"},"returnParameters":{"id":19700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19701,"src":"82312:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82312:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"82311:9:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19709,"nodeType":"FunctionDefinition","src":"82377:86:28","nodes":[],"documentation":{"id":19702,"nodeType":"StructuredDocumentation","src":"82327:45:28","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"82386:8:28","parameters":{"id":19705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19704,"mutability":"mutable","name":"account","nameLocation":"82403:7:28","nodeType":"VariableDeclaration","scope":19709,"src":"82395:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19703,"name":"address","nodeType":"ElementaryTypeName","src":"82395:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82394:17:28"},"returnParameters":{"id":19708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19707,"mutability":"mutable","name":"currentLabel","nameLocation":"82449:12:28","nodeType":"VariableDeclaration","scope":19709,"src":"82435:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19706,"name":"string","nodeType":"ElementaryTypeName","src":"82435:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82434:28:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19717,"nodeType":"FunctionDefinition","src":"82511:67:28","nodes":[],"documentation":{"id":19710,"nodeType":"StructuredDocumentation","src":"82469:37:28","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"82520:5:28","parameters":{"id":19715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19712,"mutability":"mutable","name":"account","nameLocation":"82534:7:28","nodeType":"VariableDeclaration","scope":19717,"src":"82526:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19711,"name":"address","nodeType":"ElementaryTypeName","src":"82526:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19714,"mutability":"mutable","name":"newLabel","nameLocation":"82559:8:28","nodeType":"VariableDeclaration","scope":19717,"src":"82543:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19713,"name":"string","nodeType":"ElementaryTypeName","src":"82543:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82525:43:28"},"returnParameters":{"id":19716,"nodeType":"ParameterList","parameters":[],"src":"82577:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19721,"nodeType":"FunctionDefinition","src":"82733:38:28","nodes":[],"documentation":{"id":19718,"nodeType":"StructuredDocumentation","src":"82584:144:28","text":"Pauses collection of call traces. Useful in cases when you want to skip tracing of\n complex calls which are not useful for debugging."},"functionSelector":"c94d1f90","implemented":false,"kind":"function","modifiers":[],"name":"pauseTracing","nameLocation":"82742:12:28","parameters":{"id":19719,"nodeType":"ParameterList","parameters":[],"src":"82754:2:28"},"returnParameters":{"id":19720,"nodeType":"ParameterList","parameters":[],"src":"82770:0:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19727,"nodeType":"FunctionDefinition","src":"82813:52:28","nodes":[],"documentation":{"id":19722,"nodeType":"StructuredDocumentation","src":"82777:31:28","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"82822:13:28","parameters":{"id":19723,"nodeType":"ParameterList","parameters":[],"src":"82835:2:28"},"returnParameters":{"id":19726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19727,"src":"82856:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19724,"name":"address","nodeType":"ElementaryTypeName","src":"82856:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82855:9:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19733,"nodeType":"FunctionDefinition","src":"82905:51:28","nodes":[],"documentation":{"id":19728,"nodeType":"StructuredDocumentation","src":"82871:29:28","text":"Returns an random `bool`."},"functionSelector":"cdc126bd","implemented":false,"kind":"function","modifiers":[],"name":"randomBool","nameLocation":"82914:10:28","parameters":{"id":19729,"nodeType":"ParameterList","parameters":[],"src":"82924:2:28"},"returnParameters":{"id":19732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19733,"src":"82950:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19730,"name":"bool","nodeType":"ElementaryTypeName","src":"82950:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"82949:6:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19741,"nodeType":"FunctionDefinition","src":"83026:71:28","nodes":[],"documentation":{"id":19734,"nodeType":"StructuredDocumentation","src":"82962:59:28","text":"Returns an random byte array value of the given length."},"functionSelector":"6c5d32a9","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes","nameLocation":"83035:11:28","parameters":{"id":19737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19736,"mutability":"mutable","name":"len","nameLocation":"83055:3:28","nodeType":"VariableDeclaration","scope":19741,"src":"83047:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19735,"name":"uint256","nodeType":"ElementaryTypeName","src":"83047:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83046:13:28"},"returnParameters":{"id":19740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19741,"src":"83083:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19738,"name":"bytes","nodeType":"ElementaryTypeName","src":"83083:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"83082:14:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19747,"nodeType":"FunctionDefinition","src":"83145:52:28","nodes":[],"documentation":{"id":19742,"nodeType":"StructuredDocumentation","src":"83103:37:28","text":"Returns an random `int256` value."},"functionSelector":"111f1202","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"83154:9:28","parameters":{"id":19743,"nodeType":"ParameterList","parameters":[],"src":"83163:2:28"},"returnParameters":{"id":19746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19747,"src":"83189:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19744,"name":"int256","nodeType":"ElementaryTypeName","src":"83189:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"83188:8:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19755,"nodeType":"FunctionDefinition","src":"83259:64:28","nodes":[],"documentation":{"id":19748,"nodeType":"StructuredDocumentation","src":"83203:51:28","text":"Returns an random `int256` value of given bits."},"functionSelector":"12845966","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"83268:9:28","parameters":{"id":19751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19750,"mutability":"mutable","name":"bits","nameLocation":"83286:4:28","nodeType":"VariableDeclaration","scope":19755,"src":"83278:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19749,"name":"uint256","nodeType":"ElementaryTypeName","src":"83278:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83277:14:28"},"returnParameters":{"id":19754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19755,"src":"83315:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19752,"name":"int256","nodeType":"ElementaryTypeName","src":"83315:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"83314:8:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19761,"nodeType":"FunctionDefinition","src":"83369:49:28","nodes":[],"documentation":{"id":19756,"nodeType":"StructuredDocumentation","src":"83329:35:28","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"83378:10:28","parameters":{"id":19757,"nodeType":"ParameterList","parameters":[],"src":"83388:2:28"},"returnParameters":{"id":19760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19761,"src":"83409:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19758,"name":"uint256","nodeType":"ElementaryTypeName","src":"83409:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83408:9:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19771,"nodeType":"FunctionDefinition","src":"83502:73:28","nodes":[],"documentation":{"id":19762,"nodeType":"StructuredDocumentation","src":"83424:73:28","text":"Returns random uint256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"83511:10:28","parameters":{"id":19767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19764,"mutability":"mutable","name":"min","nameLocation":"83530:3:28","nodeType":"VariableDeclaration","scope":19771,"src":"83522:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19763,"name":"uint256","nodeType":"ElementaryTypeName","src":"83522:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19766,"mutability":"mutable","name":"max","nameLocation":"83543:3:28","nodeType":"VariableDeclaration","scope":19771,"src":"83535:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19765,"name":"uint256","nodeType":"ElementaryTypeName","src":"83535:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83521:26:28"},"returnParameters":{"id":19770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19771,"src":"83566:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19768,"name":"uint256","nodeType":"ElementaryTypeName","src":"83566:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83565:9:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19779,"nodeType":"FunctionDefinition","src":"83638:66:28","nodes":[],"documentation":{"id":19772,"nodeType":"StructuredDocumentation","src":"83581:52:28","text":"Returns an random `uint256` value of given bits."},"functionSelector":"cf81e69c","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"83647:10:28","parameters":{"id":19775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19774,"mutability":"mutable","name":"bits","nameLocation":"83666:4:28","nodeType":"VariableDeclaration","scope":19779,"src":"83658:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19773,"name":"uint256","nodeType":"ElementaryTypeName","src":"83658:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83657:14:28"},"returnParameters":{"id":19778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19779,"src":"83695:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19776,"name":"uint256","nodeType":"ElementaryTypeName","src":"83695:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83694:9:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19783,"nodeType":"FunctionDefinition","src":"83754:39:28","nodes":[],"documentation":{"id":19780,"nodeType":"StructuredDocumentation","src":"83710:39:28","text":"Unpauses collection of call traces."},"functionSelector":"72a09ccb","implemented":false,"kind":"function","modifiers":[],"name":"resumeTracing","nameLocation":"83763:13:28","parameters":{"id":19781,"nodeType":"ParameterList","parameters":[],"src":"83776:2:28"},"returnParameters":{"id":19782,"nodeType":"ParameterList","parameters":[],"src":"83792:0:28"},"scope":19822,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19789,"nodeType":"FunctionDefinition","src":"83876:54:28","nodes":[],"documentation":{"id":19784,"nodeType":"StructuredDocumentation","src":"83799:72:28","text":"Utility cheatcode to set arbitrary storage for given target address."},"functionSelector":"e1631837","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"83885:19:28","parameters":{"id":19787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19786,"mutability":"mutable","name":"target","nameLocation":"83913:6:28","nodeType":"VariableDeclaration","scope":19789,"src":"83905:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19785,"name":"address","nodeType":"ElementaryTypeName","src":"83905:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83904:16:28"},"returnParameters":{"id":19788,"nodeType":"ParameterList","parameters":[],"src":"83929:0:28"},"scope":19822,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19797,"nodeType":"FunctionDefinition","src":"83991:80:28","nodes":[],"documentation":{"id":19790,"nodeType":"StructuredDocumentation","src":"83936:50:28","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"84000:11:28","parameters":{"id":19793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19792,"mutability":"mutable","name":"data","nameLocation":"84027:4:28","nodeType":"VariableDeclaration","scope":19797,"src":"84012:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19791,"name":"bytes","nodeType":"ElementaryTypeName","src":"84012:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84011:21:28"},"returnParameters":{"id":19796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19797,"src":"84056:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19794,"name":"string","nodeType":"ElementaryTypeName","src":"84056:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84055:15:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19805,"nodeType":"FunctionDefinition","src":"84133:81:28","nodes":[],"documentation":{"id":19798,"nodeType":"StructuredDocumentation","src":"84077:51:28","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"84142:11:28","parameters":{"id":19801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19800,"mutability":"mutable","name":"data","nameLocation":"84170:4:28","nodeType":"VariableDeclaration","scope":19805,"src":"84154:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19799,"name":"string","nodeType":"ElementaryTypeName","src":"84154:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84153:22:28"},"returnParameters":{"id":19804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19805,"src":"84199:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19802,"name":"string","nodeType":"ElementaryTypeName","src":"84199:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84198:15:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19813,"nodeType":"FunctionDefinition","src":"84272:77:28","nodes":[],"documentation":{"id":19806,"nodeType":"StructuredDocumentation","src":"84220:47:28","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"84281:8:28","parameters":{"id":19809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19808,"mutability":"mutable","name":"data","nameLocation":"84305:4:28","nodeType":"VariableDeclaration","scope":19813,"src":"84290:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19807,"name":"bytes","nodeType":"ElementaryTypeName","src":"84290:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84289:21:28"},"returnParameters":{"id":19812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19813,"src":"84334:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19810,"name":"string","nodeType":"ElementaryTypeName","src":"84334:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84333:15:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":19821,"nodeType":"FunctionDefinition","src":"84408:78:28","nodes":[],"documentation":{"id":19814,"nodeType":"StructuredDocumentation","src":"84355:48:28","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"84417:8:28","parameters":{"id":19817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19816,"mutability":"mutable","name":"data","nameLocation":"84442:4:28","nodeType":"VariableDeclaration","scope":19821,"src":"84426:20:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19815,"name":"string","nodeType":"ElementaryTypeName","src":"84426:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84425:22:28"},"returnParameters":{"id":19820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19821,"src":"84471:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":19818,"name":"string","nodeType":"ElementaryTypeName","src":"84471:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84470:15:28"},"scope":19822,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":16325,"nodeType":"StructuredDocumentation","src":"184:225:28","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[19822],"name":"VmSafe","nameLocation":"419:6:28","scope":20526,"usedErrors":[]},{"id":20525,"nodeType":"ContractDefinition","src":"84661:17426:28","nodes":[{"id":19831,"nodeType":"FunctionDefinition","src":"84821:61:28","nodes":[],"documentation":{"id":19826,"nodeType":"StructuredDocumentation","src":"84720:96:28","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"84830:10:28","parameters":{"id":19827,"nodeType":"ParameterList","parameters":[],"src":"84840:2:28"},"returnParameters":{"id":19830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19829,"mutability":"mutable","name":"forkId","nameLocation":"84874:6:28","nodeType":"VariableDeclaration","scope":19831,"src":"84866:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19828,"name":"uint256","nodeType":"ElementaryTypeName","src":"84866:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84865:16:28"},"scope":20525,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19837,"nodeType":"FunctionDefinition","src":"84966:51:28","nodes":[],"documentation":{"id":19832,"nodeType":"StructuredDocumentation","src":"84888:73:28","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"84975:15:28","parameters":{"id":19835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19834,"mutability":"mutable","name":"account","nameLocation":"84999:7:28","nodeType":"VariableDeclaration","scope":19837,"src":"84991:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19833,"name":"address","nodeType":"ElementaryTypeName","src":"84991:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84990:17:28"},"returnParameters":{"id":19836,"nodeType":"ParameterList","parameters":[],"src":"85016:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19843,"nodeType":"FunctionDefinition","src":"85056:54:28","nodes":[],"documentation":{"id":19838,"nodeType":"StructuredDocumentation","src":"85023:28:28","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"85065:11:28","parameters":{"id":19841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19840,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"85085:14:28","nodeType":"VariableDeclaration","scope":19843,"src":"85077:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19839,"name":"uint256","nodeType":"ElementaryTypeName","src":"85077:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85076:24:28"},"returnParameters":{"id":19842,"nodeType":"ParameterList","parameters":[],"src":"85109:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19850,"nodeType":"FunctionDefinition","src":"85277:56:28","nodes":[],"documentation":{"id":19844,"nodeType":"StructuredDocumentation","src":"85116:156:28","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"85286:10:28","parameters":{"id":19848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19847,"mutability":"mutable","name":"hashes","nameLocation":"85316:6:28","nodeType":"VariableDeclaration","scope":19850,"src":"85297:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85297:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19846,"nodeType":"ArrayTypeName","src":"85297:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"85296:27:28"},"returnParameters":{"id":19849,"nodeType":"ParameterList","parameters":[],"src":"85332:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19856,"nodeType":"FunctionDefinition","src":"85369:46:28","nodes":[],"documentation":{"id":19851,"nodeType":"StructuredDocumentation","src":"85339:25:28","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"85378:7:28","parameters":{"id":19854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19853,"mutability":"mutable","name":"newChainId","nameLocation":"85394:10:28","nodeType":"VariableDeclaration","scope":19856,"src":"85386:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19852,"name":"uint256","nodeType":"ElementaryTypeName","src":"85386:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85385:20:28"},"returnParameters":{"id":19855,"nodeType":"ParameterList","parameters":[],"src":"85414:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19860,"nodeType":"FunctionDefinition","src":"85454:37:28","nodes":[],"documentation":{"id":19857,"nodeType":"StructuredDocumentation","src":"85421:28:28","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"85463:16:28","parameters":{"id":19858,"nodeType":"ParameterList","parameters":[],"src":"85479:2:28"},"returnParameters":{"id":19859,"nodeType":"ParameterList","parameters":[],"src":"85490:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19866,"nodeType":"FunctionDefinition","src":"85528:48:28","nodes":[],"documentation":{"id":19861,"nodeType":"StructuredDocumentation","src":"85497:26:28","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"85537:8:28","parameters":{"id":19864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19863,"mutability":"mutable","name":"newCoinbase","nameLocation":"85554:11:28","nodeType":"VariableDeclaration","scope":19866,"src":"85546:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19862,"name":"address","nodeType":"ElementaryTypeName","src":"85546:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85545:21:28"},"returnParameters":{"id":19865,"nodeType":"ParameterList","parameters":[],"src":"85575:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19874,"nodeType":"FunctionDefinition","src":"85696:82:28","nodes":[],"documentation":{"id":19867,"nodeType":"StructuredDocumentation","src":"85582:109:28","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"85705:10:28","parameters":{"id":19870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19869,"mutability":"mutable","name":"urlOrAlias","nameLocation":"85732:10:28","nodeType":"VariableDeclaration","scope":19874,"src":"85716:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19868,"name":"string","nodeType":"ElementaryTypeName","src":"85716:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85715:28:28"},"returnParameters":{"id":19873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19872,"mutability":"mutable","name":"forkId","nameLocation":"85770:6:28","nodeType":"VariableDeclaration","scope":19874,"src":"85762:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19871,"name":"uint256","nodeType":"ElementaryTypeName","src":"85762:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85761:16:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19884,"nodeType":"FunctionDefinition","src":"85885:103:28","nodes":[],"documentation":{"id":19875,"nodeType":"StructuredDocumentation","src":"85784:96:28","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"85894:10:28","parameters":{"id":19880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19877,"mutability":"mutable","name":"urlOrAlias","nameLocation":"85921:10:28","nodeType":"VariableDeclaration","scope":19884,"src":"85905:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19876,"name":"string","nodeType":"ElementaryTypeName","src":"85905:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19879,"mutability":"mutable","name":"blockNumber","nameLocation":"85941:11:28","nodeType":"VariableDeclaration","scope":19884,"src":"85933:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19878,"name":"uint256","nodeType":"ElementaryTypeName","src":"85933:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85904:49:28"},"returnParameters":{"id":19883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19882,"mutability":"mutable","name":"forkId","nameLocation":"85980:6:28","nodeType":"VariableDeclaration","scope":19884,"src":"85972:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19881,"name":"uint256","nodeType":"ElementaryTypeName","src":"85972:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85971:16:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19894,"nodeType":"FunctionDefinition","src":"86213:98:28","nodes":[],"documentation":{"id":19885,"nodeType":"StructuredDocumentation","src":"85994:214:28","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"86222:10:28","parameters":{"id":19890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19887,"mutability":"mutable","name":"urlOrAlias","nameLocation":"86249:10:28","nodeType":"VariableDeclaration","scope":19894,"src":"86233:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19886,"name":"string","nodeType":"ElementaryTypeName","src":"86233:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19889,"mutability":"mutable","name":"txHash","nameLocation":"86269:6:28","nodeType":"VariableDeclaration","scope":19894,"src":"86261:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86261:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86232:44:28"},"returnParameters":{"id":19893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19892,"mutability":"mutable","name":"forkId","nameLocation":"86303:6:28","nodeType":"VariableDeclaration","scope":19894,"src":"86295:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19891,"name":"uint256","nodeType":"ElementaryTypeName","src":"86295:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86294:16:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19902,"nodeType":"FunctionDefinition","src":"86446:88:28","nodes":[],"documentation":{"id":19895,"nodeType":"StructuredDocumentation","src":"86317:124:28","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"86455:16:28","parameters":{"id":19898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19897,"mutability":"mutable","name":"urlOrAlias","nameLocation":"86488:10:28","nodeType":"VariableDeclaration","scope":19902,"src":"86472:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19896,"name":"string","nodeType":"ElementaryTypeName","src":"86472:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86471:28:28"},"returnParameters":{"id":19901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19900,"mutability":"mutable","name":"forkId","nameLocation":"86526:6:28","nodeType":"VariableDeclaration","scope":19902,"src":"86518:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19899,"name":"uint256","nodeType":"ElementaryTypeName","src":"86518:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86517:16:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19912,"nodeType":"FunctionDefinition","src":"86658:109:28","nodes":[],"documentation":{"id":19903,"nodeType":"StructuredDocumentation","src":"86540:113:28","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"86667:16:28","parameters":{"id":19908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19905,"mutability":"mutable","name":"urlOrAlias","nameLocation":"86700:10:28","nodeType":"VariableDeclaration","scope":19912,"src":"86684:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19904,"name":"string","nodeType":"ElementaryTypeName","src":"86684:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19907,"mutability":"mutable","name":"blockNumber","nameLocation":"86720:11:28","nodeType":"VariableDeclaration","scope":19912,"src":"86712:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19906,"name":"uint256","nodeType":"ElementaryTypeName","src":"86712:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86683:49:28"},"returnParameters":{"id":19911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19910,"mutability":"mutable","name":"forkId","nameLocation":"86759:6:28","nodeType":"VariableDeclaration","scope":19912,"src":"86751:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19909,"name":"uint256","nodeType":"ElementaryTypeName","src":"86751:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86750:16:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19922,"nodeType":"FunctionDefinition","src":"87003:104:28","nodes":[],"documentation":{"id":19913,"nodeType":"StructuredDocumentation","src":"86773:225:28","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"87012:16:28","parameters":{"id":19918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19915,"mutability":"mutable","name":"urlOrAlias","nameLocation":"87045:10:28","nodeType":"VariableDeclaration","scope":19922,"src":"87029:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19914,"name":"string","nodeType":"ElementaryTypeName","src":"87029:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":19917,"mutability":"mutable","name":"txHash","nameLocation":"87065:6:28","nodeType":"VariableDeclaration","scope":19922,"src":"87057:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87057:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87028:44:28"},"returnParameters":{"id":19921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19920,"mutability":"mutable","name":"forkId","nameLocation":"87099:6:28","nodeType":"VariableDeclaration","scope":19922,"src":"87091:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19919,"name":"uint256","nodeType":"ElementaryTypeName","src":"87091:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87090:16:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19930,"nodeType":"FunctionDefinition","src":"87147:60:28","nodes":[],"documentation":{"id":19923,"nodeType":"StructuredDocumentation","src":"87113:29:28","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"87156:4:28","parameters":{"id":19928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19925,"mutability":"mutable","name":"account","nameLocation":"87169:7:28","nodeType":"VariableDeclaration","scope":19930,"src":"87161:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19924,"name":"address","nodeType":"ElementaryTypeName","src":"87161:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19927,"mutability":"mutable","name":"newBalance","nameLocation":"87186:10:28","nodeType":"VariableDeclaration","scope":19930,"src":"87178:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19926,"name":"uint256","nodeType":"ElementaryTypeName","src":"87178:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87160:37:28"},"returnParameters":{"id":19929,"nodeType":"ParameterList","parameters":[],"src":"87206:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19938,"nodeType":"FunctionDefinition","src":"87445:76:28","nodes":[],"documentation":{"id":19931,"nodeType":"StructuredDocumentation","src":"87213:227:28","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"87454:14:28","parameters":{"id":19934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19933,"mutability":"mutable","name":"snapshotId","nameLocation":"87477:10:28","nodeType":"VariableDeclaration","scope":19938,"src":"87469:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19932,"name":"uint256","nodeType":"ElementaryTypeName","src":"87469:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87468:20:28"},"returnParameters":{"id":19937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19936,"mutability":"mutable","name":"success","nameLocation":"87512:7:28","nodeType":"VariableDeclaration","scope":19938,"src":"87507:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19935,"name":"bool","nodeType":"ElementaryTypeName","src":"87507:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"87506:14:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19942,"nodeType":"FunctionDefinition","src":"87593:36:28","nodes":[],"documentation":{"id":19939,"nodeType":"StructuredDocumentation","src":"87527:61:28","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"87602:15:28","parameters":{"id":19940,"nodeType":"ParameterList","parameters":[],"src":"87617:2:28"},"returnParameters":{"id":19941,"nodeType":"ParameterList","parameters":[],"src":"87628:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19948,"nodeType":"FunctionDefinition","src":"87805:52:28","nodes":[],"documentation":{"id":19943,"nodeType":"StructuredDocumentation","src":"87635:165:28","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"87814:10:28","parameters":{"id":19946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19945,"mutability":"mutable","name":"newDifficulty","nameLocation":"87833:13:28","nodeType":"VariableDeclaration","scope":19948,"src":"87825:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19944,"name":"uint256","nodeType":"ElementaryTypeName","src":"87825:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87824:23:28"},"returnParameters":{"id":19947,"nodeType":"ParameterList","parameters":[],"src":"87856:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19954,"nodeType":"FunctionDefinition","src":"87916:61:28","nodes":[],"documentation":{"id":19949,"nodeType":"StructuredDocumentation","src":"87863:48:28","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"87925:9:28","parameters":{"id":19952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19951,"mutability":"mutable","name":"pathToStateJson","nameLocation":"87951:15:28","nodeType":"VariableDeclaration","scope":19954,"src":"87935:31:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19950,"name":"string","nodeType":"ElementaryTypeName","src":"87935:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87934:33:28"},"returnParameters":{"id":19953,"nodeType":"ParameterList","parameters":[],"src":"87976:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19962,"nodeType":"FunctionDefinition","src":"88014:74:28","nodes":[],"documentation":{"id":19955,"nodeType":"StructuredDocumentation","src":"87983:26:28","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"88023:4:28","parameters":{"id":19960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19957,"mutability":"mutable","name":"target","nameLocation":"88036:6:28","nodeType":"VariableDeclaration","scope":19962,"src":"88028:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19956,"name":"address","nodeType":"ElementaryTypeName","src":"88028:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19959,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"88059:18:28","nodeType":"VariableDeclaration","scope":19962,"src":"88044:33:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19958,"name":"bytes","nodeType":"ElementaryTypeName","src":"88044:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88027:51:28"},"returnParameters":{"id":19961,"nodeType":"ParameterList","parameters":[],"src":"88087:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19968,"nodeType":"FunctionDefinition","src":"88124:42:28","nodes":[],"documentation":{"id":19963,"nodeType":"StructuredDocumentation","src":"88094:25:28","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"88133:3:28","parameters":{"id":19966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19965,"mutability":"mutable","name":"newBasefee","nameLocation":"88145:10:28","nodeType":"VariableDeclaration","scope":19968,"src":"88137:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19964,"name":"uint256","nodeType":"ElementaryTypeName","src":"88137:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88136:20:28"},"returnParameters":{"id":19967,"nodeType":"ParameterList","parameters":[],"src":"88165:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19975,"nodeType":"FunctionDefinition","src":"88344:73:28","nodes":[],"documentation":{"id":19969,"nodeType":"StructuredDocumentation","src":"88172:167:28","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"88353:13:28","parameters":{"id":19970,"nodeType":"ParameterList","parameters":[],"src":"88366:2:28"},"returnParameters":{"id":19974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19973,"mutability":"mutable","name":"hashes","nameLocation":"88409:6:28","nodeType":"VariableDeclaration","scope":19975,"src":"88392:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":19971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"88392:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":19972,"nodeType":"ArrayTypeName","src":"88392:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"88391:25:28"},"scope":20525,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19983,"nodeType":"FunctionDefinition","src":"88484:79:28","nodes":[],"documentation":{"id":19976,"nodeType":"StructuredDocumentation","src":"88423:56:28","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"88493:12:28","parameters":{"id":19979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19978,"mutability":"mutable","name":"account","nameLocation":"88514:7:28","nodeType":"VariableDeclaration","scope":19983,"src":"88506:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19977,"name":"address","nodeType":"ElementaryTypeName","src":"88506:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88505:17:28"},"returnParameters":{"id":19982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19981,"mutability":"mutable","name":"persistent","nameLocation":"88551:10:28","nodeType":"VariableDeclaration","scope":19983,"src":"88546:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19980,"name":"bool","nodeType":"ElementaryTypeName","src":"88546:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"88545:17:28"},"scope":20525,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19989,"nodeType":"FunctionDefinition","src":"88644:63:28","nodes":[],"documentation":{"id":19984,"nodeType":"StructuredDocumentation","src":"88569:70:28","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"88653:10:28","parameters":{"id":19987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19986,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"88680:16:28","nodeType":"VariableDeclaration","scope":19989,"src":"88664:32:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19985,"name":"string","nodeType":"ElementaryTypeName","src":"88664:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88663:34:28"},"returnParameters":{"id":19988,"nodeType":"ParameterList","parameters":[],"src":"88706:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19995,"nodeType":"FunctionDefinition","src":"88910:50:28","nodes":[],"documentation":{"id":19990,"nodeType":"StructuredDocumentation","src":"88713:192:28","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"88919:14:28","parameters":{"id":19993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19992,"mutability":"mutable","name":"account","nameLocation":"88942:7:28","nodeType":"VariableDeclaration","scope":19995,"src":"88934:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19991,"name":"address","nodeType":"ElementaryTypeName","src":"88934:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88933:17:28"},"returnParameters":{"id":19994,"nodeType":"ParameterList","parameters":[],"src":"88959:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20003,"nodeType":"FunctionDefinition","src":"89005:69:28","nodes":[],"documentation":{"id":19996,"nodeType":"StructuredDocumentation","src":"88966:34:28","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"89014:14:28","parameters":{"id":20001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19998,"mutability":"mutable","name":"account0","nameLocation":"89037:8:28","nodeType":"VariableDeclaration","scope":20003,"src":"89029:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19997,"name":"address","nodeType":"ElementaryTypeName","src":"89029:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20000,"mutability":"mutable","name":"account1","nameLocation":"89055:8:28","nodeType":"VariableDeclaration","scope":20003,"src":"89047:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19999,"name":"address","nodeType":"ElementaryTypeName","src":"89047:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89028:36:28"},"returnParameters":{"id":20002,"nodeType":"ParameterList","parameters":[],"src":"89073:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20013,"nodeType":"FunctionDefinition","src":"89119:87:28","nodes":[],"documentation":{"id":20004,"nodeType":"StructuredDocumentation","src":"89080:34:28","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"89128:14:28","parameters":{"id":20011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20006,"mutability":"mutable","name":"account0","nameLocation":"89151:8:28","nodeType":"VariableDeclaration","scope":20013,"src":"89143:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20005,"name":"address","nodeType":"ElementaryTypeName","src":"89143:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20008,"mutability":"mutable","name":"account1","nameLocation":"89169:8:28","nodeType":"VariableDeclaration","scope":20013,"src":"89161:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20007,"name":"address","nodeType":"ElementaryTypeName","src":"89161:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20010,"mutability":"mutable","name":"account2","nameLocation":"89187:8:28","nodeType":"VariableDeclaration","scope":20013,"src":"89179:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20009,"name":"address","nodeType":"ElementaryTypeName","src":"89179:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89142:54:28"},"returnParameters":{"id":20012,"nodeType":"ParameterList","parameters":[],"src":"89205:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20020,"nodeType":"FunctionDefinition","src":"89251:62:28","nodes":[],"documentation":{"id":20014,"nodeType":"StructuredDocumentation","src":"89212:34:28","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"89260:14:28","parameters":{"id":20018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20017,"mutability":"mutable","name":"accounts","nameLocation":"89294:8:28","nodeType":"VariableDeclaration","scope":20020,"src":"89275:27:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":20015,"name":"address","nodeType":"ElementaryTypeName","src":"89275:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":20016,"nodeType":"ArrayTypeName","src":"89275:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"89274:29:28"},"returnParameters":{"id":20019,"nodeType":"ParameterList","parameters":[],"src":"89312:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20030,"nodeType":"FunctionDefinition","src":"89384:97:28","nodes":[],"documentation":{"id":20021,"nodeType":"StructuredDocumentation","src":"89319:60:28","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"89393:14:28","parameters":{"id":20028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20023,"mutability":"mutable","name":"callee","nameLocation":"89416:6:28","nodeType":"VariableDeclaration","scope":20030,"src":"89408:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20022,"name":"address","nodeType":"ElementaryTypeName","src":"89408:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20025,"mutability":"mutable","name":"data","nameLocation":"89439:4:28","nodeType":"VariableDeclaration","scope":20030,"src":"89424:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20024,"name":"bytes","nodeType":"ElementaryTypeName","src":"89424:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20027,"mutability":"mutable","name":"revertData","nameLocation":"89460:10:28","nodeType":"VariableDeclaration","scope":20030,"src":"89445:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20026,"name":"bytes","nodeType":"ElementaryTypeName","src":"89445:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"89407:64:28"},"returnParameters":{"id":20029,"nodeType":"ParameterList","parameters":[],"src":"89480:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20042,"nodeType":"FunctionDefinition","src":"89581:123:28","nodes":[],"documentation":{"id":20031,"nodeType":"StructuredDocumentation","src":"89487:89:28","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"89590:14:28","parameters":{"id":20040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20033,"mutability":"mutable","name":"callee","nameLocation":"89613:6:28","nodeType":"VariableDeclaration","scope":20042,"src":"89605:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20032,"name":"address","nodeType":"ElementaryTypeName","src":"89605:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20035,"mutability":"mutable","name":"msgValue","nameLocation":"89629:8:28","nodeType":"VariableDeclaration","scope":20042,"src":"89621:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20034,"name":"uint256","nodeType":"ElementaryTypeName","src":"89621:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20037,"mutability":"mutable","name":"data","nameLocation":"89654:4:28","nodeType":"VariableDeclaration","scope":20042,"src":"89639:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20036,"name":"bytes","nodeType":"ElementaryTypeName","src":"89639:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20039,"mutability":"mutable","name":"revertData","nameLocation":"89675:10:28","nodeType":"VariableDeclaration","scope":20042,"src":"89660:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20038,"name":"bytes","nodeType":"ElementaryTypeName","src":"89660:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"89604:82:28"},"returnParameters":{"id":20041,"nodeType":"ParameterList","parameters":[],"src":"89703:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20052,"nodeType":"FunctionDefinition","src":"89964:91:28","nodes":[],"documentation":{"id":20043,"nodeType":"StructuredDocumentation","src":"89710:249:28","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"89973:8:28","parameters":{"id":20050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20045,"mutability":"mutable","name":"callee","nameLocation":"89990:6:28","nodeType":"VariableDeclaration","scope":20052,"src":"89982:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20044,"name":"address","nodeType":"ElementaryTypeName","src":"89982:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20047,"mutability":"mutable","name":"data","nameLocation":"90013:4:28","nodeType":"VariableDeclaration","scope":20052,"src":"89998:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20046,"name":"bytes","nodeType":"ElementaryTypeName","src":"89998:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20049,"mutability":"mutable","name":"returnData","nameLocation":"90034:10:28","nodeType":"VariableDeclaration","scope":20052,"src":"90019:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20048,"name":"bytes","nodeType":"ElementaryTypeName","src":"90019:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"89981:64:28"},"returnParameters":{"id":20051,"nodeType":"ParameterList","parameters":[],"src":"90054:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20064,"nodeType":"FunctionDefinition","src":"90230:109:28","nodes":[],"documentation":{"id":20053,"nodeType":"StructuredDocumentation","src":"90061:164:28","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"90239:8:28","parameters":{"id":20062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20055,"mutability":"mutable","name":"callee","nameLocation":"90256:6:28","nodeType":"VariableDeclaration","scope":20064,"src":"90248:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20054,"name":"address","nodeType":"ElementaryTypeName","src":"90248:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20057,"mutability":"mutable","name":"msgValue","nameLocation":"90272:8:28","nodeType":"VariableDeclaration","scope":20064,"src":"90264:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20056,"name":"uint256","nodeType":"ElementaryTypeName","src":"90264:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20059,"mutability":"mutable","name":"data","nameLocation":"90297:4:28","nodeType":"VariableDeclaration","scope":20064,"src":"90282:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20058,"name":"bytes","nodeType":"ElementaryTypeName","src":"90282:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20061,"mutability":"mutable","name":"returnData","nameLocation":"90318:10:28","nodeType":"VariableDeclaration","scope":20064,"src":"90303:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20060,"name":"bytes","nodeType":"ElementaryTypeName","src":"90303:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90247:82:28"},"returnParameters":{"id":20063,"nodeType":"ParameterList","parameters":[],"src":"90338:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20074,"nodeType":"FunctionDefinition","src":"90845:84:28","nodes":[],"documentation":{"id":20065,"nodeType":"StructuredDocumentation","src":"90345:495:28","text":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls\n `target` with the same calldata. This functionality is similar to a delegate call made to\n `target` contract from `callee`.\n Can be used to substitute a call to a function with another implementation that captures\n the primary logic of the original function but is easier to reason about.\n If calldata is not a strict match then partial match by selector is attempted."},"functionSelector":"adf84d21","implemented":false,"kind":"function","modifiers":[],"name":"mockFunction","nameLocation":"90854:12:28","parameters":{"id":20072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20067,"mutability":"mutable","name":"callee","nameLocation":"90875:6:28","nodeType":"VariableDeclaration","scope":20074,"src":"90867:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20066,"name":"address","nodeType":"ElementaryTypeName","src":"90867:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20069,"mutability":"mutable","name":"target","nameLocation":"90891:6:28","nodeType":"VariableDeclaration","scope":20074,"src":"90883:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20068,"name":"address","nodeType":"ElementaryTypeName","src":"90883:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20071,"mutability":"mutable","name":"data","nameLocation":"90914:4:28","nodeType":"VariableDeclaration","scope":20074,"src":"90899:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20070,"name":"bytes","nodeType":"ElementaryTypeName","src":"90899:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90866:53:28"},"returnParameters":{"id":20073,"nodeType":"ParameterList","parameters":[],"src":"90928:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20080,"nodeType":"FunctionDefinition","src":"91004:43:28","nodes":[],"documentation":{"id":20075,"nodeType":"StructuredDocumentation","src":"90935:64:28","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"91013:5:28","parameters":{"id":20078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20077,"mutability":"mutable","name":"msgSender","nameLocation":"91027:9:28","nodeType":"VariableDeclaration","scope":20080,"src":"91019:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20076,"name":"address","nodeType":"ElementaryTypeName","src":"91019:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91018:19:28"},"returnParameters":{"id":20079,"nodeType":"ParameterList","parameters":[],"src":"91046:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20088,"nodeType":"FunctionDefinition","src":"91166:61:28","nodes":[],"documentation":{"id":20081,"nodeType":"StructuredDocumentation","src":"91053:108:28","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"91175:5:28","parameters":{"id":20086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20083,"mutability":"mutable","name":"msgSender","nameLocation":"91189:9:28","nodeType":"VariableDeclaration","scope":20088,"src":"91181:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20082,"name":"address","nodeType":"ElementaryTypeName","src":"91181:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20085,"mutability":"mutable","name":"txOrigin","nameLocation":"91208:8:28","nodeType":"VariableDeclaration","scope":20088,"src":"91200:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20084,"name":"address","nodeType":"ElementaryTypeName","src":"91200:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91180:37:28"},"returnParameters":{"id":20087,"nodeType":"ParameterList","parameters":[],"src":"91226:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20094,"nodeType":"FunctionDefinition","src":"91404:52:28","nodes":[],"documentation":{"id":20089,"nodeType":"StructuredDocumentation","src":"91233:166:28","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"91413:10:28","parameters":{"id":20092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20091,"mutability":"mutable","name":"newPrevrandao","nameLocation":"91432:13:28","nodeType":"VariableDeclaration","scope":20094,"src":"91424:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"91424:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"91423:23:28"},"returnParameters":{"id":20093,"nodeType":"ParameterList","parameters":[],"src":"91455:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20100,"nodeType":"FunctionDefinition","src":"91633:52:28","nodes":[],"documentation":{"id":20095,"nodeType":"StructuredDocumentation","src":"91462:166:28","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"91642:10:28","parameters":{"id":20098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20097,"mutability":"mutable","name":"newPrevrandao","nameLocation":"91661:13:28","nodeType":"VariableDeclaration","scope":20100,"src":"91653:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20096,"name":"uint256","nodeType":"ElementaryTypeName","src":"91653:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"91652:23:28"},"returnParameters":{"id":20099,"nodeType":"ParameterList","parameters":[],"src":"91684:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20111,"nodeType":"FunctionDefinition","src":"91813:101:28","nodes":[],"documentation":{"id":20101,"nodeType":"StructuredDocumentation","src":"91691:117:28","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"91822:11:28","parameters":{"id":20102,"nodeType":"ParameterList","parameters":[],"src":"91833:2:28"},"returnParameters":{"id":20110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20105,"mutability":"mutable","name":"callerMode","nameLocation":"91865:10:28","nodeType":"VariableDeclaration","scope":20111,"src":"91854:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$16331","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":20104,"nodeType":"UserDefinedTypeName","pathNode":{"id":20103,"name":"CallerMode","nameLocations":["91854:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":16331,"src":"91854:10:28"},"referencedDeclaration":16331,"src":"91854:10:28","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$16331","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":20107,"mutability":"mutable","name":"msgSender","nameLocation":"91885:9:28","nodeType":"VariableDeclaration","scope":20111,"src":"91877:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20106,"name":"address","nodeType":"ElementaryTypeName","src":"91877:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20109,"mutability":"mutable","name":"txOrigin","nameLocation":"91904:8:28","nodeType":"VariableDeclaration","scope":20111,"src":"91896:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20108,"name":"address","nodeType":"ElementaryTypeName","src":"91896:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"91853:60:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20117,"nodeType":"FunctionDefinition","src":"92002:46:28","nodes":[],"documentation":{"id":20112,"nodeType":"StructuredDocumentation","src":"91920:77:28","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"92011:10:28","parameters":{"id":20115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20114,"mutability":"mutable","name":"account","nameLocation":"92030:7:28","nodeType":"VariableDeclaration","scope":20117,"src":"92022:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20113,"name":"address","nodeType":"ElementaryTypeName","src":"92022:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92021:17:28"},"returnParameters":{"id":20116,"nodeType":"ParameterList","parameters":[],"src":"92047:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20125,"nodeType":"FunctionDefinition","src":"92391:70:28","nodes":[],"documentation":{"id":20118,"nodeType":"StructuredDocumentation","src":"92054:332:28","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"92400:8:28","parameters":{"id":20121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20120,"mutability":"mutable","name":"snapshotId","nameLocation":"92417:10:28","nodeType":"VariableDeclaration","scope":20125,"src":"92409:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20119,"name":"uint256","nodeType":"ElementaryTypeName","src":"92409:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92408:20:28"},"returnParameters":{"id":20124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20123,"mutability":"mutable","name":"success","nameLocation":"92452:7:28","nodeType":"VariableDeclaration","scope":20125,"src":"92447:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20122,"name":"bool","nodeType":"ElementaryTypeName","src":"92447:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"92446:14:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20133,"nodeType":"FunctionDefinition","src":"92744:79:28","nodes":[],"documentation":{"id":20126,"nodeType":"StructuredDocumentation","src":"92467:272:28","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"92753:17:28","parameters":{"id":20129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20128,"mutability":"mutable","name":"snapshotId","nameLocation":"92779:10:28","nodeType":"VariableDeclaration","scope":20133,"src":"92771:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20127,"name":"uint256","nodeType":"ElementaryTypeName","src":"92771:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92770:20:28"},"returnParameters":{"id":20132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20131,"mutability":"mutable","name":"success","nameLocation":"92814:7:28","nodeType":"VariableDeclaration","scope":20133,"src":"92809:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20130,"name":"bool","nodeType":"ElementaryTypeName","src":"92809:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"92808:14:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20139,"nodeType":"FunctionDefinition","src":"92920:52:28","nodes":[],"documentation":{"id":20134,"nodeType":"StructuredDocumentation","src":"92829:86:28","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"92929:16:28","parameters":{"id":20137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20136,"mutability":"mutable","name":"account","nameLocation":"92954:7:28","nodeType":"VariableDeclaration","scope":20139,"src":"92946:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20135,"name":"address","nodeType":"ElementaryTypeName","src":"92946:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92945:17:28"},"returnParameters":{"id":20138,"nodeType":"ParameterList","parameters":[],"src":"92971:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20146,"nodeType":"FunctionDefinition","src":"93019:64:28","nodes":[],"documentation":{"id":20140,"nodeType":"StructuredDocumentation","src":"92978:36:28","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"93028:16:28","parameters":{"id":20144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20143,"mutability":"mutable","name":"accounts","nameLocation":"93064:8:28","nodeType":"VariableDeclaration","scope":20146,"src":"93045:27:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":20141,"name":"address","nodeType":"ElementaryTypeName","src":"93045:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":20142,"nodeType":"ArrayTypeName","src":"93045:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"93044:29:28"},"returnParameters":{"id":20145,"nodeType":"ParameterList","parameters":[],"src":"93082:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20152,"nodeType":"FunctionDefinition","src":"93118:42:28","nodes":[],"documentation":{"id":20147,"nodeType":"StructuredDocumentation","src":"93089:24:28","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"93127:4:28","parameters":{"id":20150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20149,"mutability":"mutable","name":"newHeight","nameLocation":"93140:9:28","nodeType":"VariableDeclaration","scope":20152,"src":"93132:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20148,"name":"uint256","nodeType":"ElementaryTypeName","src":"93132:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93131:19:28"},"returnParameters":{"id":20151,"nodeType":"ParameterList","parameters":[],"src":"93159:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20158,"nodeType":"FunctionDefinition","src":"93299:48:28","nodes":[],"documentation":{"id":20153,"nodeType":"StructuredDocumentation","src":"93166:128:28","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"93308:8:28","parameters":{"id":20156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20155,"mutability":"mutable","name":"blockNumber","nameLocation":"93325:11:28","nodeType":"VariableDeclaration","scope":20158,"src":"93317:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20154,"name":"uint256","nodeType":"ElementaryTypeName","src":"93317:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93316:21:28"},"returnParameters":{"id":20157,"nodeType":"ParameterList","parameters":[],"src":"93346:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20164,"nodeType":"FunctionDefinition","src":"93562:43:28","nodes":[],"documentation":{"id":20159,"nodeType":"StructuredDocumentation","src":"93353:204:28","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"93571:8:28","parameters":{"id":20162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20161,"mutability":"mutable","name":"txHash","nameLocation":"93588:6:28","nodeType":"VariableDeclaration","scope":20164,"src":"93580:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"93580:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"93579:16:28"},"returnParameters":{"id":20163,"nodeType":"ParameterList","parameters":[],"src":"93604:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20172,"nodeType":"FunctionDefinition","src":"93665:64:28","nodes":[],"documentation":{"id":20165,"nodeType":"StructuredDocumentation","src":"93611:49:28","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"93674:8:28","parameters":{"id":20170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20167,"mutability":"mutable","name":"forkId","nameLocation":"93691:6:28","nodeType":"VariableDeclaration","scope":20172,"src":"93683:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20166,"name":"uint256","nodeType":"ElementaryTypeName","src":"93683:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20169,"mutability":"mutable","name":"blockNumber","nameLocation":"93707:11:28","nodeType":"VariableDeclaration","scope":20172,"src":"93699:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20168,"name":"uint256","nodeType":"ElementaryTypeName","src":"93699:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93682:37:28"},"returnParameters":{"id":20171,"nodeType":"ParameterList","parameters":[],"src":"93728:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20180,"nodeType":"FunctionDefinition","src":"93865:59:28","nodes":[],"documentation":{"id":20173,"nodeType":"StructuredDocumentation","src":"93735:125:28","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"93874:8:28","parameters":{"id":20178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20175,"mutability":"mutable","name":"forkId","nameLocation":"93891:6:28","nodeType":"VariableDeclaration","scope":20180,"src":"93883:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20174,"name":"uint256","nodeType":"ElementaryTypeName","src":"93883:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20177,"mutability":"mutable","name":"txHash","nameLocation":"93907:6:28","nodeType":"VariableDeclaration","scope":20180,"src":"93899:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"93899:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"93882:32:28"},"returnParameters":{"id":20179,"nodeType":"ParameterList","parameters":[],"src":"93923:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20186,"nodeType":"FunctionDefinition","src":"94037:45:28","nodes":[],"documentation":{"id":20181,"nodeType":"StructuredDocumentation","src":"93930:102:28","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"94046:10:28","parameters":{"id":20184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20183,"mutability":"mutable","name":"forkId","nameLocation":"94065:6:28","nodeType":"VariableDeclaration","scope":20186,"src":"94057:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20182,"name":"uint256","nodeType":"ElementaryTypeName","src":"94057:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94056:16:28"},"returnParameters":{"id":20185,"nodeType":"ParameterList","parameters":[],"src":"94081:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20194,"nodeType":"FunctionDefinition","src":"94232:71:28","nodes":[],"documentation":{"id":20187,"nodeType":"StructuredDocumentation","src":"94088:139:28","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"94241:12:28","parameters":{"id":20192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20189,"mutability":"mutable","name":"blockNumber","nameLocation":"94262:11:28","nodeType":"VariableDeclaration","scope":20194,"src":"94254:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20188,"name":"uint256","nodeType":"ElementaryTypeName","src":"94254:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20191,"mutability":"mutable","name":"blockHash","nameLocation":"94283:9:28","nodeType":"VariableDeclaration","scope":20194,"src":"94275:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"94275:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"94253:40:28"},"returnParameters":{"id":20193,"nodeType":"ParameterList","parameters":[],"src":"94302:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20202,"nodeType":"FunctionDefinition","src":"94401:61:28","nodes":[],"documentation":{"id":20195,"nodeType":"StructuredDocumentation","src":"94309:87:28","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"94410:8:28","parameters":{"id":20200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20197,"mutability":"mutable","name":"account","nameLocation":"94427:7:28","nodeType":"VariableDeclaration","scope":20202,"src":"94419:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20196,"name":"address","nodeType":"ElementaryTypeName","src":"94419:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20199,"mutability":"mutable","name":"newNonce","nameLocation":"94443:8:28","nodeType":"VariableDeclaration","scope":20202,"src":"94436:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20198,"name":"uint64","nodeType":"ElementaryTypeName","src":"94436:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94418:34:28"},"returnParameters":{"id":20201,"nodeType":"ParameterList","parameters":[],"src":"94461:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20210,"nodeType":"FunctionDefinition","src":"94528:67:28","nodes":[],"documentation":{"id":20203,"nodeType":"StructuredDocumentation","src":"94468:55:28","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"94537:14:28","parameters":{"id":20208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20205,"mutability":"mutable","name":"account","nameLocation":"94560:7:28","nodeType":"VariableDeclaration","scope":20210,"src":"94552:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20204,"name":"address","nodeType":"ElementaryTypeName","src":"94552:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20207,"mutability":"mutable","name":"newNonce","nameLocation":"94576:8:28","nodeType":"VariableDeclaration","scope":20210,"src":"94569:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20206,"name":"uint64","nodeType":"ElementaryTypeName","src":"94569:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94551:34:28"},"returnParameters":{"id":20209,"nodeType":"ParameterList","parameters":[],"src":"94594:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20216,"nodeType":"FunctionDefinition","src":"94750:58:28","nodes":[],"documentation":{"id":20211,"nodeType":"StructuredDocumentation","src":"94601:144:28","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"94759:8:28","parameters":{"id":20212,"nodeType":"ParameterList","parameters":[],"src":"94767:2:28"},"returnParameters":{"id":20215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20214,"mutability":"mutable","name":"snapshotId","nameLocation":"94796:10:28","nodeType":"VariableDeclaration","scope":20216,"src":"94788:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20213,"name":"uint256","nodeType":"ElementaryTypeName","src":"94788:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"94787:20:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20222,"nodeType":"FunctionDefinition","src":"94915:48:28","nodes":[],"documentation":{"id":20217,"nodeType":"StructuredDocumentation","src":"94814:96:28","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"94924:10:28","parameters":{"id":20220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20219,"mutability":"mutable","name":"msgSender","nameLocation":"94943:9:28","nodeType":"VariableDeclaration","scope":20222,"src":"94935:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20218,"name":"address","nodeType":"ElementaryTypeName","src":"94935:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94934:19:28"},"returnParameters":{"id":20221,"nodeType":"ParameterList","parameters":[],"src":"94962:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20230,"nodeType":"FunctionDefinition","src":"95114:66:28","nodes":[],"documentation":{"id":20223,"nodeType":"StructuredDocumentation","src":"94969:140:28","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"95123:10:28","parameters":{"id":20228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20225,"mutability":"mutable","name":"msgSender","nameLocation":"95142:9:28","nodeType":"VariableDeclaration","scope":20230,"src":"95134:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20224,"name":"address","nodeType":"ElementaryTypeName","src":"95134:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20227,"mutability":"mutable","name":"txOrigin","nameLocation":"95161:8:28","nodeType":"VariableDeclaration","scope":20230,"src":"95153:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20226,"name":"address","nodeType":"ElementaryTypeName","src":"95153:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"95133:37:28"},"returnParameters":{"id":20229,"nodeType":"ParameterList","parameters":[],"src":"95179:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20234,"nodeType":"FunctionDefinition","src":"95255:30:28","nodes":[],"documentation":{"id":20231,"nodeType":"StructuredDocumentation","src":"95186:64:28","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"95264:9:28","parameters":{"id":20232,"nodeType":"ParameterList","parameters":[],"src":"95273:2:28"},"returnParameters":{"id":20233,"nodeType":"ParameterList","parameters":[],"src":"95284:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20244,"nodeType":"FunctionDefinition","src":"95343:69:28","nodes":[],"documentation":{"id":20235,"nodeType":"StructuredDocumentation","src":"95291:47:28","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"95352:5:28","parameters":{"id":20242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20237,"mutability":"mutable","name":"target","nameLocation":"95366:6:28","nodeType":"VariableDeclaration","scope":20244,"src":"95358:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20236,"name":"address","nodeType":"ElementaryTypeName","src":"95358:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20239,"mutability":"mutable","name":"slot","nameLocation":"95382:4:28","nodeType":"VariableDeclaration","scope":20244,"src":"95374:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95374:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":20241,"mutability":"mutable","name":"value","nameLocation":"95396:5:28","nodeType":"VariableDeclaration","scope":20244,"src":"95388:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95388:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"95357:45:28"},"returnParameters":{"id":20243,"nodeType":"ParameterList","parameters":[],"src":"95411:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20250,"nodeType":"FunctionDefinition","src":"95515:43:28","nodes":[],"documentation":{"id":20245,"nodeType":"StructuredDocumentation","src":"95418:92:28","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"95524:8:28","parameters":{"id":20248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20247,"mutability":"mutable","name":"txHash","nameLocation":"95541:6:28","nodeType":"VariableDeclaration","scope":20250,"src":"95533:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95533:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"95532:16:28"},"returnParameters":{"id":20249,"nodeType":"ParameterList","parameters":[],"src":"95557:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20258,"nodeType":"FunctionDefinition","src":"95660:59:28","nodes":[],"documentation":{"id":20251,"nodeType":"StructuredDocumentation","src":"95564:91:28","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"95669:8:28","parameters":{"id":20256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20253,"mutability":"mutable","name":"forkId","nameLocation":"95686:6:28","nodeType":"VariableDeclaration","scope":20258,"src":"95678:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20252,"name":"uint256","nodeType":"ElementaryTypeName","src":"95678:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20255,"mutability":"mutable","name":"txHash","nameLocation":"95702:6:28","nodeType":"VariableDeclaration","scope":20258,"src":"95694:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"95694:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"95677:32:28"},"returnParameters":{"id":20257,"nodeType":"ParameterList","parameters":[],"src":"95718:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20264,"nodeType":"FunctionDefinition","src":"95753:50:28","nodes":[],"documentation":{"id":20259,"nodeType":"StructuredDocumentation","src":"95725:23:28","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"95762:10:28","parameters":{"id":20262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20261,"mutability":"mutable","name":"newGasPrice","nameLocation":"95781:11:28","nodeType":"VariableDeclaration","scope":20264,"src":"95773:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20260,"name":"uint256","nodeType":"ElementaryTypeName","src":"95773:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95772:21:28"},"returnParameters":{"id":20263,"nodeType":"ParameterList","parameters":[],"src":"95802:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20270,"nodeType":"FunctionDefinition","src":"95841:45:28","nodes":[],"documentation":{"id":20265,"nodeType":"StructuredDocumentation","src":"95809:27:28","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"95850:4:28","parameters":{"id":20268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20267,"mutability":"mutable","name":"newTimestamp","nameLocation":"95863:12:28","nodeType":"VariableDeclaration","scope":20270,"src":"95855:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20266,"name":"uint256","nodeType":"ElementaryTypeName","src":"95855:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95854:22:28"},"returnParameters":{"id":20269,"nodeType":"ParameterList","parameters":[],"src":"95885:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20282,"nodeType":"FunctionDefinition","src":"96038:105:28","nodes":[],"documentation":{"id":20271,"nodeType":"StructuredDocumentation","src":"95926:107:28","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"96047:16:28","parameters":{"id":20280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20273,"mutability":"mutable","name":"callee","nameLocation":"96072:6:28","nodeType":"VariableDeclaration","scope":20282,"src":"96064:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20272,"name":"address","nodeType":"ElementaryTypeName","src":"96064:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20275,"mutability":"mutable","name":"msgValue","nameLocation":"96088:8:28","nodeType":"VariableDeclaration","scope":20282,"src":"96080:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20274,"name":"uint256","nodeType":"ElementaryTypeName","src":"96080:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20277,"mutability":"mutable","name":"minGas","nameLocation":"96105:6:28","nodeType":"VariableDeclaration","scope":20282,"src":"96098:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20276,"name":"uint64","nodeType":"ElementaryTypeName","src":"96098:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":20279,"mutability":"mutable","name":"data","nameLocation":"96128:4:28","nodeType":"VariableDeclaration","scope":20282,"src":"96113:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20278,"name":"bytes","nodeType":"ElementaryTypeName","src":"96113:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96063:70:28"},"returnParameters":{"id":20281,"nodeType":"ParameterList","parameters":[],"src":"96142:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20296,"nodeType":"FunctionDefinition","src":"96276:127:28","nodes":[],"documentation":{"id":20283,"nodeType":"StructuredDocumentation","src":"96149:122:28","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"96285:16:28","parameters":{"id":20294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20285,"mutability":"mutable","name":"callee","nameLocation":"96310:6:28","nodeType":"VariableDeclaration","scope":20296,"src":"96302:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20284,"name":"address","nodeType":"ElementaryTypeName","src":"96302:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20287,"mutability":"mutable","name":"msgValue","nameLocation":"96326:8:28","nodeType":"VariableDeclaration","scope":20296,"src":"96318:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20286,"name":"uint256","nodeType":"ElementaryTypeName","src":"96318:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20289,"mutability":"mutable","name":"minGas","nameLocation":"96343:6:28","nodeType":"VariableDeclaration","scope":20296,"src":"96336:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20288,"name":"uint64","nodeType":"ElementaryTypeName","src":"96336:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":20291,"mutability":"mutable","name":"data","nameLocation":"96366:4:28","nodeType":"VariableDeclaration","scope":20296,"src":"96351:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20290,"name":"bytes","nodeType":"ElementaryTypeName","src":"96351:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20293,"mutability":"mutable","name":"count","nameLocation":"96379:5:28","nodeType":"VariableDeclaration","scope":20296,"src":"96372:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20292,"name":"uint64","nodeType":"ElementaryTypeName","src":"96372:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"96301:84:28"},"returnParameters":{"id":20295,"nodeType":"ParameterList","parameters":[],"src":"96402:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20304,"nodeType":"FunctionDefinition","src":"96535:66:28","nodes":[],"documentation":{"id":20297,"nodeType":"StructuredDocumentation","src":"96409:121:28","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"96544:10:28","parameters":{"id":20302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20299,"mutability":"mutable","name":"callee","nameLocation":"96563:6:28","nodeType":"VariableDeclaration","scope":20304,"src":"96555:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20298,"name":"address","nodeType":"ElementaryTypeName","src":"96555:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20301,"mutability":"mutable","name":"data","nameLocation":"96586:4:28","nodeType":"VariableDeclaration","scope":20304,"src":"96571:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20300,"name":"bytes","nodeType":"ElementaryTypeName","src":"96571:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96554:37:28"},"returnParameters":{"id":20303,"nodeType":"ParameterList","parameters":[],"src":"96600:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20314,"nodeType":"FunctionDefinition","src":"96688:80:28","nodes":[],"documentation":{"id":20305,"nodeType":"StructuredDocumentation","src":"96607:76:28","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"96697:10:28","parameters":{"id":20312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20307,"mutability":"mutable","name":"callee","nameLocation":"96716:6:28","nodeType":"VariableDeclaration","scope":20314,"src":"96708:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20306,"name":"address","nodeType":"ElementaryTypeName","src":"96708:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20309,"mutability":"mutable","name":"data","nameLocation":"96739:4:28","nodeType":"VariableDeclaration","scope":20314,"src":"96724:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20308,"name":"bytes","nodeType":"ElementaryTypeName","src":"96724:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20311,"mutability":"mutable","name":"count","nameLocation":"96752:5:28","nodeType":"VariableDeclaration","scope":20314,"src":"96745:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20310,"name":"uint64","nodeType":"ElementaryTypeName","src":"96745:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"96707:51:28"},"returnParameters":{"id":20313,"nodeType":"ParameterList","parameters":[],"src":"96767:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20324,"nodeType":"FunctionDefinition","src":"96856:84:28","nodes":[],"documentation":{"id":20315,"nodeType":"StructuredDocumentation","src":"96774:77:28","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"96865:10:28","parameters":{"id":20322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20317,"mutability":"mutable","name":"callee","nameLocation":"96884:6:28","nodeType":"VariableDeclaration","scope":20324,"src":"96876:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20316,"name":"address","nodeType":"ElementaryTypeName","src":"96876:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20319,"mutability":"mutable","name":"msgValue","nameLocation":"96900:8:28","nodeType":"VariableDeclaration","scope":20324,"src":"96892:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20318,"name":"uint256","nodeType":"ElementaryTypeName","src":"96892:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20321,"mutability":"mutable","name":"data","nameLocation":"96925:4:28","nodeType":"VariableDeclaration","scope":20324,"src":"96910:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20320,"name":"bytes","nodeType":"ElementaryTypeName","src":"96910:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96875:55:28"},"returnParameters":{"id":20323,"nodeType":"ParameterList","parameters":[],"src":"96939:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20336,"nodeType":"FunctionDefinition","src":"97043:98:28","nodes":[],"documentation":{"id":20325,"nodeType":"StructuredDocumentation","src":"96946:92:28","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"97052:10:28","parameters":{"id":20334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20327,"mutability":"mutable","name":"callee","nameLocation":"97071:6:28","nodeType":"VariableDeclaration","scope":20336,"src":"97063:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20326,"name":"address","nodeType":"ElementaryTypeName","src":"97063:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20329,"mutability":"mutable","name":"msgValue","nameLocation":"97087:8:28","nodeType":"VariableDeclaration","scope":20336,"src":"97079:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20328,"name":"uint256","nodeType":"ElementaryTypeName","src":"97079:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20331,"mutability":"mutable","name":"data","nameLocation":"97112:4:28","nodeType":"VariableDeclaration","scope":20336,"src":"97097:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20330,"name":"bytes","nodeType":"ElementaryTypeName","src":"97097:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20333,"mutability":"mutable","name":"count","nameLocation":"97125:5:28","nodeType":"VariableDeclaration","scope":20336,"src":"97118:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20332,"name":"uint64","nodeType":"ElementaryTypeName","src":"97118:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"97062:69:28"},"returnParameters":{"id":20335,"nodeType":"ParameterList","parameters":[],"src":"97140:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20348,"nodeType":"FunctionDefinition","src":"97234:96:28","nodes":[],"documentation":{"id":20337,"nodeType":"StructuredDocumentation","src":"97147:82:28","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"97243:10:28","parameters":{"id":20346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20339,"mutability":"mutable","name":"callee","nameLocation":"97262:6:28","nodeType":"VariableDeclaration","scope":20348,"src":"97254:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20338,"name":"address","nodeType":"ElementaryTypeName","src":"97254:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20341,"mutability":"mutable","name":"msgValue","nameLocation":"97278:8:28","nodeType":"VariableDeclaration","scope":20348,"src":"97270:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20340,"name":"uint256","nodeType":"ElementaryTypeName","src":"97270:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20343,"mutability":"mutable","name":"gas","nameLocation":"97295:3:28","nodeType":"VariableDeclaration","scope":20348,"src":"97288:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20342,"name":"uint64","nodeType":"ElementaryTypeName","src":"97288:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":20345,"mutability":"mutable","name":"data","nameLocation":"97315:4:28","nodeType":"VariableDeclaration","scope":20348,"src":"97300:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20344,"name":"bytes","nodeType":"ElementaryTypeName","src":"97300:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"97253:67:28"},"returnParameters":{"id":20347,"nodeType":"ParameterList","parameters":[],"src":"97329:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20362,"nodeType":"FunctionDefinition","src":"97439:110:28","nodes":[],"documentation":{"id":20349,"nodeType":"StructuredDocumentation","src":"97336:98:28","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"97448:10:28","parameters":{"id":20360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20351,"mutability":"mutable","name":"callee","nameLocation":"97467:6:28","nodeType":"VariableDeclaration","scope":20362,"src":"97459:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20350,"name":"address","nodeType":"ElementaryTypeName","src":"97459:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20353,"mutability":"mutable","name":"msgValue","nameLocation":"97483:8:28","nodeType":"VariableDeclaration","scope":20362,"src":"97475:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20352,"name":"uint256","nodeType":"ElementaryTypeName","src":"97475:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20355,"mutability":"mutable","name":"gas","nameLocation":"97500:3:28","nodeType":"VariableDeclaration","scope":20362,"src":"97493:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20354,"name":"uint64","nodeType":"ElementaryTypeName","src":"97493:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":20357,"mutability":"mutable","name":"data","nameLocation":"97520:4:28","nodeType":"VariableDeclaration","scope":20362,"src":"97505:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20356,"name":"bytes","nodeType":"ElementaryTypeName","src":"97505:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20359,"mutability":"mutable","name":"count","nameLocation":"97533:5:28","nodeType":"VariableDeclaration","scope":20362,"src":"97526:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20358,"name":"uint64","nodeType":"ElementaryTypeName","src":"97526:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"97458:81:28"},"returnParameters":{"id":20361,"nodeType":"ParameterList","parameters":[],"src":"97548:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20376,"nodeType":"FunctionDefinition","src":"97908:134:28","nodes":[],"documentation":{"id":20363,"nodeType":"StructuredDocumentation","src":"97555:348:28","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"97917:19:28","parameters":{"id":20374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20365,"mutability":"mutable","name":"checkTopic0","nameLocation":"97942:11:28","nodeType":"VariableDeclaration","scope":20376,"src":"97937:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20364,"name":"bool","nodeType":"ElementaryTypeName","src":"97937:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20367,"mutability":"mutable","name":"checkTopic1","nameLocation":"97960:11:28","nodeType":"VariableDeclaration","scope":20376,"src":"97955:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20366,"name":"bool","nodeType":"ElementaryTypeName","src":"97955:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20369,"mutability":"mutable","name":"checkTopic2","nameLocation":"97978:11:28","nodeType":"VariableDeclaration","scope":20376,"src":"97973:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20368,"name":"bool","nodeType":"ElementaryTypeName","src":"97973:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20371,"mutability":"mutable","name":"checkTopic3","nameLocation":"97996:11:28","nodeType":"VariableDeclaration","scope":20376,"src":"97991:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20370,"name":"bool","nodeType":"ElementaryTypeName","src":"97991:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20373,"mutability":"mutable","name":"checkData","nameLocation":"98014:9:28","nodeType":"VariableDeclaration","scope":20376,"src":"98009:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20372,"name":"bool","nodeType":"ElementaryTypeName","src":"98009:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"97936:88:28"},"returnParameters":{"id":20375,"nodeType":"ParameterList","parameters":[],"src":"98041:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20392,"nodeType":"FunctionDefinition","src":"98145:197:28","nodes":[],"documentation":{"id":20377,"nodeType":"StructuredDocumentation","src":"98048:92:28","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"98154:19:28","parameters":{"id":20390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20379,"mutability":"mutable","name":"checkTopic0","nameLocation":"98188:11:28","nodeType":"VariableDeclaration","scope":20392,"src":"98183:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20378,"name":"bool","nodeType":"ElementaryTypeName","src":"98183:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20381,"mutability":"mutable","name":"checkTopic1","nameLocation":"98214:11:28","nodeType":"VariableDeclaration","scope":20392,"src":"98209:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20380,"name":"bool","nodeType":"ElementaryTypeName","src":"98209:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20383,"mutability":"mutable","name":"checkTopic2","nameLocation":"98240:11:28","nodeType":"VariableDeclaration","scope":20392,"src":"98235:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20382,"name":"bool","nodeType":"ElementaryTypeName","src":"98235:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20385,"mutability":"mutable","name":"checkTopic3","nameLocation":"98266:11:28","nodeType":"VariableDeclaration","scope":20392,"src":"98261:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20384,"name":"bool","nodeType":"ElementaryTypeName","src":"98261:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20387,"mutability":"mutable","name":"checkData","nameLocation":"98292:9:28","nodeType":"VariableDeclaration","scope":20392,"src":"98287:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20386,"name":"bool","nodeType":"ElementaryTypeName","src":"98287:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20389,"mutability":"mutable","name":"emitter","nameLocation":"98319:7:28","nodeType":"VariableDeclaration","scope":20392,"src":"98311:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20388,"name":"address","nodeType":"ElementaryTypeName","src":"98311:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"98173:159:28"},"returnParameters":{"id":20391,"nodeType":"ParameterList","parameters":[],"src":"98341:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20396,"nodeType":"FunctionDefinition","src":"98632:40:28","nodes":[],"documentation":{"id":20393,"nodeType":"StructuredDocumentation","src":"98348:279:28","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"98641:19:28","parameters":{"id":20394,"nodeType":"ParameterList","parameters":[],"src":"98660:2:28"},"returnParameters":{"id":20395,"nodeType":"ParameterList","parameters":[],"src":"98671:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20402,"nodeType":"FunctionDefinition","src":"98775:55:28","nodes":[],"documentation":{"id":20397,"nodeType":"StructuredDocumentation","src":"98678:92:28","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"98784:19:28","parameters":{"id":20400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20399,"mutability":"mutable","name":"emitter","nameLocation":"98812:7:28","nodeType":"VariableDeclaration","scope":20402,"src":"98804:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20398,"name":"address","nodeType":"ElementaryTypeName","src":"98804:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"98803:17:28"},"returnParameters":{"id":20401,"nodeType":"ParameterList","parameters":[],"src":"98829:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20414,"nodeType":"FunctionDefinition","src":"99169:99:28","nodes":[],"documentation":{"id":20403,"nodeType":"StructuredDocumentation","src":"98836:328:28","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"99178:10:28","parameters":{"id":20412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20405,"mutability":"mutable","name":"checkTopic1","nameLocation":"99194:11:28","nodeType":"VariableDeclaration","scope":20414,"src":"99189:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20404,"name":"bool","nodeType":"ElementaryTypeName","src":"99189:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20407,"mutability":"mutable","name":"checkTopic2","nameLocation":"99212:11:28","nodeType":"VariableDeclaration","scope":20414,"src":"99207:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20406,"name":"bool","nodeType":"ElementaryTypeName","src":"99207:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20409,"mutability":"mutable","name":"checkTopic3","nameLocation":"99230:11:28","nodeType":"VariableDeclaration","scope":20414,"src":"99225:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20408,"name":"bool","nodeType":"ElementaryTypeName","src":"99225:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20411,"mutability":"mutable","name":"checkData","nameLocation":"99248:9:28","nodeType":"VariableDeclaration","scope":20414,"src":"99243:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20410,"name":"bool","nodeType":"ElementaryTypeName","src":"99243:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"99188:70:28"},"returnParameters":{"id":20413,"nodeType":"ParameterList","parameters":[],"src":"99267:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20428,"nodeType":"FunctionDefinition","src":"99371:124:28","nodes":[],"documentation":{"id":20415,"nodeType":"StructuredDocumentation","src":"99274:92:28","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"99380:10:28","parameters":{"id":20426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20417,"mutability":"mutable","name":"checkTopic1","nameLocation":"99396:11:28","nodeType":"VariableDeclaration","scope":20428,"src":"99391:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20416,"name":"bool","nodeType":"ElementaryTypeName","src":"99391:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20419,"mutability":"mutable","name":"checkTopic2","nameLocation":"99414:11:28","nodeType":"VariableDeclaration","scope":20428,"src":"99409:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20418,"name":"bool","nodeType":"ElementaryTypeName","src":"99409:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20421,"mutability":"mutable","name":"checkTopic3","nameLocation":"99432:11:28","nodeType":"VariableDeclaration","scope":20428,"src":"99427:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20420,"name":"bool","nodeType":"ElementaryTypeName","src":"99427:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20423,"mutability":"mutable","name":"checkData","nameLocation":"99450:9:28","nodeType":"VariableDeclaration","scope":20428,"src":"99445:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20422,"name":"bool","nodeType":"ElementaryTypeName","src":"99445:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20425,"mutability":"mutable","name":"emitter","nameLocation":"99469:7:28","nodeType":"VariableDeclaration","scope":20428,"src":"99461:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20424,"name":"address","nodeType":"ElementaryTypeName","src":"99461:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"99390:87:28"},"returnParameters":{"id":20427,"nodeType":"ParameterList","parameters":[],"src":"99494:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20432,"nodeType":"FunctionDefinition","src":"99765:31:28","nodes":[],"documentation":{"id":20429,"nodeType":"StructuredDocumentation","src":"99501:259:28","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"99774:10:28","parameters":{"id":20430,"nodeType":"ParameterList","parameters":[],"src":"99784:2:28"},"returnParameters":{"id":20431,"nodeType":"ParameterList","parameters":[],"src":"99795:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20438,"nodeType":"FunctionDefinition","src":"99899:46:28","nodes":[],"documentation":{"id":20433,"nodeType":"StructuredDocumentation","src":"99802:92:28","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"99908:10:28","parameters":{"id":20436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20435,"mutability":"mutable","name":"emitter","nameLocation":"99927:7:28","nodeType":"VariableDeclaration","scope":20438,"src":"99919:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20434,"name":"address","nodeType":"ElementaryTypeName","src":"99919:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"99918:17:28"},"returnParameters":{"id":20437,"nodeType":"ParameterList","parameters":[],"src":"99944:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20444,"nodeType":"FunctionDefinition","src":"100023:57:28","nodes":[],"documentation":{"id":20439,"nodeType":"StructuredDocumentation","src":"99951:67:28","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"11fb5b9c","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"100032:19:28","parameters":{"id":20442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20441,"mutability":"mutable","name":"revertData","nameLocation":"100059:10:28","nodeType":"VariableDeclaration","scope":20444,"src":"100052:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20440,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100052:6:28","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"100051:19:28"},"returnParameters":{"id":20443,"nodeType":"ParameterList","parameters":[],"src":"100079:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20452,"nodeType":"FunctionDefinition","src":"100179:75:28","nodes":[],"documentation":{"id":20445,"nodeType":"StructuredDocumentation","src":"100086:88:28","text":"Expects an error on next call to reverter address, that starts with the revert data."},"functionSelector":"51aa008a","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"100188:19:28","parameters":{"id":20450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20447,"mutability":"mutable","name":"revertData","nameLocation":"100215:10:28","nodeType":"VariableDeclaration","scope":20452,"src":"100208:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20446,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100208:6:28","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":20449,"mutability":"mutable","name":"reverter","nameLocation":"100235:8:28","nodeType":"VariableDeclaration","scope":20452,"src":"100227:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20448,"name":"address","nodeType":"ElementaryTypeName","src":"100227:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"100207:37:28"},"returnParameters":{"id":20451,"nodeType":"ParameterList","parameters":[],"src":"100253:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20456,"nodeType":"FunctionDefinition","src":"100320:33:28","nodes":[],"documentation":{"id":20453,"nodeType":"StructuredDocumentation","src":"100260:55:28","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"100329:12:28","parameters":{"id":20454,"nodeType":"ParameterList","parameters":[],"src":"100341:2:28"},"returnParameters":{"id":20455,"nodeType":"ParameterList","parameters":[],"src":"100352:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20462,"nodeType":"FunctionDefinition","src":"100435:50:28","nodes":[],"documentation":{"id":20457,"nodeType":"StructuredDocumentation","src":"100359:71:28","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"100444:12:28","parameters":{"id":20460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20459,"mutability":"mutable","name":"revertData","nameLocation":"100464:10:28","nodeType":"VariableDeclaration","scope":20462,"src":"100457:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20458,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100457:6:28","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"100456:19:28"},"returnParameters":{"id":20461,"nodeType":"ParameterList","parameters":[],"src":"100484:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20468,"nodeType":"FunctionDefinition","src":"100567:58:28","nodes":[],"documentation":{"id":20463,"nodeType":"StructuredDocumentation","src":"100491:71:28","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"100576:12:28","parameters":{"id":20466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20465,"mutability":"mutable","name":"revertData","nameLocation":"100604:10:28","nodeType":"VariableDeclaration","scope":20468,"src":"100589:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20464,"name":"bytes","nodeType":"ElementaryTypeName","src":"100589:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"100588:27:28"},"returnParameters":{"id":20467,"nodeType":"ParameterList","parameters":[],"src":"100624:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20474,"nodeType":"FunctionDefinition","src":"100711:49:28","nodes":[],"documentation":{"id":20469,"nodeType":"StructuredDocumentation","src":"100631:75:28","text":"Expects an error with any revert data on next call to reverter address."},"functionSelector":"d814f38a","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"100720:12:28","parameters":{"id":20472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20471,"mutability":"mutable","name":"reverter","nameLocation":"100741:8:28","nodeType":"VariableDeclaration","scope":20474,"src":"100733:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20470,"name":"address","nodeType":"ElementaryTypeName","src":"100733:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"100732:18:28"},"returnParameters":{"id":20473,"nodeType":"ParameterList","parameters":[],"src":"100759:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20482,"nodeType":"FunctionDefinition","src":"100849:68:28","nodes":[],"documentation":{"id":20475,"nodeType":"StructuredDocumentation","src":"100766:78:28","text":"Expects an error from reverter address on next call, with any revert data."},"functionSelector":"260bc5de","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"100858:12:28","parameters":{"id":20480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20477,"mutability":"mutable","name":"revertData","nameLocation":"100878:10:28","nodeType":"VariableDeclaration","scope":20482,"src":"100871:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":20476,"name":"bytes4","nodeType":"ElementaryTypeName","src":"100871:6:28","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":20479,"mutability":"mutable","name":"reverter","nameLocation":"100898:8:28","nodeType":"VariableDeclaration","scope":20482,"src":"100890:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20478,"name":"address","nodeType":"ElementaryTypeName","src":"100890:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"100870:37:28"},"returnParameters":{"id":20481,"nodeType":"ParameterList","parameters":[],"src":"100916:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20490,"nodeType":"FunctionDefinition","src":"101022:76:28","nodes":[],"documentation":{"id":20483,"nodeType":"StructuredDocumentation","src":"100923:94:28","text":"Expects an error from reverter address on next call, that exactly matches the revert data."},"functionSelector":"61ebcf12","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"101031:12:28","parameters":{"id":20488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20485,"mutability":"mutable","name":"revertData","nameLocation":"101059:10:28","nodeType":"VariableDeclaration","scope":20490,"src":"101044:25:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":20484,"name":"bytes","nodeType":"ElementaryTypeName","src":"101044:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20487,"mutability":"mutable","name":"reverter","nameLocation":"101079:8:28","nodeType":"VariableDeclaration","scope":20490,"src":"101071:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20486,"name":"address","nodeType":"ElementaryTypeName","src":"101071:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101043:45:28"},"returnParameters":{"id":20489,"nodeType":"ParameterList","parameters":[],"src":"101097:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20498,"nodeType":"FunctionDefinition","src":"101327:59:28","nodes":[],"documentation":{"id":20491,"nodeType":"StructuredDocumentation","src":"101104:218:28","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"101336:16:28","parameters":{"id":20496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20493,"mutability":"mutable","name":"min","nameLocation":"101360:3:28","nodeType":"VariableDeclaration","scope":20498,"src":"101353:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20492,"name":"uint64","nodeType":"ElementaryTypeName","src":"101353:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":20495,"mutability":"mutable","name":"max","nameLocation":"101372:3:28","nodeType":"VariableDeclaration","scope":20498,"src":"101365:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20494,"name":"uint64","nodeType":"ElementaryTypeName","src":"101365:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"101352:24:28"},"returnParameters":{"id":20497,"nodeType":"ParameterList","parameters":[],"src":"101385:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20506,"nodeType":"FunctionDefinition","src":"101628:63:28","nodes":[],"documentation":{"id":20499,"nodeType":"StructuredDocumentation","src":"101392:231:28","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"101637:20:28","parameters":{"id":20504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20501,"mutability":"mutable","name":"min","nameLocation":"101665:3:28","nodeType":"VariableDeclaration","scope":20506,"src":"101658:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20500,"name":"uint64","nodeType":"ElementaryTypeName","src":"101658:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":20503,"mutability":"mutable","name":"max","nameLocation":"101677:3:28","nodeType":"VariableDeclaration","scope":20506,"src":"101670:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":20502,"name":"uint64","nodeType":"ElementaryTypeName","src":"101670:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"101657:24:28"},"returnParameters":{"id":20505,"nodeType":"ParameterList","parameters":[],"src":"101690:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20512,"nodeType":"FunctionDefinition","src":"101773:38:28","nodes":[],"documentation":{"id":20507,"nodeType":"StructuredDocumentation","src":"101697:71:28","text":"Marks a test as skipped. Must be called at the top level of a test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"101782:4:28","parameters":{"id":20510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20509,"mutability":"mutable","name":"skipTest","nameLocation":"101792:8:28","nodeType":"VariableDeclaration","scope":20512,"src":"101787:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20508,"name":"bool","nodeType":"ElementaryTypeName","src":"101787:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"101786:15:28"},"returnParameters":{"id":20511,"nodeType":"ParameterList","parameters":[],"src":"101810:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20520,"nodeType":"FunctionDefinition","src":"101907:62:28","nodes":[],"documentation":{"id":20513,"nodeType":"StructuredDocumentation","src":"101817:85:28","text":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"functionSelector":"c42a80a7","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"101916:4:28","parameters":{"id":20518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20515,"mutability":"mutable","name":"skipTest","nameLocation":"101926:8:28","nodeType":"VariableDeclaration","scope":20520,"src":"101921:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20514,"name":"bool","nodeType":"ElementaryTypeName","src":"101921:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":20517,"mutability":"mutable","name":"reason","nameLocation":"101952:6:28","nodeType":"VariableDeclaration","scope":20520,"src":"101936:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":20516,"name":"string","nodeType":"ElementaryTypeName","src":"101936:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"101920:39:28"},"returnParameters":{"id":20519,"nodeType":"ParameterList","parameters":[],"src":"101968:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":20524,"nodeType":"FunctionDefinition","src":"102044:41:28","nodes":[],"documentation":{"id":20521,"nodeType":"StructuredDocumentation","src":"101975:64:28","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"102053:20:28","parameters":{"id":20522,"nodeType":"ParameterList","parameters":[],"src":"102073:2:28"},"returnParameters":{"id":20523,"nodeType":"ParameterList","parameters":[],"src":"102084:0:28"},"scope":20525,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":19824,"name":"VmSafe","nameLocations":["84677:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":19822,"src":"84677:6:28"},"id":19825,"nodeType":"InheritanceSpecifier","src":"84677:6:28"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":19823,"nodeType":"StructuredDocumentation","src":"84490:171:28","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[20525,19822],"name":"Vm","nameLocation":"84671:2:28","scope":20526,"usedErrors":[]}],"license":"MIT OR Apache-2.0"},"id":28}